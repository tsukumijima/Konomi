{"version":3,"file":"assets/js/app.19bacf46.js","mappings":"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","sources":["webpack://KonomiTV/./src/App.vue","webpack://KonomiTV/./src/App.vue?74c6","webpack://KonomiTV/./src/components/Vuetify/VTabItem.ts","webpack://KonomiTV/./src/components/Vuetify/VTabsBar.ts","webpack://KonomiTV/./src/components/Vuetify/VTabs.ts","webpack://KonomiTV/./src/components/Vuetify/VTabsItems.ts","webpack://KonomiTV/./src/plugins/vuetify.ts","webpack://KonomiTV/./src/utils/Utils.ts","webpack://KonomiTV/./src/utils/ChannelUtils.ts","webpack://KonomiTV/./src/message.ts","webpack://KonomiTV/./src/services/Users.ts","webpack://KonomiTV/./src/stores/UserStore.ts","webpack://KonomiTV/./src/services/APIClient.ts","webpack://KonomiTV/./src/services/Settings.ts","webpack://KonomiTV/./src/stores/SettingsStore.ts","webpack://KonomiTV/./src/utils/CommentUtils.ts","webpack://KonomiTV/./src/utils/PlayerUtils.ts","webpack://KonomiTV/./src/utils/ProgramUtils.ts","webpack://KonomiTV/./src/utils/index.ts","webpack://KonomiTV/./src/views/Login.vue","webpack://KonomiTV/./src/components/Header.vue","webpack://KonomiTV/./src/components/Header.vue?5d06","webpack://KonomiTV/./src/components/Navigation.vue","webpack://KonomiTV/./src/components/BottomNavigation.vue","webpack://KonomiTV/./src/components/BottomNavigation.vue?ff7d","webpack://KonomiTV/./src/services/Version.ts","webpack://KonomiTV/./src/stores/VersionStore.ts","webpack://KonomiTV/src/components/Navigation.vue","webpack://KonomiTV/./src/components/Navigation.vue?018b","webpack://KonomiTV/./src/components/Navigation.vue?bd43","webpack://KonomiTV/src/views/Login.vue","webpack://KonomiTV/./src/views/Login.vue?1e11","webpack://KonomiTV/./src/views/Login.vue?f5d0","webpack://KonomiTV/./src/views/NotFound.vue","webpack://KonomiTV/src/views/NotFound.vue","webpack://KonomiTV/./src/views/NotFound.vue?8eb5","webpack://KonomiTV/./src/views/NotFound.vue?dbe0","webpack://KonomiTV/./src/views/Register.vue","webpack://KonomiTV/src/views/Register.vue","webpack://KonomiTV/./src/views/Register.vue?e0a4","webpack://KonomiTV/./src/views/Register.vue?709e","webpack://KonomiTV/./src/views/Settings/Account.vue","webpack://KonomiTV/./src/views/Settings/Base.vue","webpack://KonomiTV/src/views/Settings/Base.vue","webpack://KonomiTV/./src/views/Settings/Base.vue?3069","webpack://KonomiTV/./src/views/Settings/Base.vue?13e1","webpack://KonomiTV/src/views/Settings/Account.vue","webpack://KonomiTV/./src/views/Settings/Account.vue?a57f","webpack://KonomiTV/./src/views/Settings/Account.vue?d79e","webpack://KonomiTV/./src/views/Settings/Caption.vue","webpack://KonomiTV/src/views/Settings/Caption.vue","webpack://KonomiTV/./src/views/Settings/Caption.vue?a351","webpack://KonomiTV/./src/views/Settings/Caption.vue?3a40","webpack://KonomiTV/./src/views/Settings/Capture.vue","webpack://KonomiTV/src/views/Settings/Capture.vue","webpack://KonomiTV/./src/views/Settings/Capture.vue?64fc","webpack://KonomiTV/./src/views/Settings/Capture.vue?6493","webpack://KonomiTV/./src/views/Settings/DataBroadcasting.vue","webpack://KonomiTV/src/views/Settings/DataBroadcasting.vue","webpack://KonomiTV/./src/views/Settings/DataBroadcasting.vue?13a1","webpack://KonomiTV/./src/views/Settings/DataBroadcasting.vue?a0d2","webpack://KonomiTV/./src/views/Settings/General.vue","webpack://KonomiTV/src/views/Settings/General.vue","webpack://KonomiTV/./src/views/Settings/General.vue?74e9","webpack://KonomiTV/./src/views/Settings/General.vue?1430","webpack://KonomiTV/./src/views/Settings/Index.vue","webpack://KonomiTV/src/views/Settings/Index.vue","webpack://KonomiTV/./src/views/Settings/Index.vue?1f82","webpack://KonomiTV/./src/views/Settings/Index.vue?ea37","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue","webpack://KonomiTV/src/components/Settings/CommentMuteSettings.vue","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?68d1","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?5678","webpack://KonomiTV/./src/services/Niconico.ts","webpack://KonomiTV/src/views/Settings/Jikkyo.vue","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?089f","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?e1ab","webpack://KonomiTV/./src/views/Settings/Server.vue","webpack://KonomiTV/src/views/Settings/Server.vue","webpack://KonomiTV/./src/views/Settings/Server.vue?80ef","webpack://KonomiTV/./src/views/Settings/Server.vue?c8b5","webpack://KonomiTV/./src/views/Settings/Twitter.vue","webpack://KonomiTV/./src/services/Twitter.ts","webpack://KonomiTV/src/views/Settings/Twitter.vue","webpack://KonomiTV/./src/views/Settings/Twitter.vue?b368","webpack://KonomiTV/./src/views/Settings/Twitter.vue?8f70","webpack://KonomiTV/./src/views/TV/Home.vue","webpack://KonomiTV/./src/services/Programs.ts","webpack://KonomiTV/./src/services/Channels.ts","webpack://KonomiTV/./src/stores/ChannelsStore.ts","webpack://KonomiTV/src/views/TV/Home.vue","webpack://KonomiTV/./src/views/TV/Home.vue?1175","webpack://KonomiTV/./src/views/TV/Home.vue?6763","webpack://KonomiTV/./src/views/TV/Watch.vue","webpack://KonomiTV/./src/components/Panel/Channel.vue","webpack://KonomiTV/src/components/Panel/Channel.vue","webpack://KonomiTV/./src/components/Panel/Channel.vue?d2e4","webpack://KonomiTV/./src/components/Panel/Channel.vue?d5d3","webpack://KonomiTV/./src/components/Panel/Comment.vue","webpack://KonomiTV/./src/services/player/managers/LiveCommentManager.ts","webpack://KonomiTV/src/components/Panel/Comment.vue","webpack://KonomiTV/./src/components/Panel/Comment.vue?67a8","webpack://KonomiTV/./src/components/Panel/Comment.vue?ffda","webpack://KonomiTV/./src/components/Panel/Program.vue","webpack://KonomiTV/src/components/Panel/Program.vue","webpack://KonomiTV/./src/components/Panel/Program.vue?86b1","webpack://KonomiTV/./src/components/Panel/Program.vue?393d","webpack://KonomiTV/./src/components/Panel/Remocon.vue","webpack://KonomiTV/src/components/Panel/Remocon.vue","webpack://KonomiTV/./src/components/Panel/Remocon.vue?b8f2","webpack://KonomiTV/./src/components/Panel/Remocon.vue?b5eb","webpack://KonomiTV/./src/components/Panel/Twitter.vue","webpack://KonomiTV/./src/services/Videos.ts","webpack://KonomiTV/./src/stores/PlayerStore.ts","webpack://KonomiTV/src/components/Panel/Twitter.vue","webpack://KonomiTV/./src/components/Panel/Twitter.vue?5a5e","webpack://KonomiTV/./src/components/Panel/Twitter.vue?82e1","webpack://KonomiTV/./src/services/Captures.ts","webpack://KonomiTV/./src/services/player/managers/CaptureManager.ts","webpack://KonomiTV/./src/workers/LivePSIArchivedDataDecoderProxy.ts","webpack://KonomiTV/./src/services/player/managers/LiveDataBroadcastingManager.ts","webpack://KonomiTV/src/views/TV/Watch.vue","webpack://KonomiTV/./src/views/TV/Watch.vue?ad13","webpack://KonomiTV/./src/views/TV/Watch.vue?f307","webpack://KonomiTV/./src/views/TV/Watch2.vue","webpack://KonomiTV/./src/components/Panel/Comment2.vue","webpack://KonomiTV/src/components/Panel/Comment2.vue","webpack://KonomiTV/./src/components/Panel/Comment2.vue?3712","webpack://KonomiTV/./src/components/Panel/Comment2.vue?8904","webpack://KonomiTV/./src/workers/CaptureCompositorProxy.ts","webpack://KonomiTV/./src/services/player/managers/CaptureManager2.ts","webpack://KonomiTV/./src/services/player/managers/LiveCommentManager2.ts","webpack://KonomiTV/./src/services/player/managers/LiveEventManager.ts","webpack://KonomiTV/./src/services/player/managers/MediaSessionManager.ts","webpack://KonomiTV/./src/services/player/PlayerWrapper.ts","webpack://KonomiTV/src/views/TV/Watch2.vue","webpack://KonomiTV/./src/views/TV/Watch2.vue?f5b0","webpack://KonomiTV/./src/views/TV/Watch2.vue?8e14","webpack://KonomiTV/./src/router/index.ts","webpack://KonomiTV/./src/service-worker.ts","webpack://KonomiTV/./src/main.ts","webpack://KonomiTV/webpack/bootstrap","webpack://KonomiTV/webpack/runtime/chunk loaded","webpack://KonomiTV/webpack/runtime/compat get default export","webpack://KonomiTV/webpack/runtime/define property getters","webpack://KonomiTV/webpack/runtime/get javascript chunk filename","webpack://KonomiTV/webpack/runtime/global","webpack://KonomiTV/webpack/runtime/hasOwnProperty shorthand","webpack://KonomiTV/webpack/runtime/make namespace object","webpack://KonomiTV/webpack/runtime/node module decorator","webpack://KonomiTV/webpack/runtime/publicPath","webpack://KonomiTV/webpack/runtime/jsonp chunk loading","webpack://KonomiTV/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',{attrs:{\"id\":\"app\"}},[_c('transition',[_c('router-view')],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=1467b4b5\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&id=1467b4b5&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\nimport { VueConstructor, VNode } from 'vue';\r\nimport VTabItem from 'vuetify/lib/components/VTabs/VTabItem';\r\n\r\n// VTabItem は VWindowItem を extend() して実装されている\r\nexport default (VTabItem as VueConstructor).extend({\r\n    render (h): VNode {\r\n        return h('transition', {\r\n            props: {\r\n                name: (this as any).computedTransition,\r\n            },\r\n            on: {\r\n                // Handlers for enter windows.\r\n                beforeEnter: (this as any).onBeforeTransition,\r\n                afterEnter: (this as any).onAfterTransition,\r\n                enterCancelled: (this as any).onTransitionCancelled,\r\n\r\n                // Handlers for leave windows.\r\n                beforeLeave: (this as any).onBeforeTransition,\r\n                afterLeave: (this as any).onAfterTransition,\r\n                leaveCancelled: (this as any).onTransitionCancelled,\r\n\r\n                // Enter handler for height transition.\r\n                enter: (this as any).onEnter,\r\n            }\r\n        // this.showLazyContent() を通さずに常にレンダリングされるようにする\r\n        // 本来は実際に表示されている時だけレンダリングし、負荷を減らすための処理\r\n        // ただチャンネルリストのレンダリングは重いので、最初からレンダリングされていた方がタブの初回切り替えが早くなる\r\n        }, [(this as any).genWindowItem()]);\r\n    }\r\n});\r\n","\r\nimport { VueConstructor } from 'vue';\r\nimport { GroupableInstance } from 'vuetify/lib/components/VItemGroup/VItemGroup';\r\nimport VTabsBar from 'vuetify/lib/components/VTabs/VTabsBar';\r\n\r\n// VTabsBar は VItemGroup を extend() して実装されている\r\nexport default (VTabsBar as VueConstructor).extend({\r\n    data() {\r\n        return {\r\n            // 一応型定義をしておく\r\n            items: [] as GroupableInstance[],\r\n        };\r\n    },\r\n    methods: {\r\n\r\n        // タブのデータ配列の先頭に新しい要素が追加されるとそのタブのアニメーションの向きが逆になるバグがあるので、VItemGroup 側の挙動をオーバーライドする\r\n        // DOM 上も VNode 上も正しい順序で並んでいるが、this.items に関しては追加された順になっていてしまっていて齟齬が発生するのが原因\r\n        // ref: https://github.com/vuetifyjs/vuetify/issues/13862\r\n        register(item: GroupableInstance) {\r\n\r\n            // 現在アクティブなタブの VueComponent を取得\r\n            const activeItem = this.items[(this as any).internalIndex];\r\n\r\n            // 要素を items に追加\r\n            this.items.push(item);\r\n\r\n            // this.$slots.default に VNode が、items には単に VueComponent が入っているので、事前に VNode の順番に合わせて並べ替える\r\n            // こうすることで、追加された順ではなく元のデータ配列通りの順番になる\r\n            this.items.sort((a, b) => {\r\n\r\n                // VueComponent の key が一致する this.$slots.default 内の VNode を探す\r\n                const index_a = this.$slots.default!.findIndex((element) => {\r\n                    return a.$vnode.key === element.key;\r\n                });\r\n                const index_b = this.$slots.default!.findIndex((element) => {\r\n                    return b.$vnode.key === element.key;\r\n                });\r\n\r\n                // index 順で並び替え\r\n                return index_a - index_b;\r\n            });\r\n\r\n            item.$on('change', () => (this as any).onClick(item));\r\n            if ((this as any).mandatory && !(this as any).selectedValues.length) {\r\n                (this as any).updateMandatory();\r\n            }\r\n\r\n            // 追加された要素のソート後のインデックスを取得して更新する\r\n            (this as any).updateItem(item, this.items.indexOf(item));\r\n\r\n            // ソート後の現在アクティブなタブのインデックスを取得し直し、設定する\r\n            // 配列の末尾以外に追加された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\r\n            if (activeItem !== undefined) {\r\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\r\n            }\r\n        },\r\n\r\n        unregister(item: GroupableInstance) {\r\n\r\n            // 現在アクティブなタブの VueComponent を取得\r\n            const activeItem = this.items[(this as any).internalIndex];\r\n\r\n            // 継承元の unregister() の処理を呼び出す（いわゆる super() ）\r\n            // ref: https://github.com/vuejs/vue/issues/2977\r\n            (this.constructor as any).super.options.methods.unregister.call(this, item);\r\n\r\n            // 配列の末尾以外から削除された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\r\n            if (activeItem !== undefined) {\r\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\r\n            }\r\n        }\r\n    }\r\n});\r\n","\r\nimport { VueConstructor, VNode } from 'vue';\r\nimport VTabs from 'vuetify/lib/components/VTabs/VTabs';\r\nimport { convertToUnit } from 'vuetify/lib/util/helpers';\r\n\r\nimport VTabsBar from '@/components/Vuetify/VTabsBar';\r\n\r\nexport default (VTabs as VueConstructor).extend({\r\n    methods: {\r\n\r\n        // VTabsBar は VTabs から暗黙的に生成されるコンポーネントのため、直接上書きすることができない\r\n        // そこで VTabs 自体も上書きし、VTabs で $createElement() される時の VTabsBar を自前でオーバーライドしたものに差し替える\r\n        // ビルド済みのファイルには型定義が入っていないので any を多用せざるを得ない…\r\n        genBar(items: VNode[], slider: VNode | null) {\r\n            const data = {\r\n                style: {\r\n                    height: convertToUnit((this as any).height),\r\n                },\r\n                props: {\r\n                    activeClass: (this as any).activeClass,\r\n                    centerActive: (this as any).centerActive,\r\n                    dark: (this as any).dark,\r\n                    light: (this as any).light,\r\n                    mandatory: !(this as any).optional,\r\n                    mobileBreakpoint: (this as any).mobileBreakpoint,\r\n                    nextIcon: (this as any).nextIcon,\r\n                    prevIcon: (this as any).prevIcon,\r\n                    showArrows: (this as any).showArrows,\r\n                    value: (this as any).internalValue,\r\n                },\r\n                on: {\r\n                    'call:slider': (this as any).callSlider,\r\n                    change: (val: any) => {\r\n                        (this as any).internalValue = val;\r\n                    },\r\n                },\r\n                ref: 'items',\r\n            };\r\n\r\n            (this as any).setTextColor((this as any).computedColor, data);\r\n            (this as any).setBackgroundColor((this as any).backgroundColor, data);\r\n\r\n            // ここでオーバーライドした VTabsBar を使うのが最重要\r\n            // これをやるためだけにわざわざ VTabs に関してもオーバーライドする羽目になってる…\r\n            return (this as any).$createElement(VTabsBar, data, [\r\n                (this as any).genSlider(slider),\r\n                items,\r\n            ]);\r\n        }\r\n    }\r\n});\r\n","\r\nimport { VueConstructor } from 'vue';\r\nimport { GroupableInstance } from 'vuetify/lib/components/VItemGroup/VItemGroup';\r\nimport VTabsItems from 'vuetify/lib/components/VTabs/VTabsItems';\r\n\r\n// VTabsItems は VItemGroup と VWindow を extend() して実装されている\r\nexport default (VTabsItems as VueConstructor).extend({\r\n    data() {\r\n        return {\r\n            // 一応型定義をしておく\r\n            items: [] as GroupableInstance[],\r\n        };\r\n    },\r\n    methods: {\r\n\r\n        // タブのデータ配列の先頭に新しい要素が追加されるとそのタブのアニメーションの向きが逆になるバグがあるので、VItemGroup 側の挙動をオーバーライドする\r\n        // DOM 上も VNode 上も正しい順序で並んでいるが、this.items に関しては追加された順になっていてしまっていて齟齬が発生するのが原因\r\n        // ref: https://github.com/vuetifyjs/vuetify/issues/13862\r\n        register(item: GroupableInstance) {\r\n\r\n            // 現在アクティブなタブの VueComponent を取得\r\n            const activeItem = this.items[(this as any).internalIndex];\r\n\r\n            // 要素を items に追加\r\n            this.items.push(item);\r\n\r\n            // this.$slots.default に VNode が、items には単に VueComponent が入っているので、事前に VNode の順番に合わせて並べ替える\r\n            // こうすることで、追加された順ではなく元のデータ配列通りの順番になる\r\n            this.items.sort((a, b) => {\r\n\r\n                // VueComponent の key が一致する this.$slots.default 内の VNode を探す\r\n                const index_a = this.$slots.default!.findIndex((element) => {\r\n                    return a.$vnode.key === element.key;\r\n                });\r\n                const index_b = this.$slots.default!.findIndex((element) => {\r\n                    return b.$vnode.key === element.key;\r\n                });\r\n\r\n                // index 順で並び替え\r\n                return index_a - index_b;\r\n            });\r\n\r\n            item.$on('change', () => (this as any).onClick(item));\r\n            if ((this as any).mandatory && !(this as any).selectedValues.length) {\r\n                (this as any).updateMandatory();\r\n            }\r\n\r\n            // 追加された要素のソート後のインデックスを取得して更新する\r\n            (this as any).updateItem(item, this.items.indexOf(item));\r\n\r\n            // ソート後の現在アクティブなタブのインデックスを取得し直し、設定する\r\n            // 配列の末尾以外に追加された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\r\n            if (activeItem !== undefined) {\r\n                // 値が異なるときだけ更新する\r\n                // こうしないと、Safari で変なアニメーションがついてしまう\r\n                if (this.items.indexOf(activeItem) !== (this as any).internalValue) {\r\n                    (this as any).updateInternalValue(this.items.indexOf(activeItem));\r\n                }\r\n            }\r\n        },\r\n\r\n        unregister(item: GroupableInstance) {\r\n\r\n            // 現在アクティブなタブの VueComponent を取得\r\n            const activeItem = this.items[(this as any).internalIndex];\r\n\r\n            // 継承元の unregister() の処理を呼び出す（いわゆる super() ）\r\n            // ref: https://github.com/vuejs/vue/issues/2977\r\n            (this.constructor as any).super.options.methods.unregister.call(this, item);\r\n\r\n            // 配列の末尾以外から削除された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\r\n            if (activeItem !== undefined) {\r\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\r\n            }\r\n        },\r\n\r\n        // 最初のタブから最後のタブに遷移するとアニメーションの向きが逆になるバグがあるので、VWindow 側の挙動をオーバーライドする\r\n        // 本来は VCarousel 用の動作だが、VTabsItems も VWindow を継承しているので、それが適用されてしまっているらしい\r\n        // ref: https://github.com/yuwu9145/vuetify/blob/master/packages/vuetify/src/components/VWindow/VWindow.ts#L239-L252\r\n        updateReverse(val: number, oldVal: number) {\r\n\r\n            const itemsLength = this.items.length;\r\n            const lastIndex = itemsLength - 1;\r\n\r\n            if (itemsLength <= 2) return val < oldVal;\r\n\r\n            // continuous が false の時、常に val < oldVal の結果を返す\r\n            if (!(this as any).continuous) return val < oldVal;\r\n\r\n            if (val === lastIndex && oldVal === 0) {\r\n                return true;\r\n            } else if (val === 0 && oldVal === lastIndex) {\r\n                return false;\r\n            } else {\r\n                return val < oldVal;\r\n            }\r\n        }\r\n    }\r\n});\r\n","\r\nimport Vue from 'vue';\r\nimport { VSnackbar, VBtn, VIcon } from 'vuetify/lib';\r\nimport Vuetify from 'vuetify/lib/framework';\r\n\r\n\r\nVue.use(Vuetify);\r\n\r\n// vuetify-message-snackbar を使うのに必要\r\nVue.component('v-snackbar', VSnackbar);\r\nVue.component('v-btn', VBtn);\r\nVue.component('v-icon', VIcon);\r\n\r\nexport default new Vuetify({\r\n    theme: {\r\n        dark: true,\r\n        themes: {\r\n            dark: {\r\n                primary: '#E64F97',\r\n                secondary: '#E33157',\r\n                twitter: {\r\n                    base: '#4F82E6',\r\n                    lighten1: '#799FEC',\r\n                    lighten2: '#41A5F1',\r\n                },\r\n                gray: '#66514C',\r\n                black: '#110A09',\r\n                background: {\r\n                    base: '#1E1310',\r\n                    lighten1: '#2F221F',\r\n                    lighten2: '#433532',\r\n                    lighten3: '#4c3c38',\r\n                },\r\n                text: {\r\n                    base: '#FFEAEA',\r\n                    darken1: '#D9C7C7',\r\n                    darken2: '#8E7F7E',\r\n                    darken3: '#786968',\r\n                }\r\n            }\r\n        },\r\n        options: {\r\n            customProperties: true,\r\n        },\r\n    },\r\n});\r\n","\r\n/**\r\n * 共通ユーティリティ\r\n */\r\nexport default class Utils {\r\n\r\n    // バージョン情報\r\n    // ビルド時の環境変数 (vue.config.js に記載) から取得\r\n    static readonly version: string = process.env.VUE_APP_VERSION as string;\r\n\r\n    // バックエンドの API のベース URL\r\n    // Worker からも参照できるように self.location を使う\r\n    static readonly api_base_url = (() => {\r\n        if (process.env.NODE_ENV === 'development') {\r\n            // デバッグ時はポートを 7000 に強制する\r\n            return `${self.location.protocol}//${self.location.hostname}:7000/api`;\r\n        } else {\r\n            // ビルド後は同じポートを使う\r\n            return `${self.location.protocol}//${self.location.host}/api`;\r\n        }\r\n    })();\r\n\r\n\r\n    /**\r\n     * アクセストークンを LocalStorage から取得する\r\n     * @returns JWT アクセストークン（ログインしていない場合は null が返る）\r\n     */\r\n    static getAccessToken(): string | null {\r\n\r\n        // LocalStorage の取得結果をそのまま返す\r\n        // LocalStorage.getItem() はキーが存在しなければ（=ログインしていなければ）null を返す\r\n        return localStorage.getItem('KonomiTV-AccessToken');\r\n    }\r\n\r\n\r\n    /**\r\n     * アクセストークンを LocalStorage に保存する\r\n     * @param access_token 発行された JWT アクセストークン\r\n     */\r\n    static saveAccessToken(access_token: string): void {\r\n\r\n        // そのまま LocalStorage に保存\r\n        localStorage.setItem('KonomiTV-AccessToken', access_token);\r\n    }\r\n\r\n\r\n    /**\r\n     * アクセストークンを LocalStorage から削除する\r\n     * アクセストークンを削除することで、ログアウト相当になる\r\n     */\r\n    static deleteAccessToken(): void {\r\n\r\n        // LocalStorage に KonomiTV-AccessToken キーが存在しない\r\n        if (localStorage.getItem('KonomiTV-AccessToken') === null) return;\r\n\r\n        // KonomiTV-AccessToken キーを削除\r\n        localStorage.removeItem('KonomiTV-AccessToken');\r\n    }\r\n\r\n\r\n    /**\r\n     * ブラウザが実行されている OS に応じて、\"Alt\" または \"Option\" を返す\r\n     * キーボードショートカットのコンビネーションキーの説明を OS によって分けるために使う\r\n     * @returns ブラウザが実行されている OS が Mac なら Option を、それ以外なら Alt を返す\r\n     */\r\n    static AltOrOption(): 'Alt' | 'Option' {\r\n        // iPhone・iPad で純正キーボードを接続した場合も一応想定して、iPhone・iPad も含める（動くかは未検証）\r\n        return /iPhone|iPad|Macintosh/i.test(navigator.userAgent) ? 'Option' : 'Alt';\r\n    }\r\n\r\n\r\n    /**\r\n     * ブラウザが実行されている OS に応じて、\"Ctrl\" または \"Cmd\" を返す\r\n     * キーボードショートカットのコンビネーションキーの説明を OS によって分けるために使う\r\n     * @returns ブラウザが実行されている OS が Mac なら Cmd を、それ以外なら Ctrl を返す\r\n     */\r\n    static CtrlOrCmd(): 'Ctrl' | 'Cmd' {\r\n        // iPhone・iPad で純正キーボードを接続した場合も一応想定して、iPhone・iPad も含める（動くかは未検証）\r\n        return /iPhone|iPad|Macintosh/i.test(navigator.userAgent) ? 'Cmd' : 'Ctrl';\r\n    }\r\n\r\n\r\n    /**\r\n     * Blob に格納されているデータをブラウザにダウンロードさせる\r\n     * @param blob Blob オブジェクト\r\n     * @param filename 保存するファイル名\r\n     */\r\n    static downloadBlobData(blob: Blob, filename: string): void {\r\n\r\n        // Blob URL を発行\r\n        const blob_url = URL.createObjectURL(blob);\r\n\r\n        // 画像をダウンロード\r\n        const link = document.createElement('a');\r\n        link.download = filename;\r\n        link.href = blob_url;\r\n        link.click();\r\n\r\n        // Blob URL を破棄\r\n        URL.revokeObjectURL(blob_url);\r\n    }\r\n\r\n\r\n    /**\r\n     * innerHTML しても問題ないように HTML の特殊文字をエスケープする\r\n     * PHP の htmlspecialchars() と似たようなもの\r\n     * @param content HTML エスケープされてないテキスト\r\n     * @returns HTML エスケープされたテキスト\r\n     */\r\n    static escapeHTML(content: string): string {\r\n\r\n        // HTML エスケープが必要な文字\r\n        // ref: https://www.php.net/manual/ja/function.htmlspecialchars.php\r\n        const html_escape_table = {\r\n            '&': '&amp;',\r\n            '\"': '&quot;',\r\n            '\\'': '&apos;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n        };\r\n\r\n        // ref: https://qiita.com/noriaki/items/4bfef8d7cf85dc1035b3\r\n        return content.replace(/[&\"'<>]/g, (match) => {\r\n            return html_escape_table[match];\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * OAuth 連携時のポップアップを画面中央に表示するための windowFeatures 文字列を取得する\r\n     * ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1\r\n     * @returns window.open() で使う windowFeatures 文字列\r\n     */\r\n    static getWindowFeatures(): string {\r\n\r\n        // ポップアップウインドウのサイズ\r\n        const popupSizeWidth = 650;\r\n        const popupSizeHeight = window.screen.height >= 800 ? 800 : window.screen.height - 100;\r\n\r\n        // ポップアップウインドウの位置\r\n        const posTop = (window.screen.height - popupSizeHeight) / 2;\r\n        const posLeft = (window.screen.width - popupSizeWidth) / 2;\r\n\r\n        return `toolbar=0,status=0,top=${posTop},left=${posLeft},width=${popupSizeWidth},height=${popupSizeHeight},modal=yes,alwaysRaised=yes`;\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在フォーカスを持っている要素に指定された CSS クラスが付与されているか\r\n     * @param class_name 存在を確認する CSS クラス名\r\n     * @returns document.activeElement が class_name で指定したクラスを持っているかどうか\r\n     */\r\n    static hasActiveElementClass(class_name: string): boolean {\r\n        if (document.activeElement === null) return false;\r\n        return document.activeElement.classList.contains(class_name);\r\n    }\r\n\r\n\r\n    /**\r\n     * ブラウザが Firefox かどうか\r\n     * @returns ブラウザが Firefox なら true を返す\r\n     */\r\n    static isFirefox(): boolean {\r\n        return /Firefox/i.test(navigator.userAgent);\r\n    }\r\n\r\n\r\n    /**\r\n     * ブラウザが Safari かどうか\r\n     * @returns ブラウザが Safari なら true を返す\r\n     */\r\n    static isSafari(): boolean {\r\n        return /Safari/i.test(navigator.userAgent) && !/Chrome/i.test(navigator.userAgent);\r\n    }\r\n\r\n\r\n    /**\r\n     * モバイルデバイス (スマホ・タブレット) かどうか\r\n     * @returns モバイルデバイス (スマホ・タブレット) なら true を返す\r\n     */\r\n    static isMobileDevice(): boolean {\r\n        // Macintosh が入っているのは、iPadOS は既定でデスクトップ表示モードが有効になっていて、UA だけでは Mac と判別できないため\r\n        // Mac にタッチパネル付きの機種は存在しないので、'ontouchend' in document で判定できる\r\n        // Windows タブレットはマウスやキーボードを付けたら普通の PC になるケースもあって判断が非常に難しく、需要も少ないため除外している\r\n        return /iPhone|iPad|iPod|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\r\n    }\r\n\r\n\r\n    /**\r\n     * 表示画面がスマホ横画面かどうか\r\n     * @returns スマホ横画面なら true を返す\r\n     */\r\n    static isSmartphoneHorizontal(): boolean {\r\n        return window.matchMedia('(max-width: 1000px) and (max-height: 425px)').matches;\r\n    }\r\n\r\n\r\n    /**\r\n     * 表示画面がスマホ縦画面かどうか\r\n     * @returns スマホ縦画面なら true を返す\r\n     */\r\n    static isSmartphoneVertical(): boolean {\r\n        return window.matchMedia('(max-width: 600px) and (min-height: 375.01px)').matches;\r\n    }\r\n\r\n\r\n    /**\r\n     * 表示画面がタブレット横画面かどうか\r\n     * @returns タブレット横画面なら true を返す\r\n     */\r\n    static isTabletHorizontal(): boolean {\r\n        return window.matchMedia('(max-width: 1264px) and (max-height: 850px)').matches;\r\n    }\r\n\r\n\r\n    /**\r\n     * 表示画面がタブレット縦画面かどうか\r\n     * @returns タブレット縦画面なら true を返す\r\n     */\r\n    static isTabletVertical(): boolean {\r\n        return window.matchMedia('(max-width: 850px) and (min-height: 850.01px)').matches;\r\n    }\r\n\r\n\r\n    /**\r\n     * 表示端末がタッチデバイスかどうか (Utils.isMobileDevice() とは異なり、モバイルデバイスかどうかは問わない)\r\n     * おそらく Windows タブレットや Chromebook なども含まれる\r\n     * @returns タッチデバイスなら true を返す\r\n     */\r\n    static isTouchDevice(): boolean {\r\n        return window.matchMedia('(hover: none)').matches;\r\n    }\r\n\r\n\r\n    /**\r\n     * 任意の桁で切り捨てする\r\n     * ref: https://qiita.com/nagito25/items/0293bc317067d9e6c560#comment-87f0855f388953843037\r\n     * @param value 切り捨てする数値\r\n     * @param base どの桁で切り捨てするか (-1 → 10の位 / 3 → 小数第3位）\r\n     * @return 切り捨てした値\r\n     */\r\n    static mathFloor(value: number, base: number = 0): number {\r\n        return Math.floor(value * (10**base)) / (10**base);\r\n    }\r\n\r\n\r\n    /**\r\n     * async/await でスリープ的なもの\r\n     * @param seconds 待機する秒数 (ミリ秒単位ではないので注意)\r\n     * @returns Promise を返すので、await sleep(1); のように使う\r\n     */\r\n    static async sleep(seconds: number): Promise<number> {\r\n        return await new Promise(resolve => setTimeout(resolve, seconds * 1000));\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在時刻の UNIX タイムスタンプ (秒単位) を取得する (デバッグ用)\r\n     * @returns 現在時刻の UNIX タイムスタンプ (秒単位)\r\n     */\r\n    static time(): number {\r\n        return Date.now() / 1000;\r\n    }\r\n\r\n\r\n    /**\r\n     * 指定された値の型の名前を取得する\r\n     * ref: https://qiita.com/amamamaou/items/ef0b797156b324bb4ef3\r\n     * @returns 指定された値の型の名前\r\n     */\r\n    static typeof(value: any): string {\r\n        return Object.prototype.toString.call(value).slice(8, -1).toLowerCase();\r\n    }\r\n\r\n\r\n    /**\r\n     * 文字列中に含まれる URL をリンクの HTML に置き換える\r\n     * @param text 置換対象の文字列\r\n     * @returns URL をリンクに置換した文字列\r\n     */\r\n    static URLtoLink(text: string): string {\r\n\r\n        // HTML の特殊文字で表示がバグらないように、事前に HTML エスケープしておく\r\n        text = Utils.escapeHTML(text);\r\n\r\n        // ref: https://www.softel.co.jp/blogs/tech/archives/6099\r\n        const pattern = /(https?:\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/ig;\r\n        return text.replace(pattern, '<a href=\"$1\" target=\"_blank\">$1</a>');\r\n    }\r\n\r\n\r\n    /**\r\n     * デバイスがオンラインになるまで待機する\r\n     * @returns Promise を返すので、await waitUntilOnline(); のように使う\r\n     */\r\n    static async waitUntilOnline(): Promise<void> {\r\n        return await new Promise(resolve => {\r\n            window.addEventListener('online', () => resolve());\r\n        });\r\n    }\r\n}\r\n","\r\nimport { ChannelType } from '@/services/Channels';\r\n\r\n\r\n/**\r\n * チャンネル周りのユーティリティ\r\n */\r\nexport class ChannelUtils {\r\n\r\n    /**\r\n     * チャンネル ID からチャンネルタイプを取得する\r\n     * @param display_channel_id チャンネル ID\r\n     * @returns チャンネルタイプ\r\n     */\r\n    static getChannelType(display_channel_id: string): ChannelType {\r\n        try {\r\n            const result = display_channel_id.match('(?<channel_type>[a-z]+)[0-9]+')!.groups!.channel_type.toUpperCase();\r\n            return result as ChannelType;\r\n        } catch (e) {\r\n            // 何かしらエラーが発生したということはチャンネル ID が不正\r\n            // とりあえずここではエラーにならないよう GR を返す  エラー処理はその後の段階で行われる\r\n            return 'GR';\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * チャンネルの実況勢いから「多」「激多」「祭」を取得する\r\n     * ref: https://ja.wikipedia.org/wiki/%E3%83%8B%E3%82%B3%E3%83%8B%E3%82%B3%E5%AE%9F%E6%B3%81\r\n     * @param jikkyo_force チャンネルの実況勢い\r\n     * @returns normal（普通）or many（多）or so-many（激多）or festival（祭）\r\n     */\r\n    static getChannelForceType(jikkyo_force: number | null): 'normal' | 'many' | 'so-many' | 'festival' {\r\n\r\n        // 実況勢いが null（=対応する実況チャンネルがない）\r\n        if (jikkyo_force === null) return 'normal';\r\n\r\n        // 実況勢いが 500 コメント以上（祭）\r\n        if (jikkyo_force >= 500) return 'festival';\r\n        // 実況勢いが 200 コメント以上（激多）\r\n        if (jikkyo_force >= 200) return 'so-many';\r\n        // 実況勢いが 100 コメント以上（多）\r\n        if (jikkyo_force >= 100) return 'many';\r\n\r\n        // それ以外\r\n        return 'normal';\r\n    }\r\n}\r\n","\r\nimport { MessageOption, MessageType } from 'vuetify-message-snackbar/src/message';\r\n\r\n\r\ninterface MessageReturnValue {\r\n    close(): void;\r\n    again(): void;\r\n}\r\n\r\n// Vue コンポーネント以外からも this.$message を使えるようにするための (強引な) ラッパー\r\nexport default {\r\n    success(message: MessageType | MessageOption): MessageReturnValue {\r\n        // @ts-ignore\r\n        return window.KonomiTVVueInstance?.$message.success(message);\r\n    },\r\n    info(message: MessageType | MessageOption): MessageReturnValue {\r\n        // @ts-ignore\r\n        return window.KonomiTVVueInstance?.$message.info(message);\r\n    },\r\n    warning(message: MessageType | MessageOption): MessageReturnValue {\r\n        // @ts-ignore\r\n        return window.KonomiTVVueInstance?.$message.warning(message);\r\n    },\r\n    error(message: MessageType | MessageOption): MessageReturnValue {\r\n        // @ts-ignore\r\n        return window.KonomiTVVueInstance?.$message.error(message);\r\n    },\r\n    show(message: MessageType | MessageOption): MessageReturnValue {\r\n        // @ts-ignore\r\n        return window.KonomiTVVueInstance?.$message.show(message);\r\n    }\r\n};\r\n","\r\nimport Message from '@/message';\r\nimport APIClient from '@/services/APIClient';\r\n\r\n\r\n/** ユーザーアカウントの情報を表すインターフェイス */\r\nexport interface IUser {\r\n    id: number;\r\n    name: string;\r\n    is_admin: boolean;\r\n    niconico_user_id: number | null;\r\n    niconico_user_name: string | null;\r\n    niconico_user_premium: boolean | null;\r\n    twitter_accounts: ITwitterAccount[];\r\n    created_at: string;\r\n    updated_at: string;\r\n}\r\n\r\n/** ユーザーアカウントに紐づく Twitter アカウントの情報を表すインターフェイス */\r\nexport interface ITwitterAccount {\r\n    id: number;\r\n    name: string;\r\n    screen_name: string;\r\n    icon_url: string;\r\n    is_oauth_session: boolean;\r\n    created_at: string;\r\n    updated_at: string;\r\n}\r\n\r\n/** ユーザーアカウントのアクセストークンを表すインターフェイス */\r\nexport interface IUserAccessToken {\r\n    access_token: string;\r\n    token_type: string;\r\n}\r\n\r\nexport interface IUserCreateRequest {\r\n    username: string;\r\n    password: string;\r\n}\r\nexport interface IUserUpdateRequest {\r\n    username?: string;\r\n    password?: string;\r\n}\r\nexport interface IUserUpdateRequestForAdmin {\r\n    username?: string;\r\n    password?: string;\r\n    is_admin?: boolean;\r\n}\r\n\r\n\r\nclass Users {\r\n\r\n    /**\r\n     * ユーザーアカウントを作成する\r\n     * @param user_create_request ユーザー名とパスワード\r\n     * @returns 作成したユーザーアカウントの情報 or アカウント作成に失敗した場合は null\r\n     */\r\n    static async createUser(user_create_request: IUserCreateRequest): Promise<IUser | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.post<IUser>('/users', user_create_request);\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            switch (response.data.detail) {\r\n                case 'Specified username is duplicated': {\r\n                    Message.error('ユーザー名が重複しています。');\r\n                    break;\r\n                }\r\n                case 'Specified username is not accepted due to system limitations': {\r\n                    Message.error('ユーザー名に token と me は使えません。');\r\n                    break;\r\n                }\r\n                default: {\r\n                    APIClient.showGenericError(response, 'アカウントを作成できませんでした。');\r\n                    break;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        return response.data;\r\n    }\r\n\r\n\r\n    /**\r\n     * ユーザーアカウントのアクセストークンを発行する\r\n     * @param username ユーザー名\r\n     * @param password パスワード\r\n     * @returns 発行したアクセストークン or ログインに失敗した場合は null\r\n     */\r\n    static async createUserAccessToken(username: string, password: string): Promise<IUserAccessToken | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.post<IUserAccessToken>('/users/token', new URLSearchParams({username, password}));\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            switch (response.data.detail) {\r\n                case 'Incorrect username': {\r\n                    Message.error('ログインできませんでした。そのユーザー名のアカウントは存在しません。');\r\n                    break;\r\n                }\r\n                case 'Incorrect password': {\r\n                    Message.error('ログインできませんでした。パスワードを間違えていませんか？');\r\n                    break;\r\n                }\r\n                default: {\r\n                    APIClient.showGenericError(response, 'ログインできませんでした。');\r\n                    break;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        return response.data;\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在ログイン中のユーザーアカウントの情報を取得する\r\n     * @returns ログイン中のユーザーアカウントの情報 or ログインしていない場合は null\r\n     */\r\n    static async fetchUser(): Promise<IUser | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.get<IUser>('/users/me');\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'アカウント情報を取得できませんでした。');\r\n            return null;\r\n        }\r\n\r\n        return response.data;\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在ログイン中のユーザーアカウントのアイコンを取得する\r\n     * @returns ログイン中のユーザーアカウントのアイコンの Blob URL or ログインしていない場合は null\r\n     */\r\n    static async fetchUserIcon(): Promise<string | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.get('/users/me/icon', {responseType: 'blob'});\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'アイコン画像を取得できませんでした。');\r\n            return null;\r\n        }\r\n\r\n        return URL.createObjectURL(response.data);\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在ログイン中のユーザーアカウントの情報を更新する\r\n     * @param user_update_request ユーザー名 or パスワード\r\n     */\r\n    static async updateUser(user_update_request: IUserUpdateRequest): Promise<void> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.put('/users/me', user_update_request);\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            switch (response.data.detail) {\r\n                case 'Specified username is duplicated': {\r\n                    Message.error('ユーザー名が重複しています。');\r\n                    break;\r\n                }\r\n                case 'Specified username is not accepted due to system limitations': {\r\n                    Message.error('ユーザー名に token と me は使えません。');\r\n                    break;\r\n                }\r\n                default: {\r\n                    APIClient.showGenericError(response, 'アカウント情報を更新できませんでした。');\r\n                    break;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在ログイン中のユーザーアカウントのアイコン画像を更新する\r\n     * @param icon アイコンの File オブジェクト\r\n     */\r\n    static async updateUserIcon(icon: File): Promise<void> {\r\n\r\n        // アイコン画像の File オブジェクト (= Blob) を FormData に入れる\r\n        // multipart/form-data で送るために必要\r\n        // ref: https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/\r\n        const form_data = new FormData();\r\n        form_data.append('image', icon);\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.put('/users/me/icon', form_data, {headers: {'Content-Type': 'multipart/form-data'}});\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            switch (response.data.detail) {\r\n                case 'Please upload JPEG or PNG image': {\r\n                    Message.error('JPEG または PNG 画像をアップロードしてください。');\r\n                    break;\r\n                }\r\n                default: {\r\n                    APIClient.showGenericError(response, 'アイコン画像を更新できませんでした。');\r\n                    break;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在ログイン中のユーザーアカウントを削除する\r\n     */\r\n    static async deleteUser(): Promise<void> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.delete('/users/me');\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'アカウントを削除できませんでした。');\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Users;\r\n","\r\nimport { defineStore } from 'pinia';\r\n\r\nimport Message from '@/message';\r\nimport Users, { IUser, IUserUpdateRequest } from '@/services/Users';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils from '@/utils';\r\n\r\n\r\n/**\r\n * 現在ログイン中のユーザーアカウントの情報を共有するストア\r\n */\r\nconst useUserStore = defineStore('user', {\r\n    state: () => ({\r\n\r\n        // 現在ログイン中かどうか\r\n        is_logged_in: false as boolean,\r\n\r\n        // ログイン済みのユーザーの情報\r\n        user: null as IUser | null,\r\n\r\n        // ログイン済みのユーザーのアイコン画像の Blob URL\r\n        user_icon_url: null as string | null,\r\n    }),\r\n    getters: {\r\n\r\n        /**\r\n         * ログイン済みのユーザーのニコニコアカウントのユーザーアイコンの URL (ニコニコアカウントと連携されている場合のみ)\r\n         */\r\n        user_niconico_icon_url(): string | null {\r\n            if (this.user === null || this.user.niconico_user_id === null) {\r\n                return null;\r\n            }\r\n            const user_id_slice = this.user.niconico_user_id.toString().slice(0, 4);\r\n            return `https://secure-dcdn.cdn.nimg.jp/nicoaccount/usericon/${user_id_slice}/${this.user.niconico_user_id}.jpg`;\r\n        }\r\n    },\r\n    actions: {\r\n\r\n        /**\r\n         * アカウントを作成する\r\n         * @param username ユーザー名\r\n         * @param password パスワード\r\n         * @returns アカウント作成に成功した場合は true\r\n         */\r\n        async register(username: string, password: string): Promise<boolean> {\r\n\r\n            // アカウントを作成\r\n            const result = await Users.createUser({username, password});\r\n            if (result === null) {\r\n                console.log('Register failed.');\r\n                return false;  // アカウント作成失敗 (エラーハンドリングは services 層で行われる)\r\n            }\r\n\r\n            // 作成したアカウントでログイン\r\n            await this.login(username, password, true);\r\n            console.log('Register successful.');\r\n            Message.success('アカウントを作成しました。');\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * ログイン処理を行う\r\n         * @param username ユーザー名\r\n         * @param password パスワード\r\n         * @param silent ログインしたことをメッセージで通知しない場合は true\r\n         * @returns ログインに成功した場合は true\r\n         */\r\n        async login(username: string, password: string, silent: boolean = false): Promise<boolean> {\r\n\r\n            // アクセストークンを発行\r\n            const access_token = await Users.createUserAccessToken(username, password);\r\n            if (access_token === null) {\r\n                console.log('Login failed.');\r\n                this.logout(true);\r\n                return false;  // ログイン失敗 (エラーハンドリングは services 層で行われる)\r\n            }\r\n\r\n            // 取得したアクセストークンを保存\r\n            console.log('Login successful.');\r\n            Utils.saveAccessToken(access_token.access_token);\r\n            this.is_logged_in = true;\r\n\r\n            // ユーザーアカウントの情報を取得\r\n            await this.fetchUser(true);\r\n\r\n            if (silent === false) {\r\n                Message.success('ログインしました。');\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * ログアウト処理を行う\r\n         * @param silent ログアウトしたことをメッセージで通知しない場合は true\r\n         */\r\n        logout(silent: boolean = false): void {\r\n\r\n            // 設定の同期を無効化\r\n            const settings_store = useSettingsStore();\r\n            settings_store.settings.sync_settings = false;\r\n\r\n            // ブラウザからアクセストークンを削除\r\n            // これをもってログアウトしたことになる（それ以降の Axios のリクエストにはアクセストークンが含まれなくなる）\r\n            Utils.deleteAccessToken();\r\n\r\n            // 未ログイン状態に設定\r\n            this.is_logged_in = false;\r\n            this.user = null;\r\n            this.user_icon_url = '';\r\n\r\n            if (silent === false) {\r\n                Message.success('ログアウトしました。');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 現在ログイン中のユーザーアカウントの情報を取得する\r\n         * すでに取得済みの情報がある場合は API リクエストを行わずにそれを返す\r\n         * @param force 強制的に API リクエストを行う場合は true\r\n         * @returns ログイン中のユーザーアカウントの情報 or ログインしていない場合は null\r\n         */\r\n        async fetchUser(force: boolean = false): Promise<IUser | null> {\r\n\r\n            // LocalStorage にアクセストークンが保存されていない場合 (= 非ログイン状態) は常に null を返す\r\n            if (Utils.getAccessToken() === null) {\r\n                return null;\r\n            }\r\n\r\n            // すでにログイン済みのユーザーアカウントの情報がある場合はそれを返す\r\n            // force が true の場合は無視される\r\n            if (this.user !== null && force === false) {\r\n                return this.user;\r\n            }\r\n\r\n            // ユーザーアカウントの情報を取得する\r\n            const user = await Users.fetchUser();\r\n            if (user === null) {\r\n                // この時点で無効などの理由でアクセストークンが削除されている場合、ログアウトする\r\n                if (Utils.getAccessToken() === null) {\r\n                    this.logout(true);\r\n                }\r\n                return null;\r\n            }\r\n            this.is_logged_in = true;\r\n            this.user = user;\r\n\r\n            // ユーザーアカウントのアイコン画像の Blob URL を取得する\r\n            const user_icon_url = await Users.fetchUserIcon();\r\n            if (user_icon_url === null) {\r\n                return null;\r\n            }\r\n            this.user_icon_url = user_icon_url;\r\n\r\n            return this.user;\r\n        },\r\n\r\n        /**\r\n         * 現在ログイン中のユーザーアカウントの情報を更新する\r\n         * @param user_update_request ユーザー名 or パスワード\r\n         */\r\n        async updateUser(user_update_request: IUserUpdateRequest): Promise<void> {\r\n\r\n            // ユーザーアカウントの情報を更新する\r\n            await Users.updateUser(user_update_request);\r\n\r\n            // ユーザーアカウントの情報を再取得する\r\n            await this.fetchUser(true);\r\n\r\n            if (user_update_request.username !== undefined) {\r\n                Message.show('ユーザー名を更新しました。');\r\n            } else if (user_update_request.password !== undefined) {\r\n                Message.show('パスワードを更新しました。');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 現在ログイン中のユーザーアカウントのアイコン画像を更新する\r\n         * @param icon アイコンの File オブジェクト\r\n         */\r\n        async updateUserIcon(icon: File): Promise<void> {\r\n\r\n            // ユーザーアカウントのアイコン画像を更新する\r\n            await Users.updateUserIcon(icon);\r\n\r\n            // ユーザーアカウントの情報を再取得する\r\n            await this.fetchUser(true);\r\n\r\n            Message.show('アイコン画像を更新しました。');\r\n        },\r\n\r\n        /**\r\n         * 現在ログイン中のユーザーアカウントを削除する\r\n         */\r\n        async deleteUser(): Promise<void> {\r\n\r\n            // ユーザーアカウントを削除する\r\n            await Users.deleteUser();\r\n\r\n            // ログアウトする\r\n            this.logout(true);\r\n\r\n            Message.show('アカウントを削除しました。');\r\n        }\r\n    }\r\n});\r\n\r\nexport default useUserStore;\r\n","\r\n/**\r\n * services/ 以下の各クラスは、KonomiTV サーバーへの API リクエストを抽象化し、\r\n * API レスポンスの受け取りと、エラーが発生した際のエラーハンドリング (エラーメッセージ表示) までを責務として負う\r\n */\r\n\r\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nimport Message from '@/message';\r\nimport useUserStore from '@/stores/UserStore';\r\nimport Utils from '@/utils';\r\n\r\n\r\n/** API リクエスト成功時のレスポンスを表すインターフェイス */\r\nexport interface ISuccessResponse<T> {\r\n    type: 'success';\r\n    status: number;\r\n    data: T;\r\n}\r\n\r\n/** API リクエスト失敗時のレスポンスを表すインターフェイス */\r\nexport interface IErrorResponse {\r\n    type: 'error';\r\n    status: number;\r\n    data: IErrorResponseData;\r\n    error: AxiosError<IErrorResponseData>;\r\n}\r\n\r\n/** API リクエスト失敗時にサーバーから返されるエラーレスポンスを表すインターフェイス */\r\nexport interface IErrorResponseData {\r\n    detail: string | {\r\n        type: string;\r\n        loc: (string | number)[];\r\n        msg: string;\r\n        input?: any;\r\n        url?: string;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * services/ 以下の各クラスから呼び出される、Axios の薄いラッパー\r\n * エラーハンドリングを容易にするために、レスポンスを ISuccessResponse と IErrorResponse に分けて返す\r\n * ref: https://zenn.dev/engineer_titan/articles/291c9fccb338e2\r\n */\r\nclass APIClient {\r\n\r\n    /**\r\n     * Axios で HTTP リクエストを送信し、レスポンスを受け取る\r\n     * @param request AxiosRequestConfig\r\n     * @returns 成功なら ISuccessResponse 、失敗なら IErrorResponse を返す\r\n     */\r\n    static async request<T>(request: AxiosRequestConfig): Promise<ISuccessResponse<T> | IErrorResponse> {\r\n\r\n        // API のベース URL を設定 (config.baseURL が指定されていない場合のみ)\r\n        if (request.baseURL === undefined) {\r\n            request.baseURL = Utils.api_base_url;\r\n        }\r\n\r\n        // リクエストヘッダーが指定されていない場合は空のオブジェクトを設定\r\n        if (request.headers === undefined) {\r\n            request.headers = {};\r\n        }\r\n\r\n        // 外部サイトへの HTTP/HTTPS リクエストでは実行しない\r\n        if (request.url?.startsWith('http') === false) {\r\n\r\n            // アクセストークンが取得できたら (=ログインされていれば)\r\n            // 取得したアクセストークンを Authorization ヘッダーに Bearer トークンとしてセット\r\n            // これを忘れると当然ながらログインしていない扱いになる\r\n            const access_token = Utils.getAccessToken();\r\n            if (access_token !== null) {\r\n                request.headers['Authorization'] = `Bearer ${access_token}`;\r\n            }\r\n\r\n            // KonomiTV クライアントのバージョンを設定\r\n            // 今のところ使わないが、将来的にクライアントとサーバーを分離することを見据えて念のため\r\n            request.headers['X-KonomiTV-Version'] = Utils.version;\r\n        }\r\n\r\n        // リクエストのタイムアウト時間を30秒に設定\r\n        request.timeout = 30 * 1000;\r\n\r\n        // Axios で HTTP リクエストを送信し、レスポンスを受け取る\r\n        const result: AxiosResponse<T> | AxiosError<IErrorResponseData> = await axios.request(request).catch((error) => error);\r\n\r\n        // エラーが発生した場合は IErrorResponse を返す\r\n        if (result instanceof AxiosError) {\r\n            console.error(result);\r\n\r\n            // エラーレスポンスがあれば、エラー内容と AxiosError を IErrorResponse に入れて返す\r\n            if (result.response) {\r\n                return {\r\n                    type: 'error',\r\n                    status: result.response.status,\r\n                    data: result.response.data,  // data には IErrorResponseData が入る\r\n                    error: result,  // AxiosError をそのまま入れる\r\n                };\r\n\r\n            // エラーレスポンスがない場合は、AxiosError のみを IErrorResponse に入れて返す\r\n            } else {\r\n                return {\r\n                    type: 'error',\r\n                    status: NaN,  // ステータスコードは取得できないので NaN にする\r\n                    data: {detail: result.message},  // data.detail に AxiosError のエラーメッセージを入れる\r\n                    error: result,  // AxiosError をそのまま入れる\r\n                };\r\n            }\r\n\r\n        // 正常にレスポンスが返ってきた場合は ISuccessResponse を返す\r\n        } else {\r\n            return {\r\n                type: 'success',\r\n                status: result.status,\r\n                data: result.data,\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * GET リクエストを送信する\r\n     * @param url リクエスト先の URL\r\n     * @returns 成功なら ISuccessResponse 、失敗なら IErrorResponse を返す\r\n     */\r\n    static async get<T = any, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<ISuccessResponse<T> | IErrorResponse> {\r\n        const request: AxiosRequestConfig = {\r\n            url: url,\r\n            method: 'GET',\r\n            ...config,\r\n        };\r\n        return await APIClient.request<T>(request);\r\n    }\r\n\r\n\r\n    /**\r\n     * POST リクエストを送信する\r\n     * @param url リクエスト先の URL\r\n     * @returns 成功なら ISuccessResponse 、失敗なら IErrorResponse を返す\r\n     */\r\n    static async post<T = any, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<ISuccessResponse<T> | IErrorResponse> {\r\n        const request: AxiosRequestConfig = {\r\n            url: url,\r\n            method: 'POST',\r\n            data: data,\r\n            ...config,\r\n        };\r\n        return await APIClient.request<T>(request);\r\n    }\r\n\r\n\r\n    /**\r\n     * PUT リクエストを送信する\r\n     * @param url リクエスト先の URL\r\n     * @returns 成功なら ISuccessResponse 、失敗なら IErrorResponse を返す\r\n     */\r\n    static async put<T = any, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<ISuccessResponse<T> | IErrorResponse> {\r\n        const request: AxiosRequestConfig = {\r\n            url: url,\r\n            method: 'PUT',\r\n            data: data,\r\n            ...config,\r\n        };\r\n        return await APIClient.request<T>(request);\r\n    }\r\n\r\n\r\n    /**\r\n     * DELETE リクエストを送信する\r\n     * @param url リクエスト先の URL\r\n     * @returns 成功なら ISuccessResponse 、失敗なら IErrorResponse を返す\r\n     */\r\n    static async delete<T = any, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<ISuccessResponse<T> | IErrorResponse> {\r\n        const request: AxiosRequestConfig = {\r\n            url: url,\r\n            method: 'DELETE',\r\n            ...config,\r\n        };\r\n        return await APIClient.request<T>(request);\r\n    }\r\n\r\n\r\n    /**\r\n     * 一般的なエラーメッセージの共通処理\r\n     * エラーメッセージを SnackBar で表示する\r\n     * @param error_response API から返されたエラーレスポンス\r\n     * @param template エラーメッセージのテンプレート（「アカウント情報を取得できませんでした。」など)\r\n     */\r\n    static showGenericError(error_response: IErrorResponse, template: string): void {\r\n        const user_store = useUserStore();\r\n        switch (error_response.data.detail) {\r\n            case 'Not authenticated': {\r\n                user_store.logout(true);\r\n                Message.error(`${template}\\nログインし直してください。`);\r\n                return;\r\n            }\r\n            case 'Access token data is invalid': {\r\n                user_store.logout(true);\r\n                Message.error(`${template}\\nログインセッションが不正です。もう一度ログインし直してください。`);\r\n                return;\r\n            }\r\n            case 'Access token is invalid': {\r\n                user_store.logout(true);\r\n                Message.error(`${template}\\nログインセッションの有効期限が切れています。もう一度ログインし直してください。`);\r\n                return;\r\n            }\r\n            case 'User associated with access token does not exist': {\r\n                user_store.logout(true);\r\n                Message.error(`${template}\\nログインセッションに紐づくユーザーが存在しないか、削除されています。`);\r\n                return;\r\n            }\r\n            default: {\r\n                if (error_response.data.detail) {\r\n                    if (Number.isNaN(error_response.status)) {\r\n                        // HTTP リクエスト自体が失敗し、HTTP ステータスコードが取得できなかった場合\r\n                        Message.error(`${template}(${error_response.data.detail})`);\r\n                    } else {\r\n                        // HTTP リクエスト自体は成功したが、API からエラーレスポンスが返ってきた場合\r\n                        Message.error(`${template}(HTTP Error ${error_response.status} / ${error_response.data.detail})`);\r\n                    }\r\n                } else {\r\n                    // HTTP リクエスト自体は成功したが、API からエラーコードのみが返ってきた場合 (基本あり得ないはずだが、念のため)\r\n                    Message.error(`${template}(HTTP Error ${error_response.status})`);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default APIClient;\r\n","\r\nimport APIClient from '@/services/APIClient';\r\n\r\n\r\n/**\r\n * サーバーに保存されるクライアント設定を表すインターフェース\r\n * サーバー側の app.schemas.ClientSettings と\r\n * client/src/stores/SettingsStore.ts 内の sync_settings_keys で定義されているものと同じ\r\n */\r\nexport interface IClientSettings {\r\n    pinned_channel_ids: string[];\r\n    // showed_panel_last_time: 同期無効\r\n    // selected_twitter_account_id: 同期無効\r\n    saved_twitter_hashtags: string[];\r\n    // tv_streaming_quality: 同期無効\r\n    // tv_data_saver_mode: 同期無効\r\n    // tv_low_latency_mode: 同期無効\r\n    panel_display_state: 'RestorePreviousState' | 'AlwaysDisplay' | 'AlwaysFold';\r\n    tv_panel_active_tab: 'Program' | 'Channel' | 'Comment' | 'Twitter';\r\n    tv_channel_selection_requires_alt_key: boolean;\r\n    caption_font: string;\r\n    always_border_caption_text: boolean;\r\n    specify_caption_opacity: boolean;\r\n    caption_opacity: number;\r\n    tv_show_superimpose: boolean;\r\n    // tv_show_data_broadcasting: 同期無効\r\n    // capture_copy_to_clipboard: 同期無効\r\n    capture_save_mode: 'Browser' | 'UploadServer' | 'Both';\r\n    capture_caption_mode: 'VideoOnly' | 'CompositingCaption' | 'Both';\r\n    // sync_settings: 同期無効\r\n    comment_speed_rate: number;\r\n    comment_font_size: number;\r\n    close_comment_form_after_sending: boolean;\r\n    muted_comment_keywords: IMutedCommentKeywords[];\r\n    muted_niconico_user_ids: string[];\r\n    mute_vulgar_comments: boolean;\r\n    mute_abusive_discriminatory_prejudiced_comments: boolean;\r\n    mute_big_size_comments: boolean;\r\n    mute_fixed_comments: boolean;\r\n    mute_colored_comments: boolean;\r\n    mute_consecutive_same_characters_comments: boolean;\r\n    fold_panel_after_sending_tweet: boolean;\r\n    reset_hashtag_when_program_switches: boolean;\r\n    auto_add_watching_channel_hashtag: boolean;\r\n    twitter_active_tab: 'Search' | 'Timeline' | 'Capture';\r\n    tweet_hashtag_position: 'Prepend' | 'Append' | 'PrependWithLineBreak' | 'AppendWithLineBreak';\r\n    tweet_capture_watermark_position: 'None' | 'TopLeft' | 'TopRight' | 'BottomLeft' | 'BottomRight';\r\n}\r\n\r\n/**\r\n * ミュート対象のコメントのキーワードのインターフェイス\r\n */\r\nexport interface IMutedCommentKeywords {\r\n    match: 'partial' | 'forward' | 'backward' | 'exact' | 'regex';\r\n    pattern: string;\r\n}\r\n\r\n\r\nclass Settings {\r\n\r\n    /**\r\n     * クライアント設定を取得する\r\n     * @return クライアント設定 (取得に失敗した場合は null)\r\n     */\r\n    static async fetchClientSettings(): Promise<IClientSettings | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.get<IClientSettings>('/settings/client');\r\n\r\n        // エラー処理 (基本起こらないはず & 実行できなくても後続の処理に影響しないため何もしない)\r\n        if (response.type === 'error') {\r\n            return null;\r\n        }\r\n\r\n        return response.data;\r\n    }\r\n\r\n\r\n    /**\r\n     * クライアント設定を更新する\r\n     * @param settings クライアント設定\r\n     */\r\n    static async updateClientSettings(settings: IClientSettings): Promise<void> {\r\n\r\n        // API リクエストを実行\r\n        // 正常時は 204 No Content が返るし、エラーは基本起こらないはずなので何もしない\r\n        await APIClient.put<IClientSettings>('/settings/client', settings);\r\n    }\r\n}\r\n\r\nexport default Settings;\r\n","\r\nimport { defineStore } from 'pinia';\r\n\r\nimport Settings, { IClientSettings, IMutedCommentKeywords } from '@/services/Settings';\r\nimport Utils from '@/utils';\r\n\r\n\r\n// LocalStorage に保存される KonomiTV の設定データ\r\ninterface ILocalClientSettings {\r\n    pinned_channel_ids: string[];\r\n    showed_panel_last_time: boolean;\r\n    selected_twitter_account_id: number | null;\r\n    saved_twitter_hashtags: string[];\r\n    tv_streaming_quality: '1080p-60fps' | '1080p' | '810p' | '720p' | '540p' | '480p' | '360p' | '240p';\r\n    tv_data_saver_mode: boolean;\r\n    tv_low_latency_mode: boolean;\r\n    panel_display_state: 'RestorePreviousState' | 'AlwaysDisplay' | 'AlwaysFold';\r\n    tv_panel_active_tab: 'Program' | 'Channel' | 'Comment' | 'Twitter';\r\n    tv_channel_selection_requires_alt_key: boolean;\r\n    caption_font: string;\r\n    always_border_caption_text: boolean;\r\n    specify_caption_opacity: boolean;\r\n    caption_opacity: number;\r\n    tv_show_superimpose: boolean;\r\n    tv_show_data_broadcasting: boolean;\r\n    capture_copy_to_clipboard: boolean;\r\n    capture_save_mode: 'Browser' | 'UploadServer' | 'Both';\r\n    capture_caption_mode: 'VideoOnly' | 'CompositingCaption' | 'Both';\r\n    sync_settings: boolean;\r\n    comment_speed_rate: number;\r\n    comment_font_size: number;\r\n    close_comment_form_after_sending: boolean;\r\n    muted_comment_keywords: IMutedCommentKeywords[];\r\n    muted_niconico_user_ids: string[];\r\n    mute_vulgar_comments: boolean;\r\n    mute_abusive_discriminatory_prejudiced_comments: boolean;\r\n    mute_big_size_comments: boolean;\r\n    mute_fixed_comments: boolean;\r\n    mute_colored_comments: boolean;\r\n    mute_consecutive_same_characters_comments: boolean;\r\n    fold_panel_after_sending_tweet: boolean;\r\n    reset_hashtag_when_program_switches: boolean;\r\n    auto_add_watching_channel_hashtag: boolean;\r\n    twitter_active_tab: 'Search' | 'Timeline' | 'Capture';\r\n    tweet_hashtag_position: 'Prepend' | 'Append' | 'PrependWithLineBreak' | 'AppendWithLineBreak';\r\n    tweet_capture_watermark_position: 'None' | 'TopLeft' | 'TopRight' | 'BottomLeft' | 'BottomRight';\r\n}\r\n\r\n// 設定データのうち、同期対象の設定キー\r\n// サーバー側の app.schemas.ClientSettings と\r\n// client/src/services/Settings.ts 内の IClientSettings で定義されているものと同じ\r\nconst sync_settings_keys = [\r\n    'pinned_channel_ids',\r\n    // showed_panel_last_time: 同期無効\r\n    // selected_twitter_account_id: 同期無効\r\n    'saved_twitter_hashtags',\r\n    // tv_streaming_quality: 同期無効\r\n    // tv_data_saver_mode: 同期無効\r\n    // tv_low_latency_mode: 同期無効\r\n    'panel_display_state',\r\n    'tv_panel_active_tab',\r\n    'tv_channel_selection_requires_alt_key',\r\n    'caption_font',\r\n    'always_border_caption_text',\r\n    'specify_caption_opacity',\r\n    'caption_opacity',\r\n    'tv_show_superimpose',\r\n    // tv_show_data_broadcasting: 同期無効\r\n    // capture_copy_to_clipboard: 同期無効\r\n    'capture_save_mode',\r\n    'capture_caption_mode',\r\n    // sync_settings: 同期無効\r\n    'comment_speed_rate',\r\n    'comment_font_size',\r\n    'close_comment_form_after_sending',\r\n    'muted_comment_keywords',\r\n    'muted_niconico_user_ids',\r\n    'mute_vulgar_comments',\r\n    'mute_abusive_discriminatory_prejudiced_comments',\r\n    'mute_big_size_comments',\r\n    'mute_fixed_comments',\r\n    'mute_colored_comments',\r\n    'mute_consecutive_same_characters_comments',\r\n    'fold_panel_after_sending_tweet',\r\n    'reset_hashtag_when_program_switches',\r\n    'auto_add_watching_channel_hashtag',\r\n    'twitter_active_tab',\r\n    'tweet_hashtag_position',\r\n    'tweet_capture_watermark_position',\r\n];\r\n\r\n// LocalStorage に保存される KonomiTV の設定データのデフォルト値\r\nconst default_settings: ILocalClientSettings = {\r\n\r\n    // ***** 設定画面から直接変更できない設定値 *****\r\n\r\n    // ピン留めしているチャンネルの ID (ex: gr011) が入るリスト\r\n    pinned_channel_ids: [],\r\n    // 前回視聴画面を開いた際にパネルが表示されていたかどうか (同期無効)\r\n    showed_panel_last_time: true,\r\n    // 現在ツイート対象として選択されている Twitter アカウントの ID (同期無効)\r\n    selected_twitter_account_id: null,\r\n    // 保存している Twitter のハッシュタグが入るリスト\r\n    saved_twitter_hashtags: [],\r\n\r\n    // ***** 設定 → 全般 *****\r\n\r\n    // テレビのデフォルトのストリーミング画質 (Default: 1080p) (同期無効)\r\n    tv_streaming_quality: '1080p',\r\n    // テレビを通信節約モードで視聴する (Default: オフ) (同期無効)\r\n    tv_data_saver_mode: false,\r\n    // テレビを低遅延で視聴する (Default: 低遅延で視聴する) (同期無効)\r\n    tv_low_latency_mode: true,\r\n    // デフォルトのパネルの表示状態 (Default: 前回の状態を復元する)\r\n    panel_display_state: 'RestorePreviousState',\r\n    // テレビをみるときにデフォルトで表示されるパネルのタブ (Default: 番組情報タブ)\r\n    tv_panel_active_tab: 'Program',\r\n    // チャンネル選局のキーボードショートカットを Alt or Option + 数字キー/テンキーに変更する (Default: オフ)\r\n    tv_channel_selection_requires_alt_key: false,\r\n\r\n    // ***** 設定 → 字幕 *****\r\n\r\n    // 字幕のフォント (Default: Windows TV 丸ゴシック)\r\n    caption_font: 'Windows TV MaruGothic',\r\n    // 字幕の文字を常に縁取って描画する (Default: 常に縁取る)\r\n    always_border_caption_text: true,\r\n    // 字幕の不透明度を指定する (Default: 指定しない)\r\n    specify_caption_opacity: false,\r\n    // 字幕の不透明度 (Default: 50%)\r\n    caption_opacity: 0.5,\r\n    // テレビをみるときに文字スーパーを表示する (Default: 表示する)\r\n    tv_show_superimpose: true,\r\n\r\n    // ***** 設定 → データ放送 *****\r\n\r\n    // テレビをみるときにデータ放送を表示する (Default: 表示する) (同期無効)\r\n    tv_show_data_broadcasting: true,\r\n\r\n    // ***** 設定 → キャプチャ *****\r\n\r\n    // キャプチャをクリップボードにコピーする (Default: 無効) (同期無効)\r\n    capture_copy_to_clipboard: false,\r\n    // キャプチャの保存先 (Default: KonomiTV サーバーにアップロード)\r\n    capture_save_mode: 'UploadServer',\r\n    // 字幕が表示されているときのキャプチャの保存モード (Default: 映像のみのキャプチャと、字幕を合成したキャプチャを両方保存する)\r\n    capture_caption_mode: 'Both',\r\n\r\n    // ***** 設定 → アカウント *****\r\n\r\n    // 設定を同期する (Default: 同期しない) (同期無効)\r\n    sync_settings: false,\r\n\r\n    // ***** 設定 → ニコニコ実況 *****\r\n\r\n    // コメントの速さ (Default: 1倍)\r\n    comment_speed_rate: 1,\r\n    // コメントのフォントサイズ (Default: 34px)\r\n    comment_font_size: 34,\r\n    // コメント送信後にコメント入力フォームを閉じる (Default: オン)\r\n    close_comment_form_after_sending: true,\r\n\r\n    // ***** 設定 → ニコニコ実況 (ミュート設定) *****\r\n\r\n    // ミュート済みのコメントのキーワードが入るリスト\r\n    muted_comment_keywords: [],\r\n    // ミュート済みのニコニコユーザー ID が入るリスト\r\n    muted_niconico_user_ids: [],\r\n    // 露骨な表現を含むコメントをミュートする (Default: ミュートする)\r\n    mute_vulgar_comments: true,\r\n    // 罵倒や誹謗中傷、差別的な表現、政治的に偏った表現を含むコメントをミュートする (Default: ミュートする)\r\n    mute_abusive_discriminatory_prejudiced_comments: true,\r\n    // 文字サイズが大きいコメントをミュートする (Default: ミュートする)\r\n    mute_big_size_comments: true,\r\n    // 映像の上下に固定表示されるコメントをミュートする (Default: ミュートしない)\r\n    mute_fixed_comments: false,\r\n    // 色付きのコメントをミュートする (Default: ミュートしない)\r\n    mute_colored_comments: false,\r\n    // 8文字以上同じ文字が連続しているコメントをミュートする (Default: ミュートしない)\r\n    mute_consecutive_same_characters_comments: false,\r\n\r\n    // ***** 設定 → Twitter *****\r\n\r\n    // ツイート送信後にパネルを折りたたむ (Default: オフ)\r\n    fold_panel_after_sending_tweet: false,\r\n    // 番組が切り替わったときにハッシュタグフォームをリセットする (Default: オン)\r\n    reset_hashtag_when_program_switches: true,\r\n    // 視聴中のチャンネルに対応する局タグを自動で追加する (Default: オン)\r\n    auto_add_watching_channel_hashtag: true,\r\n    // デフォルトで表示される Twitter タブ内のタブ (Default: キャプチャタブ)\r\n    twitter_active_tab: 'Capture',\r\n    // ツイートにつけるハッシュタグの位置 (Default: ツイート本文の後に追加する)\r\n    tweet_hashtag_position: 'Append',\r\n    // ツイートするキャプチャに番組名の透かしを描画する (Default: 透かしを描画しない)\r\n    tweet_capture_watermark_position: 'None',\r\n};\r\n\r\n/**\r\n * LocalStorage の KonomiTV-Settings キーから設定データを取得する\r\n * @returns 設定データ\r\n */\r\nexport function getLocalStorageSettings(): {[key: string]: any} {\r\n    const settings = localStorage.getItem('KonomiTV-Settings');\r\n    if (settings !== null) {\r\n        return JSON.parse(settings);\r\n    } else {\r\n        // もし LocalStorage に KonomiTV-Settings キーがまだない場合、あらかじめデフォルトの設定値を保存しておく\r\n        setLocalStorageSettings(default_settings);\r\n        return default_settings;\r\n    }\r\n}\r\n\r\n/**\r\n * LocalStorage の KonomiTV-Settings キーに設定データを保存する\r\n * @param settings 設定データ\r\n */\r\nexport function setLocalStorageSettings(settings: {[key: string]: any}): void {\r\n    localStorage.setItem('KonomiTV-Settings', JSON.stringify(settings));\r\n}\r\n\r\n/**\r\n * 与えられた設定データを並び替えたり足りない設定キーを補完したり不要な設定キーを削除したりと整形して返す\r\n * @param settings 設定データ\r\n */\r\nfunction getNormalizedSettings(settings: {[key: string]: any}): ILocalClientSettings {\r\n\r\n    // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\r\n    // 並び替えられていないと設定データの比較がうまくいかない\r\n    const new_settings: {[key: string]: any} = {};\r\n    for (const default_settings_key of Object.keys(default_settings)) {\r\n        if (default_settings_key in settings) {\r\n            new_settings[default_settings_key] = settings[default_settings_key];\r\n        } else {\r\n            // 後のバージョンで追加されたなどの理由で現状の KonomiTV-Settings に存在しない設定キーの場合\r\n            // その設定キーのデフォルト値を取得する\r\n            new_settings[default_settings_key] = default_settings[default_settings_key];\r\n        }\r\n    }\r\n\r\n    // この状態の新しい設定データを返す\r\n    return new_settings as ILocalClientSettings;\r\n}\r\n\r\n/**\r\n * 設定データを共有するストア\r\n */\r\nconst useSettingsStore = defineStore('settings', {\r\n    state: () => {\r\n\r\n        // ref: https://www.vuemastery.com/blog/refresh-proof-your-pinia-stores/\r\n\r\n        // LocalStorage から設定データを取得する\r\n        const settings = getLocalStorageSettings();\r\n\r\n        // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\r\n        const new_settings = getNormalizedSettings(settings);\r\n\r\n        // この状態の新しい設定データを LocalStorage に保存する\r\n        setLocalStorageSettings(new_settings);\r\n\r\n        // 設定データを Store の state のデフォルト値として返す\r\n        return {\r\n            settings: new_settings as ILocalClientSettings,\r\n        };\r\n    },\r\n    actions: {\r\n\r\n        /**\r\n         * エクスポートした JSON ファイルから設定データをインポートする (既存の設定はすべて上書きされる)\r\n         * @param file エクスポートした JSON ファイル\r\n         * @returns インポートに成功したかどうか\r\n         */\r\n        async importClientSettings(file: File): Promise<boolean> {\r\n\r\n            // JSON ファイルを読み込む\r\n            const settings_json = await file.text();\r\n\r\n            // JSON ファイルをパースする\r\n            let settings = {};\r\n            try {\r\n                settings = JSON.parse(settings_json);\r\n            } catch (error) {\r\n                return false;\r\n            }\r\n\r\n            // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\r\n            const new_settings = getNormalizedSettings(settings);\r\n\r\n            // この状態の新しい設定データを LocalStorage に保存し、Store の state に反映する\r\n            // このとき、既存の設定データはすべて上書きされる\r\n            setLocalStorageSettings(new_settings);\r\n            this.settings = new_settings;\r\n\r\n            // 設定データをサーバーに同期する\r\n            await this.syncClientSettingsToServer();\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * 設定データを初期状態にリセットする\r\n         */\r\n        async resetClientSettings(): Promise<void> {\r\n\r\n            // デフォルトの設定に現在設定の同期がオンになっているかだけ反映した設定データ\r\n            const default_settings_modified: ILocalClientSettings = {\r\n                ...default_settings,\r\n                sync_settings: this.settings.sync_settings,\r\n            };\r\n\r\n            // デフォルト値の設定データを LocalStorage に保存し、Store の state に反映する\r\n            setLocalStorageSettings(default_settings_modified);\r\n            this.settings = default_settings_modified;\r\n\r\n            // 設定データをサーバーに同期する\r\n            await this.syncClientSettingsToServer();\r\n        },\r\n\r\n        /**\r\n         * 設定データのうち、サーバーへの同期対象の設定キーのみで構成されたオブジェクト (IClientSettings と一致する) を返す\r\n         * @returns サーバーへの同期対象の設定キーのみで構成されたオブジェクト\r\n         */\r\n        getSyncableClientSettings(): IClientSettings {\r\n\r\n            // 同期対象の設定キーのみで設定データをまとめ直す\r\n            // sync_settings には同期対象外の設定は含まれない\r\n            const sync_settings: {[key: string]: any} = {};\r\n            for (const sync_settings_key of sync_settings_keys) {\r\n                if (sync_settings_key in this.settings) {\r\n                    sync_settings[sync_settings_key] = this.settings[sync_settings_key];\r\n                } else {\r\n                    // 後から追加された設定キーなどの理由で設定キーが現状の KonomiTV-Settings に存在しない場合\r\n                    // その設定キーのデフォルト値を取得する\r\n                    sync_settings[sync_settings_key] = default_settings[sync_settings_key];\r\n                }\r\n            }\r\n\r\n            return sync_settings as IClientSettings;\r\n        },\r\n\r\n        /**\r\n         * ログイン時かつ同期が有効な場合、サーバーに保存されている設定データをこのクライアントに同期する\r\n         * @param force ログイン中なら同期が有効かに関わらず実行する (デフォルト: false)\r\n         */\r\n        async syncClientSettingsFromServer(force: boolean = false): Promise<void> {\r\n\r\n            // ログインしていない時、同期が無効なときは実行しない\r\n            if (Utils.getAccessToken() === null || (this.settings.sync_settings === false && force === false)) {\r\n                return;\r\n            }\r\n\r\n            // サーバーから設定データをダウンロード\r\n            const settings_server = await Settings.fetchClientSettings();\r\n            if (settings_server === null) {\r\n                return;  // 取得できなくても後続の処理には影響しないので、サイレントに失敗する\r\n            }\r\n\r\n            // クライアントの設定データをサーバーからの設定データで上書き\r\n            for (const [settings_server_key, settings_server_value] of Object.entries(settings_server)) {\r\n                this.settings[settings_server_key] = settings_server_value;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * ログイン時かつ同期が有効な場合、このクライアントの設定をサーバーに同期する\r\n         * @param force ログイン中なら同期が有効かに関わらず実行する (デフォルト: false)\r\n         */\r\n        async syncClientSettingsToServer(force: boolean = false): Promise<void> {\r\n\r\n            // ログインしていない時、同期が無効なときは実行しない\r\n            if (Utils.getAccessToken() === null || (this.settings.sync_settings === false && force === false)) {\r\n                return;\r\n            }\r\n\r\n            // 同期対象の設定キーのみで設定データをまとめ直す\r\n            const sync_settings = this.getSyncableClientSettings();\r\n\r\n            // サーバーに設定データをアップロード\r\n            await Settings.updateClientSettings(sync_settings);\r\n        }\r\n    }\r\n});\r\n\r\nexport default useSettingsStore;\r\n","\r\nimport { Buffer } from 'buffer';\r\n\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\n\r\n\r\n/**\r\n * コメント周りのユーティリティ\r\n */\r\nexport class CommentUtils {\r\n\r\n    // 「露骨な表現を含むコメントをミュートする」のフィルタ正規表現\r\n    private static readonly mute_vulgar_comments_pattern = new RegExp(Buffer.from('XChpXCl8XChVXCl8cHJwcnzvvZDvvZLvvZDvvZJ8U0VYfFPjgIdYfFPil69YfFPil4tYfFPil49YfO+8s++8pe+8uHzvvLPjgIfvvLh877yz4pev77y4fO+8s+KXi++8uHzvvLPil4/vvLh844Ki44OA44Or44OIfOOCouOCveOCs3zjgqLjg4rjgqV844Ki44OK44OrfOOCpOOCq+iHrXzjgqTjgY9844Kk44Oz44OdfOOBhuOCk+OBk3zjgqbjg7PjgrN844GG44KT44GhfOOCpuODs+ODgXzjgqjjgq3jg5t844GI44Gh44GI44GhfOOBiOOBo+OBoXzjgqjjg4Pjg4F844GI44Gj44KNfOOCqOODg+ODrXxe44GI44KNfOOCqOODrXzlt6Xlj6N844Kq44Kr44K6fOOBiuOBleOCj+OCiuOBvuOCk3zjgYrjgZfjgaPjgZN844Kq44K344OD44KzfOOCquODg+OCteODs3zjgYrjgaPjgbHjgYR844Kq44OD44OR44KkfOOCquODiuODi+ODvHzjgYrjgarjgbt844Kq44OK44ObfOOBiuOBseOBhHzjgqrjg5HjgqR844GK44KB44GTfOOCquODoeOCs3zjgYpwfOOBiu+9kHzjgqrjg5Xjg5HjgrN844Ks44OB44Og44OBfOOCreODoeOCu+OCr3zjgq3jg7Pjgr/jg55844GP44Gx44GCfOOBj+OBseOBgXzjgq/jg6rjg4jjg6rjgrl844Kv44Oz44OLfOOBlOOBj+OBlOOBj+OBlOOBj+OBlOOBj3zjgrPjg7Pjg4njg7zjg6B844GR44Gk44GC44GqfOOCseODhOOCouODinzjgrHjg4TnqbR844K244O844Oh44OzfOOCt+OCs3zjgZfjgZPjgZfjgZN844K344Kz44K344KzfOOBmeOBkeOBmeOBkXzjgZvjgYTjgYjjgY1844Gb44GE44KKfOOBm+ODvOOCinzjgZnjgYXjgYXjgYV844GZ44GG44GG44GGfOOCu+OCr+ODreOCuXzjgrvjg4Pjgq/jgrl844K744OV44OsfOOBoeOBo+OBseOBhHzjgaHjgaPjg5HjgqR844OB44OD44OR44KkfOOBoeOCk+OBk3zjgaHjgIfjgZN844Gh4pev44GTfOOBoeKXi+OBk3zjgaHil4/jgZN844OB44Oz44KzfOODgeOAh+OCs3zjg4Hil6/jgrN844OB4peL44KzfOODgeKXj+OCs3zjgaHjgpPjgb1844Gh44CH44G9fOOBoeKXr+OBvXzjgaHil4vjgb1844Gh4peP44G9fOODgeODs+ODnXzjg4HjgIfjg51844OB4pev44OdfOODgeKXi+ODnXzjg4Hil4/jg51844Gh44KT44Gh44KTfOODgeODs+ODgeODs3zjgabjgYPjgpPjgabjgYPjgpN844OG44Kj44Oz44OG44Kj44OzfOOBpuOBg+OCk+OBvXzjg4bjgqPjg7Pjg51844OH44Kr44GEfOODh+OCq+ODgeODs3zjg4fjg6rjg5jjg6t844Gq44GL44Gg44GXfOOBquOBi+OAh+OBl3zjgarjgYvil6/jgZd844Gq44GL4peL44GXfOOBquOBi+KXj+OBl3zohLHjgZJ844OM44GEfOODjOOBi3zjg4zjgqt844OM44GNfOODjOOCrXzjg4zjgY9844OM44KvfOODjOOBkXzjg4zjgrF844OM44GTfOODjOOCs3zjgbHjgYTjgoLjgb9844Gx44GE44Ga44KKfOODkeODs+ODhuOCo3zjg5HjgqTjgrrjg6p844OR44Kk44OR44OzfOODkOOCpOODlnzjg5Hjg5HmtLt844OP44OhfOODlOOCueODiOODs3zjg5Pjg4Pjg4F844G144GG44O7fOOBteOBhuKApnzjgbXjgYV8776M772pfOOBteOBj+OCieOBv3zjgbXjgY/jgonjgpPjgad844G644Gj44GffOOBuuOCjeOBuuOCjXzjg5rjg63jg5rjg618776N776f776b776N776f776bfOODleOCp+ODqXzjgbvjgYbjgZHjgYR844G844Gj44GNfOODneODq+ODjnzjgbzjgo3jgpN844Oc44Ot44OzfO++ju++nu++m+++nXzjgb3jgo3jgop844Od44Ot44OqfO++ju++n+++m+++mHzjg57jg7PjgY3jgaR844Oe44Oz44Kt44OEfOOBvuOCk+OBk3zjgb7jgIfjgZN844G+4pev44GTfOOBvuKXi+OBk3zjgb7il4/jgZN844Oe44Oz44KzfOODnuOAh+OCs3zjg57il6/jgrN844Oe4peL44KzfOODnuKXj+OCs3zjgb7jgpPjgZXjgpN844KC44Gj44GT44KKfOODouODg+OCs+ODqnzjgoLjgb/jgoLjgb9844Oi44Of44Oi44OffOODpOOBo+OBn3zjg6TjgaPjgaZ844Ok44KJfOOChOOCieOBm+OCjXzjg6Tjgop844Ok44OqfOODpOOCi3zjg6Tjgox844Ok44KNfOODqeODluODm3zjg6/jg6zjg6F85oSb5rayfOWSpXzllph86Zmw5qC4fOmZsOiMjnzpmbDllId85rerfOmaoOavm3zpmbDmr5t855Sj44KB44KLfOWls+OBruWtkOOBruaXpXzmsZrjgaPjgZXjgpN85aemfOmojuS5l+S9jXzlt6jkubN85beo5qC5fOW3qOWwu3zlt6jjg4Hjg7N85beo54+NfOmHkeeOiXzmnIjntYx85b6M6IOM5L2NfOWtkOeornzlrZDkvZzjgop85bCE57K+fOa9ruWQuXzkv6HogIV857K+5rayfOmAj+OBkXzmgKfkuqR857K+5a2QfOato+W4uOS9jXzmgKflvrR85oCn55qEfOeUn+eQhnzntbblgKt85a+45q2i44KBfOe0oOadkHzmirHjgYR85oqx44GLfOaKseOBjXzmirHjgY985oqx44GRfOaKseOBk3zkvZPmtrJ85Lmz6aaWfOaBpeWeonznj43mo5J85Lit44Gg44GXfOS4reWHuuOBl3zlsL985oqc44GEfOaKnOOBkeOBquOBhHzmipzjgZHjgot85oqc44GR44KMfOaOkuS+v3zniq/nj4186Iao44KJfOWMheiMjnzli4Potbd86IacfOaRqee+hXzprZTnvoV85o+J44G+fOaPieOBv3zmj4njgoB85o+J44KBfOa8q+a5lnzjgIfvvZ584pev772efOKXi++9nnzil4/vvZ5844CHfnzil69+fOKXi3584pePfnzjgIfjg4Pjgq/jgrl84pev44OD44Kv44K5fOKXi+ODg+OCr+OCuXzil4/jg4Pjgq/jgrk=', 'base64').toString());\r\n\r\n    // 「ネガティブな表現、差別的な表現、政治的に偏った表現を含むコメントをミュートする」のフィルタ正規表現\r\n    private static readonly mute_abusive_discriminatory_prejudiced_comments_pattern = new RegExp(Buffer.from('44CCfOOCouODi+ODl+ODrOOBj+OCk3zjgqLjg4vjg5fjg6zlkJt844Ki44K544OafOOBguOBu3zjgqLjg5t86Zi/5ZGGfOOCpOOCq+OCjHzjgYTjgb7jgYTjgaF844Kk44Oe44Kk44OBfOOCpOODqeOBpOOBj3zjgqbjgrh844Km44O844OofOOCpuODqHzjgqbjg6jjgq9844Km44OyfOOBjeOCguOBhHzjgq3jg6LjgqR844Kt44Oi44GEfOOCrS/jg6Av44OBfOOCrOOCpOOCuHzvvbbvvp7vvbLvvbzvvp5844Ks44Kk44K444OzfOOCrOOCrXzjgqvjgrl844Kt44OD44K6fOOBjeOBoeOBjOOBhHzjgq3jg4HjgqzjgqR844Kt44Og44OBfOOBjeOCieOBhHzjgq3jg6njgqR85auM44GEfOOCr+OCvXzns55844K344OKfOOCueODhuODnnzjgaTjgb7jgonjgap844Gk44G+44KJ44KTfOODgeODp+ODg+ODkeODqnzjg4Hjg6fjg7N85Y2D44On44OzfOOBpOOCk+OBvHzjg4Tjg7Pjg5x844ON44OI44Km44OofOOBq+OBoOOBguOBgnzjg4vjg4B85LqM44OAfO++hu++gO++nnzjg5Hjg7zjg6h844OR44OofOODkeODqOOCr3xe44G044O8JHxe44OU44O8JHzjgbbjgaPjgZV844OW44OD44K1fOOBtuOBleOBhHzjg5bjgrXjgqR844OY44Kk44OI44K544OU44O844OBfOODm+ODonzjgb7jgazjgZF844Oh44Kv44OpfOODkOOCq3zjg6DjgqvjgaTjgY986I2S44KJ44GXfOm6u+eUn+OCu+ODoeODs+ODiHzlj7Pnv7x85rGa54mpfOaFsOWuieWppnzlrrPlhZB85aSW5a2XfOWnpuWbvXzpn5Plm7186Z+T5LitfOmfk+aXpXzln7rlnLDlpJZ85rCX54uC44GEfOawl+mBleOBhHzliIfjgaPjgZ985YiH44Gj44GmfOawl+aMgeOBoeaCqnzoh6185bGRfOWbveS6pOaWree1tnzlm73nsY185Zu944Gr5biw44KMfOWbveOBuOW4sOOCjHzlt6bnv7x85q66fOmgg3zpoIPjgZd86aCD44GZfOmgg+OBm3xe5ZyofOWcqOaXpXzlnKjml6XnibnmqKl85Zyo54m55LyafOWPguaUv+aoqXznsr7npZ7nlbDluLjogIV85q2744GtfOawj+OBrXzvvoDvvot85q255YyVfOatueODknzmrbvliJF844K344Kx44KkfOOBl+OBkeOBhHzlpLHpgJ986Zqc5a6zfOWkp+adseS6nHzmlq3kuqR86YCa5ZCNfOS4remfk3zmnJ3prq585b6055So5belfOWjunzlo7d85aO8fOaXpemfk3zml6XluJ1857KY552AfOWNiuWztnzlj43ml6V85Y+N5rCR5pePfOmmrOm5v3znmbrni4J855m66YGUfOactHzlo7Llm7185LiN5b+rfOS9teWQiHzplpPmipzjgZF854Sh6IO9fOaWh+WPpXzpnZblm7186YeO6YOO', 'base64').toString());\r\n\r\n    // 「8文字以上同じ文字が連続しているコメントをミュートする」のフィルタ正規表現\r\n    private static readonly mute_consecutive_same_characters_comments_pattern = /(.)\\1{7,}/;\r\n\r\n    // ニコ生の特殊コマンド付きコメントのフィルタ正規表現\r\n    private static readonly special_command_comments_pattern = /\\/[a-z]+ /;\r\n\r\n    // 迷惑な統計コメントのフィルタ正規表現\r\n    private static readonly annoying_statistical_comments_pattern = /最高\\d+米\\/|計\\d+ＩＤ|総\\d+米/;\r\n\r\n    // ニコニコの色指定を 16 進数カラーコードに置換するテーブル\r\n    private static readonly color_table: {[key: string]: string} = {\r\n        'white': '#FFEAEA',\r\n        'red': '#F02840',\r\n        'pink': '#FD7E80',\r\n        'orange': '#FDA708',\r\n        'yellow': '#FFE133',\r\n        'green': '#64DD17',\r\n        'cyan': '#00D4F5',\r\n        'blue': '#4763FF',\r\n        'purple': '#D500F9',\r\n        'black': '#1E1310',\r\n        'white2': '#CCCC99',\r\n        'niconicowhite': '#CCCC99',\r\n        'red2': '#CC0033',\r\n        'truered': '#CC0033',\r\n        'pink2': '#FF33CC',\r\n        'orange2': '#FF6600',\r\n        'passionorange': '#FF6600',\r\n        'yellow2': '#999900',\r\n        'madyellow': '#999900',\r\n        'green2': '#00CC66',\r\n        'elementalgreen': '#00CC66',\r\n        'cyan2': '#00CCCC',\r\n        'blue2': '#3399FF',\r\n        'marineblue': '#3399FF',\r\n        'purple2': '#6633CC',\r\n        'nobleviolet': '#6633CC',\r\n        'black2': '#666666',\r\n    };\r\n\r\n\r\n    /**\r\n     * ニコニコの色指定を 16 進数カラーコードに置換する\r\n     * @param color ニコニコの色指定\r\n     * @return 16 進数カラーコード\r\n     */\r\n    static getCommentColor(color: string): string | null {\r\n        return this.color_table[color] || null;\r\n    }\r\n\r\n\r\n    /**\r\n     * ニコニコの位置指定を DPlayer の位置指定に置換する\r\n     * @param position ニコニコの位置指定\r\n     * @return DPlayer の位置指定\r\n     */\r\n    static getCommentPosition(position: string): 'top' | 'right' | 'bottom' | null {\r\n        switch (position) {\r\n            case 'ue':\r\n                return 'top';\r\n            case 'naka':\r\n                return 'right';\r\n            case 'shita':\r\n                return 'bottom';\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * ニコニコのサイズ指定を DPlayer のサイズ指定に置換する\r\n     * @param size ニコニコのサイズ指定\r\n     * @returns DPlayer のサイズ指定\r\n     */\r\n    static getCommentSize(size: string): 'big' | 'medium' | 'small' | null {\r\n        switch (size) {\r\n            case 'big':\r\n            case 'medium':\r\n            case 'small':\r\n                return size;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * ニコニコのコメントコマンドを解析する\r\n     * @param comment_mail ニコニコのコメントコマンド\r\n     * @returns コメントの色、位置、サイズ\r\n     */\r\n    static parseCommentCommand(comment_mail: string): {\r\n        color: string;\r\n        position: 'top' | 'right' | 'bottom';\r\n        size: 'big' | 'medium' | 'small';\r\n    } {\r\n        let color = '#FFEAEA';\r\n        let position: 'top' | 'right' | 'bottom' = 'right';\r\n        let size: 'big' | 'medium' | 'small' = 'medium';\r\n\r\n        if (comment_mail !== undefined && comment_mail !== null) {\r\n            const commands = comment_mail.replace('184', '').split(' ');\r\n\r\n            for (const command of commands) {\r\n                const parsed_color = CommentUtils.getCommentColor(command);\r\n                const parsed_position = CommentUtils.getCommentPosition(command);\r\n                const parsed_size = CommentUtils.getCommentSize(command);\r\n                if (parsed_color !== null) {\r\n                    color = parsed_color;\r\n                }\r\n                if (parsed_position !== null) {\r\n                    position = parsed_position;\r\n                }\r\n                if (parsed_size !== null) {\r\n                    size = parsed_size;\r\n                }\r\n            }\r\n        }\r\n\r\n        return {color, position, size};\r\n    }\r\n\r\n\r\n    /**\r\n     * ミュート対象のコメントかどうかを判断する\r\n     * @param comment コメント\r\n     * @param user_id コメントを投稿したユーザーの ID\r\n     * @param color コメントの色\r\n     * @param position コメントの位置\r\n     * @param size コメントのサイズ\r\n     * @return ミュート対象のコメントなら true を返す\r\n     */\r\n    static isMutedComment(\r\n        comment: string,\r\n        user_id: string,\r\n        color?: string,\r\n        position?: 'top' | 'right' | 'bottom',\r\n        size?: 'big' | 'medium' | 'small',\r\n    ): boolean {\r\n\r\n        const settings_store = useSettingsStore();\r\n\r\n        // ユーザー ID ミュート処理\r\n        if (settings_store.settings.muted_niconico_user_ids.includes(user_id)) {\r\n            return true;\r\n        }\r\n\r\n        // ニコ生の特殊コマンド付きコメント (/nicoad, /emotion など) を一括で弾く\r\n        if (CommentUtils.special_command_comments_pattern.test(comment)) {\r\n            return true;\r\n        }\r\n\r\n        // 「映像の上下に固定表示されるコメントをミュートする」がオンの場合\r\n        // コメントの位置が top (上固定) もしくは bottom (下固定) のときは弾く\r\n        if (settings_store.settings.mute_fixed_comments === true && (position === 'top' || position === 'bottom')) {\r\n            console.log('[CommentUtils] Muted comment (fixed_comments): ' + comment);\r\n            return true;\r\n        }\r\n\r\n        // 「色付きのコメントをミュートする」がオンの場合\r\n        // コメントの色が #FFEAEA (デフォルト) 以外のときは弾く\r\n        if (settings_store.settings.mute_colored_comments === true && color !== '#FFEAEA') {\r\n            console.log('[CommentUtils] Muted comment (colored_comments): ' + comment);\r\n            return true;\r\n        }\r\n\r\n        // 「文字サイズが大きいコメントをミュートする」がオンの場合\r\n        // コメントのサイズが big のときは弾く\r\n        if (settings_store.settings.mute_big_size_comments === true && size === 'big') {\r\n            console.log('[CommentUtils] Muted comment (big_size_comments): ' + comment);\r\n            return true;\r\n        }\r\n\r\n        // 「露骨な表現を含むコメントをミュートする」がオンの場合\r\n        if ((settings_store.settings.mute_vulgar_comments === true) &&\r\n            (CommentUtils.mute_vulgar_comments_pattern.test(comment))) {\r\n            console.log('[CommentUtils] Muted comment (vulgar_comments): ' + comment);\r\n            return true;\r\n        }\r\n\r\n        // 「ネガティブな表現、差別的な表現、政治的に偏った表現を含むコメントをミュートする」がオンの場合\r\n        if ((settings_store.settings.mute_abusive_discriminatory_prejudiced_comments === true) &&\r\n            (CommentUtils.mute_abusive_discriminatory_prejudiced_comments_pattern.test(comment))) {\r\n            console.log('[CommentUtils] Muted comment (abusive_discriminatory_prejudiced_comments): ' + comment);\r\n            return true;\r\n        }\r\n\r\n        // 「8文字以上同じ文字が連続しているコメントをミュートする」がオンの場合\r\n        if ((settings_store.settings.mute_consecutive_same_characters_comments === true &&\r\n            (CommentUtils.mute_consecutive_same_characters_comments_pattern.test(comment)))) {\r\n            console.log('[CommentUtils] Muted comment (consecutive_same_characters_comments): ' + comment);\r\n            return true;\r\n        }\r\n\r\n        // キーワードミュート処理\r\n        for (const muted_comment_keyword of settings_store.settings.muted_comment_keywords) {\r\n            if (muted_comment_keyword.pattern === '') continue;  // キーワードが空文字のときは無視\r\n            switch (muted_comment_keyword.match) {\r\n                // 部分一致\r\n                case 'partial':\r\n                    if (comment.includes(muted_comment_keyword.pattern)) {\r\n                        console.log('[CommentUtils] Muted comment (partial): ' + comment);\r\n                        return true;\r\n                    }\r\n                    break;\r\n                // 前方一致\r\n                case 'forward':\r\n                    if (comment.startsWith(muted_comment_keyword.pattern)) {\r\n                        console.log('[CommentUtils] Muted comment (forward): ' + comment);\r\n                        return true;\r\n                    }\r\n                    break;\r\n                // 後方一致\r\n                case 'backward':\r\n                    if (comment.endsWith(muted_comment_keyword.pattern)) {\r\n                        console.log('[CommentUtils] Muted comment (backward): ' + comment);\r\n                        return true;\r\n                    }\r\n                    break;\r\n                // 完全一致\r\n                case 'exact':\r\n                    if (comment === muted_comment_keyword.pattern) {\r\n                        console.log('[CommentUtils] Muted comment (exact): ' + comment);\r\n                        return true;\r\n                    }\r\n                    break;\r\n                // 正規表現\r\n                case 'regex':\r\n                    if (new RegExp(muted_comment_keyword.pattern).test(comment)) {\r\n                        console.log('[CommentUtils] Muted comment (regex): ' + comment);\r\n                        return true;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // 「ＮHK→計1447ＩＤ／内プレ425ＩＤ／総33372米 ◆ Ｅﾃﾚ → 計73ＩＤ／内プレ19ＩＤ／総941米」のような\r\n        // 迷惑コメントを一括で弾く (あえてミュートしたくないユースケースが思い浮かばないのでデフォルトで弾く)\r\n        // 一番最後なのは、この迷惑コメント自体の頻度が低いため\r\n        if (CommentUtils.annoying_statistical_comments_pattern.test(comment)) {\r\n            return true;\r\n        }\r\n\r\n        // いずれのミュート処理にも引っかからなかった (ミュート対象ではない)\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * ミュート済みキーワードリストに追加する (完全一致)\r\n     * @param comment コメント文字列\r\n     */\r\n    static addMutedKeywords(comment: string): void {\r\n\r\n        // すでにまったく同じミュート済みキーワードが追加済みの場合は何もしない\r\n        const settings_store = useSettingsStore();\r\n        for (const muted_comment_keyword of settings_store.settings.muted_comment_keywords) {\r\n            if (muted_comment_keyword.match === 'exact' && muted_comment_keyword.pattern === comment) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // ミュート済みキーワードリストに追加\r\n        settings_store.settings.muted_comment_keywords.push({\r\n            match: 'exact',\r\n            pattern: comment,\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * ミュート済みニコニコユーザー ID リストに追加する\r\n     * @param user_id ニコニコユーザー ID\r\n     */\r\n    static addMutedNiconicoUserIDs(user_id: string): void {\r\n\r\n        // すでに追加済みの場合は何もしない\r\n        const settings_store = useSettingsStore();\r\n        if (settings_store.settings.muted_niconico_user_ids.includes(user_id)) {\r\n            return;\r\n        }\r\n\r\n        // ミュート済みニコニコユーザー ID リストに追加\r\n        settings_store.settings.muted_niconico_user_ids.push(user_id);\r\n    }\r\n}\r\n","\r\nimport DPlayer from 'dplayer';\r\n\r\n/**\r\n * API 上設定できる動画の画質\r\n */\r\ntype APIVideoQuality = (\r\n    '1080p-60fps' |\r\n    '1080p-60fps-hevc' |\r\n    '1080p' |\r\n    '1080p-hevc' |\r\n    '810p' |\r\n    '810p-hevc' |\r\n    '720p' |\r\n    '720p-hevc' |\r\n    '540p' |\r\n    '540p-hevc' |\r\n    '480p' |\r\n    '480p-hevc' |\r\n    '360p' |\r\n    '360p-hevc' |\r\n    '240p' |\r\n    '240p-hevc'\r\n);\r\n\r\n\r\n\r\n/**\r\n * プレイヤー周りのユーティリティ\r\n */\r\nexport class PlayerUtils {\r\n\r\n    /**\r\n     * プレイヤーの背景画像をランダムで取得し、その URL を返す\r\n     * @returns ランダムで設定されたプレイヤーの背景画像の URL\r\n     */\r\n    static generatePlayerBackgroundURL(): string {\r\n        const background_count = 50;  // 50種類から選択\r\n        const random = (Math.floor(Math.random() * background_count) + 1);\r\n        return `/assets/images/player-backgrounds/${random.toString().padStart(2, '0')}.jpg`;\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在のブラウザで H.265 / HEVC 映像が再生できるかどうかを取得する\r\n     * ref: https://github.com/StaZhu/enable-chromium-hevc-hardware-decoding#mediacapabilities\r\n     * @returns 再生できるなら true、できないなら false\r\n     */\r\n    static isHEVCVideoSupported(): boolean {\r\n        // hvc1.1.6.L123.B0 の部分は呪文 (HEVC であることと、そのプロファイルを示す値らしい)\r\n        return document.createElement('video').canPlayType('video/mp4; codecs=\"hvc1.1.6.L123.B0\"') === 'probably';\r\n    }\r\n\r\n\r\n    /**\r\n     * DPlayer のインスタンスから API で設定できる画質を取得する\r\n     * @param player DPlayer のインスタンス\r\n     * @returns API で設定できる画質 (取得できなかった場合は基本復旧不能だが、一応 \"1080p\" を返す)\r\n     */\r\n    static extractAPIQualityFromDPlayer(player: DPlayer): APIVideoQuality {\r\n        if (player.quality === null) {\r\n            return '1080p';\r\n        }\r\n        const regex = /streams\\/live\\/[a-z0-9-]*\\/(.*)\\/(mpegts|ll-hls)/;\r\n        const match = player.quality.url.match(regex);\r\n        return match ? (match[1] as APIVideoQuality) : '1080p';\r\n    }\r\n}\r\n","\r\nimport { IProgram } from '@/services/Programs';\r\nimport Utils, { dayjs } from '@/utils';\r\n\r\n\r\n/**\r\n * 番組情報周りのユーティリティ\r\n */\r\nexport class ProgramUtils {\r\n\r\n    // 映像のコーデック\r\n    // ref: https://github.com/Chinachu/Mirakurun/blob/master/src/Mirakurun/EPG.ts#L23-L27\r\n    static readonly STREAM_CONTENT = {\r\n        0x01: 'MPEG-2',\r\n        0x05: 'H.264',\r\n        0x09: 'H.265',\r\n    };\r\n\r\n    // 映像の解像度\r\n    // ref: https://github.com/Chinachu/Mirakurun/blob/master/src/Mirakurun/EPG.ts#L29-L63\r\n    static readonly VIDEO_COMPONENT_TYPE = {\r\n        0x01: '480i',\r\n        0x02: '480i',\r\n        0x03: '480i',\r\n        0x04: '480i',\r\n        0x83: '4320p',\r\n        0x91: '2160p',\r\n        0x92: '2160p',\r\n        0x93: '2160p',\r\n        0x94: '2160p',\r\n        0xA1: '480p',\r\n        0xA2: '480p',\r\n        0xA3: '480p',\r\n        0xA4: '480p',\r\n        0xB1: '1080i',\r\n        0xB2: '1080i',\r\n        0xB3: '1080i',\r\n        0xB4: '1080i',\r\n        0xC1: '720p',\r\n        0xC2: '720p',\r\n        0xC3: '720p',\r\n        0xC4: '720p',\r\n        0xD1: '240p',\r\n        0xD2: '240p',\r\n        0xD3: '240p',\r\n        0xD4: '240p',\r\n        0xE1: '1080p',\r\n        0xE2: '1080p',\r\n        0xE3: '1080p',\r\n        0xE4: '1080p',\r\n        0xF1: '180p',\r\n        0xF2: '180p',\r\n        0xF3: '180p',\r\n        0xF4: '180p',\r\n    };\r\n\r\n    // 以下は ariblib から LivePSIArchivedDataDecoder で必要なもののみ移植\r\n    // node-aribts にも同等の定義があるが微妙に文字列の表記揺れがあるため、互換性を鑑みて敢えて移植している\r\n    // ref: https://github.com/tsukumijima/ariblib/blob/master/ariblib/constants.py\r\n\r\n    // ARIB-STD-B10-2-H コンテント記述子におけるジャンル指定\r\n    // KonomiTV では見栄え的な都合で中分類の \"／\" を \"・\" に置き換えている (サーバー側も同様)\r\n    static readonly CONTENT_TYPE = {\r\n        0x0: ['ニュース・報道', {\r\n            0x0: '定時・総合',\r\n            0x1: '天気',\r\n            0x2: '特集・ドキュメント',\r\n            0x3: '政治・国会',\r\n            0x4: '経済・市況',\r\n            0x5: '海外・国際',\r\n            0x6: '解説',\r\n            0x7: '討論・会談',\r\n            0x8: '報道特番',\r\n            0x9: 'ローカル・地域',\r\n            0xA: '交通',\r\n            0xF: 'その他',\r\n        }],\r\n        0x1: ['スポーツ', {\r\n            0x0: 'スポーツニュース',\r\n            0x1: '野球',\r\n            0x2: 'サッカー',\r\n            0x3: 'ゴルフ',\r\n            0x4: 'その他の球技',\r\n            0x5: '相撲・格闘技',\r\n            0x6: 'オリンピック・国際大会',\r\n            0x7: 'マラソン・陸上・水泳',\r\n            0x8: 'モータースポーツ',\r\n            0x9: 'マリン・ウィンタースポーツ',\r\n            0xA: '競馬・公営競技',\r\n            0xF: 'その他',\r\n        }],\r\n        0x2: ['情報・ワイドショー', {\r\n            0x0: '芸能・ワイドショー',\r\n            0x1: 'ファッション',\r\n            0x2: '暮らし・住まい',\r\n            0x3: '健康・医療',\r\n            0x4: 'ショッピング・通販',\r\n            0x5: 'グルメ・料理',\r\n            0x6: 'イベント',\r\n            0x7: '番組紹介・お知らせ',\r\n            0xF: 'その他',\r\n        }],\r\n        0x3: ['ドラマ', {\r\n            0x0: '国内ドラマ',\r\n            0x1: '海外ドラマ',\r\n            0x2: '時代劇',\r\n            0xF: 'その他',\r\n        }],\r\n        0x4: ['音楽', {\r\n            0x0: '国内ロック・ポップス',\r\n            0x1: '海外ロック・ポップス',\r\n            0x2: 'クラシック・オペラ',\r\n            0x3: 'ジャズ・フュージョン',\r\n            0x4: '歌謡曲・演歌',\r\n            0x5: 'ライブ・コンサート',\r\n            0x6: 'ランキング・リクエスト',\r\n            0x7: 'カラオケ・のど自慢',\r\n            0x8: '民謡・邦楽',\r\n            0x9: '童謡・キッズ',\r\n            0xA: '民族音楽・ワールドミュージック',\r\n            0xF: 'その他',\r\n        }],\r\n        0x5: ['バラエティ', {\r\n            0x0: 'クイズ',\r\n            0x1: 'ゲーム',\r\n            0x2: 'トークバラエティ',\r\n            0x3: 'お笑い・コメディ',\r\n            0x4: '音楽バラエティ',\r\n            0x5: '旅バラエティ',\r\n            0x6: '料理バラエティ',\r\n            0xF: 'その他',\r\n        }],\r\n        0x6: ['映画', {\r\n            0x0: '洋画',\r\n            0x1: '邦画',\r\n            0x2: 'アニメ',\r\n            0xF: 'その他',\r\n        }],\r\n        0x7: ['アニメ・特撮', {\r\n            0x0: '国内アニメ',\r\n            0x1: '海外アニメ',\r\n            0x2: '特撮',\r\n            0xF: 'その他',\r\n        }],\r\n        0x8: ['ドキュメンタリー・教養', {\r\n            0x0: '社会・時事',\r\n            0x1: '歴史・紀行',\r\n            0x2: '自然・動物・環境',\r\n            0x3: '宇宙・科学・医学',\r\n            0x4: 'カルチャー・伝統文化',\r\n            0x5: '文学・文芸',\r\n            0x6: 'スポーツ',\r\n            0x7: 'ドキュメンタリー全般',\r\n            0x8: 'インタビュー・討論',\r\n            0xF: 'その他',\r\n        }],\r\n        0x9: ['劇場・公演', {\r\n            0x0: '現代劇・新劇',\r\n            0x1: 'ミュージカル',\r\n            0x2: 'ダンス・バレエ',\r\n            0x3: '落語・演芸',\r\n            0x4: '歌舞伎・古典',\r\n            0xF: 'その他',\r\n        }],\r\n        0xA: ['趣味・教育', {\r\n            0x0: '旅・釣り・アウトドア',\r\n            0x1: '園芸・ペット・手芸',\r\n            0x2: '音楽・美術・工芸',\r\n            0x3: '囲碁・将棋',\r\n            0x4: '麻雀・パチンコ',\r\n            0x5: '車・オートバイ',\r\n            0x6: 'コンピュータ・ＴＶゲーム',\r\n            0x7: '会話・語学',\r\n            0x8: '幼児・小学生',\r\n            0x9: '中学生・高校生',\r\n            0xA: '大学生・受験',\r\n            0xB: '生涯教育・資格',\r\n            0xC: '教育問題',\r\n            0xF: 'その他',\r\n        }],\r\n        0xB: ['福祉', {\r\n            0x0: '高齢者',\r\n            0x1: '障害者',\r\n            0x2: '社会福祉',\r\n            0x3: 'ボランティア',\r\n            0x4: '手話',\r\n            0x5: '文字（字幕）',\r\n            0x6: '音声解説',\r\n            0xF: 'その他',\r\n        }],\r\n        0xE: ['拡張', {\r\n            0x0: 'BS/地上デジタル放送用番組付属情報',\r\n            0x1: '広帯域CSデジタル放送用拡張',\r\n            0x2: '衛星デジタル音声放送用拡張',\r\n            0x3: 'サーバー型番組付属情報',\r\n            0x4: 'IP放送用番組付属情報',\r\n        }],\r\n        0xF: ['その他', {\r\n            0xF: 'その他',\r\n        }],\r\n    };\r\n\r\n    // ARIB-TR-B24-4.B 表B-1 地上デジタルテレビジョン放送用番組付属情報\r\n    // ARIB-TR-B25-4.B 表B-1 BSデジタル放送用番組付属情報\r\n    static readonly USER_TYPE = {\r\n        0x00: '中止の可能性あり',\r\n        0x01: '延長の可能性あり',\r\n        0x02: '中断の可能性あり',\r\n        0x03: '同一シリーズの別話数放送の可能性あり',\r\n        0x04: '編成未定枠',\r\n        0x05: '繰り上げの可能性あり',\r\n        0x10: '中断ニュースあり',\r\n        0x11: '当該イベントに関連する臨時サービスあり',\r\n        0x20: '当該イベント中に3D映像あり',\r\n    };\r\n\r\n    // ARIB-STD-B10-2-6.2.3 表6-5 コンポーネント内容とコンポーネント種別\r\n    static readonly COMPONENT_TYPE = {\r\n        0x01: {\r\n            0x00: '将来使用のためリザーブ',\r\n            0x01: '映像480i(525i)、アスペクト比4:3',\r\n            0x02: '映像480i(525i)、アスペクト比16:9 パンベクトルあり',\r\n            0x03: '映像480i(525i)、アスペクト比16:9 パンベクトルなし',\r\n            0x04: '映像480i(525i)、アスペクト比16:9',\r\n            0x91: '映像2160p、アスペクト比4:3',\r\n            0x92: '映像2160p、アスペクト比16:9 パンベクトルあり',\r\n            0x93: '映像2160p、アスペクト比16:9 パンベクトルなし',\r\n            0x94: '映像2160p、アスペクト比16:9',\r\n            0xA1: '映像480p(525p)、アスペクト比4:3',\r\n            0xA2: '映像480p(525p)、アスペクト比16:9 パンベクトルあり',\r\n            0xA3: '映像480p(525p)、アスペクト比16:9 パンベクトルなし',\r\n            0xA4: '映像480p(525p)、アスペクト比16:9',\r\n            0xB1: '映像1080i(1125i)、アスペクト比4:3',\r\n            0xB2: '映像1080i(1125i)、アスペクト比16:9 パンベクトルあり',\r\n            0xB3: '映像1080i(1125i)、アスペクト比16:9 パンベクトルなし',\r\n            0xB4: '映像1080i(1125i)、アスペクト比16:9',\r\n            0xC1: '映像720p(750p)、アスペクト比4:3',\r\n            0xC2: '映像720p(750p)、アスペクト比16:9 パンベクトルあり',\r\n            0xC3: '映像720p(750p)、アスペクト比16:9 パンベクトルなし',\r\n            0xC4: '映像720p(750p)、アスペクト比16:9',\r\n            0xD1: '映像240p アスペクト比4:3',\r\n            0xD2: '映像240p アスペクト比16:9 パンベクトルあり',\r\n            0xD3: '映像240p アスペクト比16:9 パンベクトルなし',\r\n            0xD4: '映像240p アスペクト比16:9',\r\n            0xE1: '映像1080p(1125p)、アスペクト比4:3',\r\n            0xE2: '映像1080p(1125p)、アスペクト比16:9 パンベクトルあり',\r\n            0xE3: '映像1080p(1125p)、アスペクト比16:9 パンベクトルなし',\r\n            0xE4: '映像1080p(1125p)、アスペクト比16:9',\r\n            0xF1: '映像180p アスペクト比4:3',\r\n            0xF2: '映像180p アスペクト比16:9 パンベクトルあり',\r\n            0xF3: '映像180p アスペクト比16:9 パンベクトルなし',\r\n            0xF4: '映像180p アスペクト比16:9',\r\n        },\r\n        0x02: {\r\n            0x00: '将来使用のためリザーブ',\r\n            0x01: '1/0モード(シングルモノ)',\r\n            0x02: '1/0+1/0モード(デュアルモノ)',\r\n            0x03: '2/0モード(ステレオ)',\r\n            0x04: '2/1モード',\r\n            0x05: '3/0モード',\r\n            0x06: '2/2モード',\r\n            0x07: '3/1モード',\r\n            0x08: '3/2モード',\r\n            0x09: '3/2+LFEモード(3/2.1モード)',\r\n            0x0A: '3/3.1モード',\r\n            0x0B: '2/0/0-2/0/2-0.1モード',\r\n            0x0C: '5/2.1モード',\r\n            0x0D: '3/2/2.1モード',\r\n            0x0E: '2/0/0-3/0/2-0.1モード',\r\n            0x0F: '0/2/0-3/0/2-0.2モード',\r\n            0x10: '2/0/0-3/2/3-0.2モード',\r\n            0x11: '3/3/3-5/2/3-3/0/0.2モード',\r\n            0x40: '視覚障害者用音声解説',\r\n            0x41: '聴覚障害者用音声',\r\n        },\r\n        0x05: {\r\n            0x01: 'H.264|MPEG-4 AVC、映像480i(525i)、アスペクト比4:3',\r\n            0x02: 'H.264|MPEG-4 AVC、映像480i(525i)、アスペクト比16:9 パンベクトルあり',\r\n            0x03: 'H.264|MPEG-4 AVC、映像480i(525i)、アスペクト比16:9 パンベクトルなし ',\r\n            0x04: 'H.264|MPEG-4 AVC、映像480i(525i)、アスペクト比 > 16:9',\r\n            0x91: 'H.264|MPEG-4 AVC、映像2160p、アスペクト比4:3',\r\n            0x92: 'H.264|MPEG-4 AVC、映像2160p、アスペクト比16:9 パンベクトルあり',\r\n            0x93: 'H.264|MPEG-4 AVC、映像2160p、アスペクト比16:9 パンベクトルなし',\r\n            0x94: 'H.264|MPEG-4 AVC、映像2160p、アスペクト比 > 16:9',\r\n            0xA1: 'H.264|MPEG-4 AVC、映像480p(525p)、アスペクト比4:3',\r\n            0xA2: 'H.264|MPEG-4 AVC、映像480p(525p)、アスペクト比16:9 パンベクトルあり',\r\n            0xA3: 'H.264|MPEG-4 AVC、映像480p(525p)、アスペクト比16:9 パンベクトルなし',\r\n            0xA4: 'H.264|MPEG-4 AVC、映像480p(525p)、アスペクト比 > 16:9',\r\n            0xB1: 'H.264|MPEG-4 AVC、映像1080i(1125i)、アスペクト比4:3',\r\n            0xB2: 'H.264|MPEG-4 AVC、映像1080i(1125i)、アスペクト比16:9 パンベクトルあり',\r\n            0xB3: 'H.264|MPEG-4 AVC、映像1080i(1125i)、アスペクト比16:9 パンベクトルなし',\r\n            0xB4: 'H.264|MPEG-4 AVC、映像1080i(1125i)、アスペクト比 > 16:9',\r\n            0xC1: 'H.264|MPEG-4 AVC、映像720p(750p)、アスペクト比4:3',\r\n            0xC2: 'H.264|MPEG-4 AVC、映像720p(750p)、アスペクト比16:9 パンベクトルあり',\r\n            0xC3: 'H.264|MPEG-4 AVC、映像720p(750p)、アスペクト比16:9 パンベクトルなし',\r\n            0xC4: 'H.264|MPEG-4 AVC、映像720p(750p)、アスペクト比 > 16:9',\r\n            0xD1: 'H.264|MPEG-4 AVC、映像240p アスペクト比4:3',\r\n            0xD2: 'H.264|MPEG-4 AVC、映像240p アスペクト比16:9 パンベクトルあり',\r\n            0xD3: 'H.264|MPEG-4 AVC、映像240p アスペクト比16:9 パンベクトルなし',\r\n            0xD4: 'H.264|MPEG-4 AVC、映像240p アスペクト比 > 16:9',\r\n            0xE1: 'H.264|MPEG-4 AVC、映像1080p(1125p)、アスペクト比4:3',\r\n            0xE2: 'H.264|MPEG-4 AVC、映像1080p(1125p)、アスペクト比16:9 パンベクトルあり',\r\n            0xE3: 'H.264|MPEG-4 AVC、映像1080p(1125p)、アスペクト比16:9 パンベクトルなし',\r\n            0xE4: 'H.264|MPEG-4 AVC、映像1080p(1125p)、アスペクト比 > 16:9',\r\n            0xF1: 'H.264|MPEG-4 AVC、映像180p アスペクト比4:3',\r\n            0xF2: 'H.264|MPEG-4 AVC、映像180p アスペクト比16:9 パンベクトルあり',\r\n            0xF3: 'H.264|MPEG-4 AVC、映像180p アスペクト比16:9 パンベクトルなし',\r\n            0xF4: 'H.264|MPEG-4 AVC、映像180p アスペクト比 > 16:9',\r\n        },\r\n    };\r\n\r\n    // ARIB-STD-B10-2-6.2.26 表6-45 サンプリング周波数\r\n    static readonly SAMPLING_RATE = {\r\n        0b000: '将来使用のためリザーブ',\r\n        0b001: '16kHz',\r\n        0b010: '22.05kHz',\r\n        0b011: '24kHz',\r\n        0b100: 'リザーブ',\r\n        0b101: '32kHz',\r\n        0b110: '44.1kHz',\r\n        0b111: '48kHz',\r\n    };\r\n\r\n    // 事前に文字列の変換テーブルを構築しておく\r\n    private static readonly format_string_translation_map = ProgramUtils.buildFormatStringTranslationMap();\r\n\r\n\r\n    /**\r\n     * 番組情報中の[字]や[解]などの記号をいい感じに装飾する\r\n     * @param program 番組情報のオブジェクト\r\n     * @param key 番組情報のオブジェクトから取り出すプロパティのキー\r\n     * @returns 装飾した文字列\r\n     */\r\n    static decorateProgramInfo(program: IProgram | null, key: string): string {\r\n\r\n        // program が空でないかつ、program[key] が存在する\r\n        if (program !== null && program[key] !== null) {\r\n\r\n            // 番組情報に含まれる HTML の特殊文字で表示がバグらないように、事前に HTML エスケープしておく\r\n            const text = Utils.escapeHTML(program[key]);\r\n\r\n            // 本来 ARIB 外字である記号の一覧\r\n            // ref: https://ja.wikipedia.org/wiki/%E7%95%AA%E7%B5%84%E8%A1%A8\r\n            // ref: https://github.com/xtne6f/EDCB/blob/work-plus-s/EpgDataCap3/EpgDataCap3/ARIB8CharDecode.cpp#L1319\r\n            const mark = '新|終|再|交|映|手|声|多|副|字|文|CC|OP|二|S|B|SS|無|無料' +\r\n                'C|S1|S2|S3|MV|双|デ|D|N|W|P|H|HV|SD|天|解|料|前|後初|生|販|吹|PPV|' +\r\n                '演|移|他|収|・|英|韓|中|字/日|字/日英|3D|2K|4K|8K|5.1|7.1|22.2|60P|120P|d|HC|HDR|SHV|UHD|VOD|配|初';\r\n\r\n            // 正規表現を作成\r\n            const pattern1 = new RegExp('\\\\((二|字|再)\\\\)', 'g');  // 通常の括弧で囲まれている記号\r\n            const pattern2 = new RegExp(`\\\\[(${mark})\\\\]`, 'g');\r\n\r\n            // 正規表現で置換した結果を返す\r\n            return text.replace(pattern1, '<span class=\"decorate-symbol\">$1</span>')\r\n                .replace(pattern2, '<span class=\"decorate-symbol\">$1</span>');\r\n\r\n        // 番組情報がない時間帯\r\n        } else {\r\n\r\n            // 23時～翌7時 (0:00 ~ 06:59 or 23:00 ~ 23:59) の間なら放送を休止している可能性が高いので、放送休止と表示する\r\n            const now = dayjs();\r\n            const pause_time_start = dayjs().hour(0).minute(0).second(0);\r\n            const pause_time_end = dayjs().hour(6).minute(59).second(59);\r\n            const pause_time_start_23 = dayjs().hour(23).minute(0).second(0);\r\n            const pause_time_end_23 = dayjs().hour(23).minute(59).second(59);\r\n            if ((now.isSameOrAfter(pause_time_start) && now.isSameOrBefore(pause_time_end)) ||\r\n                (now.isSameOrAfter(pause_time_start_23) && now.isSameOrBefore(pause_time_end_23))) {\r\n                if (key === 'title') {\r\n                    return '放送休止';  // タイトル\r\n                } else {\r\n                    return 'この時間は放送を休止しています。';  // 番組概要\r\n                }\r\n\r\n            // それ以外の時間帯では、「番組情報がありません」と表示する\r\n            // 急な番組変更の影響で、一時的にその時間帯に対応する番組情報が消えることがある\r\n            // 特に Mirakurun バックエンドでは高頻度で収集した EIT[p/f] が比較的すぐ反映されるため、この現象が起こりやすい\r\n            // 日中に放送休止（停波）になることはまずあり得ないので、番組情報が取得できてないだけで視聴できるかも？というニュアンスを与える\r\n            } else {\r\n                if (key === 'title') {\r\n                    return '番組情報がありません';  // タイトル\r\n                } else {\r\n                    return 'この時間の番組情報を取得できませんでした。';  // 番組概要\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 番組の進捗状況を取得する\r\n     * @param program 番組情報\r\n     * @returns 番組の進捗状況（%単位）\r\n     */\r\n    static getProgramProgress(program: IProgram | null): number {\r\n\r\n        // program が空でない\r\n        if (program !== null) {\r\n\r\n            // 番組開始時刻から何秒進んだか\r\n            const progress = dayjs(dayjs()).diff(program.start_time, 'second');\r\n\r\n            // %単位の割合を算出して返す\r\n            // duration が Infinity の場合は、放送時間未定として扱う\r\n            if (program.duration !== Infinity) {\r\n                return progress / program.duration * 100;\r\n            } else {\r\n                return 100;  // 放送時間未定\r\n            }\r\n\r\n        // 放送休止中\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 番組放送時刻の文字列表現を取得する\r\n     * @param program 番組情報\r\n     * @param is_short 時刻のみ返すかどうか\r\n     * @returns 番組の放送時刻\r\n     */\r\n    static getProgramTime(program: IProgram | null, is_short: boolean = false): string {\r\n\r\n        // program が空でなく、かつ番組時刻が初期値でない\r\n        if (program !== null && program.start_time !== '2000-01-01T00:00:00+09:00') {\r\n\r\n            const start_time = dayjs(program.start_time);\r\n            const end_time = dayjs(program.end_time);\r\n\r\n            // duration が Infinity の場合は、end_time を無視して放送時間未定として扱う\r\n            // この時 end_time には便宜上 start_time と同一の時刻が設定されるため、参照してはいけない\r\n            if (program.duration === Infinity) {\r\n                if (is_short === true) {  // 時刻のみ\r\n                    return `${start_time.format('HH:mm')} ～ --:--`;\r\n                } else {\r\n                    return `${start_time.format('YYYY/MM/DD (dd) HH:mm')} ～ --:-- (放送時間未定)`;\r\n                }\r\n            }\r\n\r\n            // 分単位の番組長 (割り切れない場合は小数第2位で四捨五入)\r\n            const duration = Math.round(program.duration / 60 * 100) / 100;\r\n\r\n            if (is_short === true) {  // 時刻のみ\r\n                return `${start_time.format('HH:mm')} ～ ${end_time.format('HH:mm')}`;\r\n            } else {\r\n                return `${start_time.format('YYYY/MM/DD (dd) HH:mm')} ～ ${end_time.format('HH:mm')} (${duration}分)`;\r\n            }\r\n\r\n        // 放送休止中\r\n        } else {\r\n            if (is_short === true) {  // 時刻のみ\r\n                return '--:-- ～ --:--';\r\n            } else {\r\n                return '----/--/-- (-) --:-- ～ --:-- (--分)';\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 文字列に含まれる英数や記号を半角に置換し、一律な表現に整える\r\n     * server/app/utils/TSInformation.py の TSInformation.formatString() と同等の処理を行う\r\n     * @param string 変換する文字列\r\n     * @returns 置換した文字列\r\n     */\r\n    static formatString(string: string): string {\r\n\r\n        // 変換\r\n        for (const key in ProgramUtils.format_string_translation_map) {\r\n            string = string.replaceAll(key, ProgramUtils.format_string_translation_map[key]);\r\n        }\r\n\r\n        // 置換した文字列を返す\r\n        return string;\r\n    }\r\n\r\n\r\n    /**\r\n     * formatString() で使用する変換マップを取得する\r\n     * server/app/utils/TSInformation.py の TSInfoAnalyzer.__buildFormatStringTranslationMap() と同等の処理を行う\r\n     * @returns 変換マップ\r\n     */\r\n    private static buildFormatStringTranslationMap(): {[key: string]: string} {\r\n\r\n        // 全角英数を半角英数に置換\r\n        const zenkaku_table = '０１２３４５６７８９ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ';\r\n        const hankaku_table = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n        const merged_table: { [key: string]: string } = {};\r\n        for (let i = 0; i < zenkaku_table.length; i++) {\r\n            merged_table[zenkaku_table[i]] = hankaku_table[i];\r\n        }\r\n\r\n        // 全角記号を半角記号に置換\r\n        const symbol_zenkaku_table = '＂＃＄％＆＇（）＋，－．／：；＜＝＞［＼］＾＿｀｛｜｝　';\r\n        const symbol_hankaku_table = '\"#$%&\\'()+,-./:;<=>[\\\\]^_`{|} ';\r\n        for (let i = 0; i < symbol_zenkaku_table.length; i++) {\r\n            merged_table[symbol_zenkaku_table[i]] = symbol_hankaku_table[i];\r\n        }\r\n        // 一部の半角記号を全角に置換\r\n        // 主に見栄え的な問題（全角の方が字面が良い）\r\n        merged_table['!'] = '！';\r\n        merged_table['?'] = '？';\r\n        merged_table['*'] = '＊';\r\n        merged_table['~'] = '～';\r\n        merged_table['@'] = '＠';\r\n        // シャープ → ハッシュ\r\n        merged_table['♯'] = '#';\r\n        // 波ダッシュ → 全角チルダ\r\n        // EDCB は ～ を全角チルダとして扱っているため、KonomiTV でもそのように統一する\r\n        merged_table['〜'] = '～';\r\n\r\n        // 番組表で使用される囲み文字の置換テーブル\r\n        // ref: https://note.nkmk.me/python-chr-ord-unicode-code-point/\r\n        // ref: https://github.com/l3tnun/EPGStation/blob/v2.6.17/src/util/StrUtil.ts#L7-L46\r\n        const enclosed_characters_table: {[key: string]: string} = {\r\n            '\\u{1F14A}': '[HV]',\r\n            '\\u{1F13F}': '[P]',\r\n            '\\u{1F14C}': '[SD]',\r\n            '\\u{1F146}': '[W]',\r\n            '\\u{1F14B}': '[MV]',\r\n            '\\u{1F210}': '[手]',\r\n            '\\u{1F211}': '[字]',\r\n            '\\u{1F212}': '[双]',\r\n            '\\u{1F213}': '[デ]',\r\n            '\\u{1F142}': '[S]',\r\n            '\\u{1F214}': '[二]',\r\n            '\\u{1F215}': '[多]',\r\n            '\\u{1F216}': '[解]',\r\n            '\\u{1F14D}': '[SS]',\r\n            '\\u{1F131}': '[B]',\r\n            '\\u{1F13D}': '[N]',\r\n            '\\u{1F217}': '[天]',\r\n            '\\u{1F218}': '[交]',\r\n            '\\u{1F219}': '[映]',\r\n            '\\u{1F21A}': '[無]',\r\n            '\\u{1F21B}': '[料]',\r\n            '\\u{1F21C}': '[前]',\r\n            '\\u{1F21D}': '[後]',\r\n            '\\u{1F21E}': '[再]',\r\n            '\\u{1F21F}': '[新]',\r\n            '\\u{1F220}': '[初]',\r\n            '\\u{1F221}': '[終]',\r\n            '\\u{1F222}': '[生]',\r\n            '\\u{1F223}': '[販]',\r\n            '\\u{1F224}': '[声]',\r\n            '\\u{1F225}': '[吹]',\r\n            '\\u{1F14E}': '[PPV]',\r\n            '\\u{1F200}': '[ほか]',\r\n        };\r\n\r\n        // Unicode の囲み文字を大かっこで囲った文字に置換する\r\n        // EDCB で EpgDataCap3_Unicode.dll を利用している場合や、Mirakurun 3.9.0-beta.24 以降など、\r\n        // 番組情報取得元から Unicode の囲み文字が送られてくる場合に対応するためのもの\r\n        // Unicode の囲み文字はサロゲートペアなどで扱いが難しい上に KonomiTV では囲み文字を CSS でハイライトしているため、Unicode にするメリットがない\r\n        // ref: https://note.nkmk.me/python-str-replace-translate-re-sub/\r\n        for (const key in enclosed_characters_table) {\r\n            merged_table[key] = enclosed_characters_table[key];\r\n        }\r\n\r\n        return merged_table;\r\n    }\r\n\r\n    /**\r\n     * ISO639 形式の言語コードが示す言語の名称を取得する\r\n     * server/app/utils/TSInformation.py の TSInformation.getISO639LanguageCodeName() と同等の処理を行う\r\n     * @param iso639_language_code ISO639 形式の言語コード\r\n     * @returns ISO639 形式の言語コードが示す言語の名称\r\n     */\r\n    static getISO639LanguageCodeName(iso639_language_code: string): string {\r\n        if (iso639_language_code === 'jpn') {\r\n            return '日本語';\r\n        } else if (iso639_language_code === 'eng') {\r\n            return '英語';\r\n        } else if (iso639_language_code === 'deu') {\r\n            return 'ドイツ語';\r\n        } else if (iso639_language_code === 'fra') {\r\n            return 'フランス語';\r\n        } else if (iso639_language_code === 'ita') {\r\n            return 'イタリア語';\r\n        } else if (iso639_language_code === 'rus') {\r\n            return 'ロシア語';\r\n        } else if (iso639_language_code === 'zho') {\r\n            return '中国語';\r\n        } else if (iso639_language_code === 'kor') {\r\n            return '韓国語';\r\n        } else if (iso639_language_code === 'spa') {\r\n            return 'スペイン語';\r\n        } else {\r\n            return 'その他の言語';\r\n        }\r\n    }\r\n}\r\n","\r\n// day.js に毎回プラグインやタイムゾーンを設定するのが面倒かつ嵌まりポイントが多いので、ここでエクスポートする day.js を使う\r\n// ややこしすぎるので KonomiTV 内ではブラウザのタイムゾーンに関わらず、常に Asia/Tokyo として扱う\r\n// ref: https://github.com/iamkun/dayjs/issues/1227#issuecomment-917720826\r\n// ref: https://zenn.dev/taigakiyokawa/articles/20221122-dayjs-timezone\r\n\r\nimport dayjsOriginal from 'dayjs';\r\nimport ja from 'dayjs/locale/ja';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport timezone from 'dayjs/plugin/timezone';\r\nimport utc from 'dayjs/plugin/utc';\r\n\r\nimport type { ConfigType, Dayjs } from 'dayjs';\r\n\r\ndayjsOriginal.extend(isBetween);\r\ndayjsOriginal.extend(isSameOrAfter);\r\ndayjsOriginal.extend(isSameOrBefore);\r\ndayjsOriginal.extend(utc);\r\ndayjsOriginal.extend(timezone);\r\ndayjsOriginal.locale(ja);\r\ndayjsOriginal.tz.setDefault('Asia/Tokyo');\r\n\r\nexport const dayjs = (date?: ConfigType): Dayjs => {\r\n    return dayjsOriginal(date).tz();  // .tz() では setDefault で設定したタイムゾーンが適用される\r\n};\r\n\r\n// 共通ユーティリティをデフォルトとしてインポート\r\nimport Utils from '@/utils/Utils';\r\nexport default Utils;\r\n\r\n// Utils フォルダ配下のユーティリティを一括でインポートできるように\r\nexport * from '@/utils/ChannelUtils';\r\nexport * from '@/utils/CommentUtils';\r\nexport * from '@/utils/PlayerUtils';\r\nexport * from '@/utils/ProgramUtils';\r\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"login-container-wrapper d-flex align-center w-100 mb-13\"},[_c('v-card',{staticClass:\"login-container px-10 pt-8 pb-11 mx-auto background lighten-1\",attrs:{\"elevation\":\"10\",\"width\":\"100%\",\"max-width\":\"450\"}},[_c('v-card-title',{staticClass:\"login__logo flex-column justify-center\"},[_c('v-img',{attrs:{\"max-width\":\"250\",\"src\":\"/assets/images/logo.svg\"}}),_c('h4',{staticClass:\"mt-10\"},[_vm._v(\"ログイン\")])],1),_c('v-divider'),_c('v-form',{ref:\"login\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{staticClass:\"mt-12\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"hide-details\":\"\",\"autofocus\":\"\",\"dense\":_vm.is_form_dense},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('v-text-field',{staticClass:\"mt-8\",attrs:{\"outlined\":\"\",\"placeholder\":\"パスワード\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"type\":_vm.password_showing ? 'text' : 'password',\"append-icon\":_vm.password_showing ? 'mdi-eye' : 'mdi-eye-off'},on:{\"click:append\":function($event){_vm.password_showing = !_vm.password_showing}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"login-button mt-5\",attrs:{\"color\":\"secondary\",\"depressed\":\"\",\"width\":\"100%\",\"height\":\"56\"},on:{\"click\":function($event){return _vm.login()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-in\"}}),_vm._v(\"ログイン \")],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('header',{staticClass:\"header\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"konomitv-logo ml-3 ml-md-6\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"konomitv-logo__image\",attrs:{\"src\":\"/assets/images/logo.svg\",\"height\":\"21\"}})]),_c('v-spacer')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Header.vue?vue&type=template&id=84897154&scoped=true\"\nvar script = {}\nimport style0 from \"./Header.vue?vue&type=style&index=0&id=84897154&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"84897154\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('div',{staticClass:\"navigation-container elevation-8\"},[_c('nav',{staticClass:\"navigation\"},[_c('div',{staticClass:\"navigation-scroll\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"テレビをみる\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"ビデオをみる\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"番組表\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/reserves/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",staticStyle:{\"padding\":\"0.5px\"},attrs:{\"icon\":\"fluent:timer-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"録画予約\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/mylist/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"マイリスト\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"キャプチャ\")])],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"設定\")])],1),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.top\",value:(_vm.versionStore.is_update_available ?\n                        `アップデートがあります (version ${_vm.versionStore.latest_version})` : ''),expression:\"versionStore.is_update_available ?\\n                        `アップデートがあります (version ${versionStore.latest_version})` : ''\",modifiers:{\"top\":true}}],staticClass:\"navigation__link\",class:{\n                        'navigation__link--version': _vm.versionStore.is_client_develop_version,\n                        'navigation__link--highlight': _vm.versionStore.is_update_available,\n                    },attrs:{\"active-class\":\"navigation__link--active\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"version \"+_vm._s(_vm.versionStore.client_version))])],1)],1)])]),_c('BottomNavigation')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-bottom-navigation',{staticClass:\"bottom-navigation-container elevation-12\",attrs:{\"color\":\"primary\",\"grow\":\"\"}},[_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/tv/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"テレビをみる\")]),_c('Icon',{attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"30px\"}})],1),_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/videos/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"ビデオをみる\")]),_c('Icon',{attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"30px\"}})],1),_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/settings/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"設定\")]),_c('Icon',{attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"30px\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./BottomNavigation.vue?vue&type=template&id=3df53df3&scoped=true\"\nvar script = {}\nimport style0 from \"./BottomNavigation.vue?vue&type=style&index=0&id=3df53df3&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3df53df3\",\n  null\n  \n)\n\nexport default component.exports","\r\nimport APIClient from '@/services/APIClient';\r\n\r\n\r\n/** バージョン情報を表すインターフェイス */\r\nexport interface IVersionInformation {\r\n    version: string;\r\n    latest_version: string;\r\n    environment: 'Windows' | 'Linux' | 'Linux-Docker' | 'Linux-ARM';\r\n    backend: 'EDCB' | 'Mirakurun';\r\n    encoder: 'FFmpeg' | 'QSVEncC' | 'NVEncC' | 'VCEEncC' | 'rkmppenc';\r\n}\r\n\r\n\r\nclass Version {\r\n\r\n    /**\r\n     * バージョン情報を取得する\r\n     * @returns バージョン情報 or バージョン情報の取得に失敗した場合は null\r\n     */\r\n    static async fetchServerVersion(): Promise<IVersionInformation | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.get<IVersionInformation>('/version');\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'バージョン情報を取得できませんでした。');\r\n            return null;\r\n        }\r\n\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default Version;\r\n","\r\nimport { defineStore } from 'pinia';\r\n\r\nimport Version, { IVersionInformation } from '@/services/Version';\r\nimport Utils from '@/utils';\r\n\r\n\r\n/**\r\n * 現在ログイン中のユーザーアカウントの情報を共有するストア\r\n */\r\nconst useVersionStore = defineStore('version', {\r\n    state: () => ({\r\n\r\n        // サーバーのバージョン情報\r\n        server_version_info: null as IVersionInformation | null,\r\n\r\n        // 最終更新日時 (UNIX タイムスタンプ、秒単位)\r\n        last_updated_at: 0,\r\n    }),\r\n    getters: {\r\n        client_version(): string {\r\n            return Utils.version;\r\n        },\r\n        server_version(): string | null {\r\n            return this.server_version_info?.version ?? null;\r\n        },\r\n        latest_version(): string | null {\r\n            return this.server_version_info?.latest_version ?? null;\r\n        },\r\n        is_client_develop_version(): boolean {\r\n            return this.client_version.includes('-dev');\r\n        },\r\n        is_server_develop_version(): boolean {\r\n            return this.server_version?.includes('-dev') ?? false;\r\n        },\r\n        is_update_available(): boolean {\r\n            // もし現在のサーバーバージョンと最新のバージョンが異なるなら、アップデートが利用できると判断する\r\n            // 現在のサーバーバージョンが開発版 (-dev あり) で、かつ最新のバージョンがリリース版 (-dev なし) の場合も同様に表示する\r\n            // つまり開発版だと同じバージョンのリリース版がリリースされたときにしかアップデート通知が表示されない事になるが、ひとまずこれで…\r\n            if (this.server_version === null || this.latest_version === null) return false;\r\n            if ((this.is_server_develop_version === false && this.server_version !== this.latest_version) ||\r\n                (this.is_server_develop_version === true && this.server_version.replace('-dev', '') === this.latest_version)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        is_version_mismatch(): boolean {\r\n            if (this.server_version === null) return false;\r\n            return this.client_version !== this.server_version;\r\n        }\r\n    },\r\n    actions: {\r\n\r\n        /**\r\n         * バージョン情報を取得する\r\n         * すでに取得済みの情報がある場合は API リクエストを行わずにそれを返す\r\n         * @param force 強制的に API リクエストを行う場合は true\r\n         * @returns バージョン情報 or バージョン情報の取得に失敗した場合は null\r\n         */\r\n        async fetchServerVersion(force: boolean = false): Promise<IVersionInformation | null> {\r\n\r\n            // バージョン情報がある場合はそれを返す\r\n            // force が true の場合は無視される\r\n            if (this.server_version_info !== null && force === false) {\r\n                // ただし、最終更新日時が1分以上前の場合は非同期で更新する\r\n                if (Utils.time() - this.last_updated_at > 60) {\r\n                    this.fetchServerVersion(true);\r\n                }\r\n                return this.server_version_info;\r\n            }\r\n\r\n            // サーバーのバージョン情報を取得する\r\n            const version_info = await Version.fetchServerVersion();\r\n            if (version_info === null) {\r\n                return null;\r\n            }\r\n            this.server_version_info = version_info;\r\n            this.last_updated_at = Utils.time();\r\n\r\n            return this.server_version_info;\r\n        },\r\n    }\r\n});\r\n\r\nexport default useVersionStore;\r\n","<template>\r\n    <div>\r\n        <div class=\"navigation-container elevation-8\">\r\n            <nav class=\"navigation\">\r\n                <div class=\"navigation-scroll\">\r\n                    <router-link v-ripple class=\"navigation__link\" active-class=\"navigation__link--active\" to=\"/tv/\">\r\n                        <Icon class=\"navigation__link-icon\" icon=\"fluent:tv-20-regular\" width=\"26px\" />\r\n                        <span class=\"navigation__link-text\">テレビをみる</span>\r\n                    </router-link>\r\n                    <router-link v-ripple class=\"navigation__link\" active-class=\"navigation__link--active\" to=\"/videos/\">\r\n                        <Icon class=\"navigation__link-icon\" icon=\"fluent:movies-and-tv-20-regular\" width=\"26px\" />\r\n                        <span class=\"navigation__link-text\">ビデオをみる</span>\r\n                    </router-link>\r\n                    <router-link v-ripple class=\"navigation__link\" active-class=\"navigation__link--active\" to=\"/timetable/\">\r\n                        <Icon class=\"navigation__link-icon\" icon=\"fluent:calendar-ltr-20-regular\" width=\"26px\" />\r\n                        <span class=\"navigation__link-text\">番組表</span>\r\n                    </router-link>\r\n                    <router-link v-ripple class=\"navigation__link\" active-class=\"navigation__link--active\" to=\"/reserves/\">\r\n                        <Icon class=\"navigation__link-icon\" icon=\"fluent:timer-16-regular\" width=\"26px\" style=\"padding: 0.5px;\" />\r\n                        <span class=\"navigation__link-text\">録画予約</span>\r\n                    </router-link>\r\n                    <router-link v-ripple class=\"navigation__link\" active-class=\"navigation__link--active\" to=\"/mylist/\">\r\n                        <Icon class=\"navigation__link-icon\" icon=\"ic:round-playlist-play\" width=\"26px\" />\r\n                        <span class=\"navigation__link-text\">マイリスト</span>\r\n                    </router-link>\r\n                    <router-link v-ripple class=\"navigation__link\" active-class=\"navigation__link--active\" to=\"/captures/\">\r\n                        <Icon class=\"navigation__link-icon\" icon=\"fluent:image-multiple-24-regular\" width=\"26px\" />\r\n                        <span class=\"navigation__link-text\">キャプチャ</span>\r\n                    </router-link>\r\n                    <v-spacer></v-spacer>\r\n                    <router-link v-ripple class=\"navigation__link\" active-class=\"navigation__link--active\" to=\"/settings/\">\r\n                        <Icon class=\"navigation__link-icon\" icon=\"fluent:settings-20-regular\" width=\"26px\" />\r\n                        <span class=\"navigation__link-text\">設定</span>\r\n                    </router-link>\r\n                    <a v-ripple class=\"navigation__link\" active-class=\"navigation__link--active\" href=\"https://github.com/tsukumijima/KonomiTV\"\r\n                        :class=\"{\r\n                            'navigation__link--version': versionStore.is_client_develop_version,\r\n                            'navigation__link--highlight': versionStore.is_update_available,\r\n                        }\"\r\n                        v-tooltip.top=\"versionStore.is_update_available ?\r\n                            `アップデートがあります (version ${versionStore.latest_version})` : ''\">\r\n                        <Icon class=\"navigation__link-icon\" icon=\"fluent:info-16-regular\" width=\"26px\" />\r\n                        <span class=\"navigation__link-text\">version {{versionStore.client_version}}</span>\r\n                    </a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n        <BottomNavigation />\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport BottomNavigation from '@/components/BottomNavigation.vue';\r\nimport useVersionStore from '@/stores/VersionStore';\r\n\r\nexport default Vue.extend({\r\n    name: 'Navigation',\r\n    components: {\r\n        BottomNavigation,\r\n    },\r\n    computed: {\r\n        ...mapStores(useVersionStore),\r\n    },\r\n    async created() {\r\n        await this.versionStore.fetchServerVersion();\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.navigation-container {\r\n    flex-shrink: 0;\r\n    width: 220px;  // .navigation を fixed にするため、浮いた分の幅を確保する\r\n    background: var(--v-background-lighten1);\r\n    @include smartphone-horizontal {\r\n        width: 210px;\r\n    }\r\n    @include smartphone-horizontal-short {\r\n        width: 190px;\r\n    }\r\n    @include smartphone-vertical {\r\n        display: none;\r\n    }\r\n\r\n    .navigation {\r\n        position: fixed;\r\n        width: 220px;\r\n        top: 65px;  // ヘッダーの高さ分\r\n        left: 0px;\r\n        // スマホ・タブレットのブラウザでアドレスバーが完全に引っ込むまでビューポートの高さが更新されず、\r\n        // その間下に何も背景がない部分ができてしまうのを防ぐ\r\n        bottom: -100px;\r\n        padding-bottom: 100px;\r\n        background: var(--v-background-lighten1);\r\n        z-index: 1;\r\n        @include smartphone-horizontal {\r\n            top: 48px;\r\n            width: 210px;\r\n        }\r\n        @include smartphone-horizontal-short {\r\n            width: 190px;\r\n        }\r\n\r\n        .navigation-scroll {\r\n            display: flex;\r\n            flex-direction: column;\r\n            height: 100%;\r\n            padding: 22px 12px;\r\n            overflow-y: auto;\r\n            @include smartphone-horizontal {\r\n                padding: 10px 12px;\r\n                padding-left: calc(env(safe-area-inset-left) +10px);\r\n                padding-right: cale(env(safe-area-inset-right) + 10px);\r\n            }\r\n            @include smartphone-horizontal-short {\r\n                padding: 10px 8px;\r\n            }\r\n            &::-webkit-scrollbar-track {\r\n                background: var(--v-background-lighten1);\r\n            }\r\n\r\n            .navigation__link {\r\n                display: flex;\r\n                align-items: center;\r\n                flex-shrink: 0;\r\n                height: 52px;\r\n                padding-left: 16px;\r\n                margin-top: 4px;\r\n                border-radius: 11px;\r\n                font-size: 16px;\r\n                color: var(--v-text-base);\r\n                transition: background-color 0.15s;\r\n                text-decoration: none;\r\n                user-select: none;\r\n                @include smartphone-horizontal {\r\n                    height: 40px;\r\n                    padding-left: 12px;\r\n                    border-radius: 9px;\r\n                    font-size: 15px;\r\n                }\r\n\r\n                &:hover {\r\n                    background: var(--v-background-lighten2);\r\n                }\r\n                &:first-of-type {\r\n                    margin-top: 0;\r\n                }\r\n                &--active {\r\n                    color: var(--v-primary-base);\r\n                    background: #5b2d3c;\r\n                    &:hover {\r\n                        background: #5b2d3c;\r\n                    }\r\n                }\r\n                &--highlight {\r\n                    color: var(--v-secondary-lighten1);\r\n                }\r\n                &--version {\r\n                    font-size: 15px;\r\n                    @include smartphone-horizontal {\r\n                        font-size: 14.5px;\r\n                    }\r\n                }\r\n\r\n                .navigation__link-icon {\r\n                    margin-right: 14px;\r\n                    @include smartphone-horizontal {\r\n                        margin-right: 10px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Navigation.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Navigation.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Navigation.vue?vue&type=template&id=63d06012&scoped=true\"\nimport script from \"./Navigation.vue?vue&type=script&lang=ts\"\nexport * from \"./Navigation.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Navigation.vue?vue&type=style&index=0&id=63d06012&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"63d06012\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"route-container\">\r\n        <Header/>\r\n        <main>\r\n            <Navigation/>\r\n            <div class=\"login-container-wrapper d-flex align-center w-100 mb-13\">\r\n                <v-card class=\"login-container px-10 pt-8 pb-11 mx-auto background lighten-1\" elevation=\"10\"\r\n                    width=\"100%\" max-width=\"450\">\r\n                    <v-card-title class=\"login__logo flex-column justify-center\">\r\n                        <v-img max-width=\"250\" src=\"/assets/images/logo.svg\"></v-img>\r\n                        <h4 class=\"mt-10\">ログイン</h4>\r\n                    </v-card-title>\r\n                    <v-divider></v-divider>\r\n                    <v-form ref=\"login\" @submit.prevent>\r\n                        <v-text-field class=\"mt-12\" outlined placeholder=\"ユーザー名\" hide-details autofocus\r\n                            :dense=\"is_form_dense\"\r\n                            v-model=\"username\">\r\n                        </v-text-field>\r\n                        <v-text-field class=\"mt-8\" outlined placeholder=\"パスワード\" hide-details\r\n                            :dense=\"is_form_dense\"\r\n                            v-model=\"password\"\r\n                            :type=\"password_showing ? 'text' : 'password'\"\r\n                            :append-icon=\"password_showing ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                            @click:append=\"password_showing = !password_showing\">\r\n                        </v-text-field>\r\n                        <v-btn class=\"login-button mt-5\" color=\"secondary\" depressed width=\"100%\" height=\"56\"\r\n                            @click=\"login()\">\r\n                            <Icon icon=\"fa:sign-in\" class=\"mr-2\" />ログイン\r\n                        </v-btn>\r\n                    </v-form>\r\n                </v-card>\r\n            </div>\r\n        </main>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport Header from '@/components/Header.vue';\r\nimport Navigation from '@/components/Navigation.vue';\r\nimport useUserStore from '@/stores/UserStore';\r\nimport Utils from '@/utils';\r\n\r\nexport default Vue.extend({\r\n    name: 'Login',\r\n    components: {\r\n        Header,\r\n        Navigation,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // フォームを小さくするかどうか\r\n            is_form_dense: Utils.isSmartphoneHorizontal(),\r\n\r\n            username: '' as string,\r\n            password: '' as string,\r\n            password_showing: false,\r\n        };\r\n    },\r\n    computed: {\r\n        // UserStore に this.userStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useUserStore),\r\n    },\r\n    async created() {\r\n\r\n        // アカウント情報を更新\r\n        await this.userStore.fetchUser();\r\n\r\n        // 現在ログイン中の場合はアカウントページに遷移\r\n        if (this.userStore.is_logged_in) {\r\n            await this.$router.replace({path: '/settings/account'});\r\n        }\r\n    },\r\n    methods: {\r\n        async login() {\r\n\r\n            // ユーザー名またはパスワードが空\r\n            if (this.username === '' || this.password === '') {\r\n                this.$message.error('ユーザー名またはパスワードが空です。');\r\n                return;\r\n            }\r\n\r\n            // ログイン処理 (エラーハンドリング含む) を実行\r\n            const result = await this.userStore.login(this.username, this.password);\r\n            if (result === false) {\r\n                return;  // ログイン失敗\r\n            }\r\n\r\n            // アカウントページに遷移\r\n            // ブラウザバックでログインページに戻れないようにする\r\n            await this.$router.replace({path: '/settings/account'});\r\n        }\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.login-container-wrapper {\r\n    @include smartphone-horizontal {\r\n        padding: 20px !important;\r\n        margin-bottom: 0px !important;\r\n    }\r\n    @include smartphone-vertical {\r\n        margin-bottom: 0px !important;\r\n    }\r\n\r\n    .login-container {\r\n        border-radius: 11px;\r\n        @include smartphone-horizontal {\r\n            padding: 24px !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            padding: 32px 20px !important;\r\n            margin-left: 12px !important;\r\n            margin-right: 12px !important;\r\n        }\r\n\r\n        .login__logo {\r\n            @include smartphone-horizontal {\r\n                padding-top: 4px !important;\r\n                padding-bottom: 8px !important;\r\n                .v-image {\r\n                    max-width: 200px !important;\r\n                }\r\n                h4 {\r\n                    margin-top: 16px !important;\r\n                    font-size: 19px !important;\r\n                }\r\n            }\r\n            @include smartphone-vertical {\r\n                padding-top: 4px !important;\r\n                padding-bottom: 12px !important;\r\n                .v-image {\r\n                    max-width: 200px !important;\r\n                }\r\n                h4 {\r\n                    margin-top: 24px !important;\r\n                    font-size: 19px !important;\r\n                }\r\n            }\r\n        }\r\n\r\n        .v-input {\r\n            @include smartphone-horizontal {\r\n                margin-top: 24px !important;\r\n                font-size: 14px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                margin-top: 32px !important;\r\n                font-size: 16px !important;\r\n            }\r\n        }\r\n\r\n        .login-button {\r\n            border-radius: 7px;\r\n            margin-top: 48px !important;\r\n            font-size: 18px;\r\n            letter-spacing: 0px;\r\n            @include smartphone-horizontal {\r\n                height: 44px !important;\r\n                margin-top: 24px !important;\r\n                font-size: 16px;\r\n            }\r\n            @include smartphone-vertical {\r\n                height: 50px !important;\r\n                margin-top: 32px !important;\r\n                font-size: 15.5px;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=9e11713a&scoped=true\"\nimport script from \"./Login.vue?vue&type=script&lang=ts\"\nexport * from \"./Login.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Login.vue?vue&type=style&index=0&id=9e11713a&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9e11713a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_vm._m(0)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"d-flex justify-center align-center w-100\"},[_c('div',{staticClass:\"d-flex justify-center align-center flex-column\"},[_c('h1',[_vm._v(\"Not Found, or Under Development...\")]),_c('span',{staticClass:\"mt-4 text--text text--darken-1\"},[_vm._v(\"お探しのページは存在しないか、鋭意開発中です。\")])])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"route-container\">\r\n        <Header/>\r\n        <main>\r\n            <Navigation/>\r\n            <div class=\"d-flex justify-center align-center w-100\">\r\n                <div class=\"d-flex justify-center align-center flex-column\">\r\n                    <h1>Not Found, or Under Development...</h1>\r\n                    <span class=\"mt-4 text--text text--darken-1\">お探しのページは存在しないか、鋭意開発中です。</span>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport Vue from 'vue';\r\n\r\nimport Header from '@/components/Header.vue';\r\nimport Navigation from '@/components/Navigation.vue';\r\n\r\nexport default Vue.extend({\r\n    name: 'NotFound',\r\n    components: {\r\n        Header,\r\n        Navigation,\r\n    },\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\nh1 {\r\n    @include tablet-vertical {\r\n        font-size: 24px !important;\r\n    }\r\n    @include smartphone-horizontal {\r\n        font-size: 24px !important;\r\n    }\r\n    @include smartphone-vertical {\r\n        font-size: 24px !important;\r\n        text-align: center;\r\n    }\r\n}\r\nspan {\r\n    @include smartphone-horizontal {\r\n        font-size: 15px !important;\r\n    }\r\n    @include smartphone-vertical {\r\n        font-size: 14px !important;\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NotFound.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NotFound.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./NotFound.vue?vue&type=template&id=1310cfee&scoped=true\"\nimport script from \"./NotFound.vue?vue&type=script&lang=ts\"\nexport * from \"./NotFound.vue?vue&type=script&lang=ts\"\nimport style0 from \"./NotFound.vue?vue&type=style&index=0&id=1310cfee&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1310cfee\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"register-container-wrapper d-flex align-center w-100 mb-13\"},[_c('v-card',{staticClass:\"register-container px-10 pt-8 pb-11 mx-auto background lighten-1\",attrs:{\"elevation\":\"10\",\"width\":\"100%\",\"max-width\":\"450\"}},[_c('v-card-title',{staticClass:\"register__logo flex-column justify-center\"},[_c('v-img',{attrs:{\"max-width\":\"250\",\"src\":\"/assets/images/logo.svg\"}}),_c('h4',{staticClass:\"mt-10\"},[_vm._v(\"アカウントを作成\")])],1),_c('v-divider'),_c('v-form',{ref:\"register\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{staticClass:\"mt-12\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"autofocus\":\"\",\"dense\":_vm.is_form_dense,\"rules\":[_vm.username_validation]},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('v-text-field',{staticStyle:{\"margin-top\":\"2px\"},attrs:{\"outlined\":\"\",\"placeholder\":\"パスワード\",\"dense\":_vm.is_form_dense,\"type\":_vm.password_showing ? 'text' : 'password',\"append-icon\":_vm.password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[_vm.password_validation]},on:{\"click:append\":function($event){_vm.password_showing = !_vm.password_showing}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"register-button mt-5\",attrs:{\"color\":\"secondary\",\"depressed\":\"\",\"width\":\"100%\",\"height\":\"56\"},on:{\"click\":function($event){return _vm.register()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-add-20-filled\",\"height\":\"24\"}}),_vm._v(\"アカウントを作成 \")],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"route-container\">\r\n        <Header/>\r\n        <main>\r\n            <Navigation/>\r\n            <div class=\"register-container-wrapper d-flex align-center w-100 mb-13\">\r\n                <v-card class=\"register-container px-10 pt-8 pb-11 mx-auto background lighten-1\" elevation=\"10\"\r\n                    width=\"100%\" max-width=\"450\">\r\n                    <v-card-title class=\"register__logo flex-column justify-center\">\r\n                        <v-img max-width=\"250\" src=\"/assets/images/logo.svg\"></v-img>\r\n                        <h4 class=\"mt-10\">アカウントを作成</h4>\r\n                    </v-card-title>\r\n                    <v-divider></v-divider>\r\n                    <v-form ref=\"register\" @submit.prevent>\r\n                        <v-text-field class=\"mt-12\" outlined placeholder=\"ユーザー名\" autofocus\r\n                            :dense=\"is_form_dense\"\r\n                            v-model=\"username\"\r\n                            :rules=\"[username_validation]\">\r\n                        </v-text-field>\r\n                        <v-text-field style=\"margin-top: 2px;\" outlined placeholder=\"パスワード\"\r\n                            :dense=\"is_form_dense\"\r\n                            v-model=\"password\"\r\n                            :type=\"password_showing ? 'text' : 'password'\"\r\n                            :append-icon=\"password_showing ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                            :rules=\"[password_validation]\"\r\n                            @click:append=\"password_showing = !password_showing\">\r\n                        </v-text-field>\r\n                        <v-btn class=\"register-button mt-5\" color=\"secondary\" depressed width=\"100%\" height=\"56\"\r\n                            @click=\"register()\">\r\n                            <Icon icon=\"fluent:person-add-20-filled\" class=\"mr-2\" height=\"24\" />アカウントを作成\r\n                        </v-btn>\r\n                    </v-form>\r\n            </v-card>\r\n            </div>\r\n        </main>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport Header from '@/components/Header.vue';\r\nimport Navigation from '@/components/Navigation.vue';\r\nimport useUserStore from '@/stores/UserStore';\r\nimport Utils from '@/utils';\r\n\r\nexport default Vue.extend({\r\n    name: 'Register',\r\n    components: {\r\n        Header,\r\n        Navigation,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // フォームを小さくするかどうか\r\n            is_form_dense: Utils.isSmartphoneHorizontal(),\r\n\r\n            username: null as string | null,\r\n            username_validation: (value: string | null) => {\r\n                if (value === '' || value === null) return 'ユーザー名を入力してください。';\r\n                if (/^.{2,}$/.test(value) === false) return 'ユーザー名は2文字以上で入力してください。';\r\n                return true;\r\n            },\r\n            password: null as string | null,\r\n            password_showing: true,  // アカウント作成時はデフォルトでパスワードを表示する\r\n            password_validation: (value: string | null) => {\r\n                if (value === '' || value === null) return 'パスワードを入力してください。';\r\n                // ref: https://qiita.com/grrrr/items/0b35b5c1c98eebfa5128\r\n                if (/^[a-zA-Z0-9!-/:-@¥[-`{-~]{4,}$/.test(value) === false) return 'パスワードは4文字以上の半角英数記号を入力してください。';\r\n                return true;\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        // UserStore に this.userStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useUserStore),\r\n    },\r\n    async created() {\r\n\r\n        // アカウント情報を更新\r\n        await this.userStore.fetchUser();\r\n\r\n        // 現在ログイン中の場合はアカウントページに遷移\r\n        if (this.userStore.is_logged_in) {\r\n            await this.$router.replace({path: '/settings/account'});\r\n        }\r\n    },\r\n    methods: {\r\n        async register() {\r\n\r\n            // すべてのバリデーションが通過したときのみ\r\n            // ref: https://qiita.com/Hijiri_Ishi/items/56cac99c8f3806a6fa24\r\n            if ((this.$refs.register as any).validate() === false) return;\r\n            if (this.username === null || this.password === null) return;\r\n\r\n            // アカウント作成 & ログイン処理 (エラーハンドリング含む) を実行\r\n            const result = await this.userStore.register(this.username, this.password);\r\n            if (result === false) {\r\n                return;  // ログイン失敗\r\n            }\r\n\r\n            // アカウントページに遷移\r\n            // ブラウザバックでアカウント作成画面に戻れないようにする\r\n            await this.$router.replace({path: '/settings/account'});\r\n        }\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.register-container-wrapper {\r\n    @include smartphone-horizontal {\r\n        padding: 20px !important;\r\n        margin-bottom: 0px !important;\r\n    }\r\n    @include smartphone-vertical {\r\n        margin-bottom: 0px !important;\r\n    }\r\n\r\n    .register-container {\r\n        border-radius: 11px;\r\n        @include smartphone-horizontal {\r\n            padding: 24px !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            padding: 32px 20px !important;\r\n            margin-left: 12px !important;\r\n            margin-right: 12px !important;\r\n        }\r\n\r\n        .register__logo {\r\n            @include smartphone-horizontal {\r\n                padding-top: 4px !important;\r\n                padding-bottom: 8px !important;\r\n                .v-image {\r\n                    max-width: 200px !important;\r\n                }\r\n                h4 {\r\n                    margin-top: 16px !important;\r\n                    font-size: 19px !important;\r\n                }\r\n            }\r\n            @include smartphone-vertical {\r\n                padding-top: 4px !important;\r\n                padding-bottom: 12px !important;\r\n                .v-image {\r\n                    max-width: 200px !important;\r\n                }\r\n                h4 {\r\n                    margin-top: 24px !important;\r\n                    font-size: 19px !important;\r\n                }\r\n            }\r\n        }\r\n\r\n        .v-input {\r\n            @include smartphone-horizontal {\r\n                margin-top: 0px !important;\r\n                font-size: 14px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                margin-top: 2px !important;\r\n                font-size: 16px !important;\r\n            }\r\n        }\r\n        .v-input:nth-child(1) {\r\n            @include smartphone-horizontal {\r\n                margin-top: 24px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                margin-top: 32px !important;\r\n            }\r\n        }\r\n\r\n        .register-button {\r\n            border-radius: 7px;\r\n            margin-top: 18px !important;\r\n            font-size: 18px;\r\n            letter-spacing: 0px;\r\n            @include smartphone-horizontal {\r\n                height: 44px !important;\r\n                margin-top: 0px !important;\r\n                font-size: 16px;\r\n            }\r\n            @include smartphone-vertical {\r\n                height: 50px !important;\r\n                margin-top: 2px !important;\r\n                font-size: 15.5px;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Register.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Register.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Register.vue?vue&type=template&id=91127b5a&scoped=true\"\nimport script from \"./Register.vue?vue&type=script&lang=ts\"\nexport * from \"./Register.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Register.vue?vue&type=style&index=0&id=91127b5a&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"91127b5a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"25px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"アカウント\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[(_vm.userStore.user === null)?_c('div',{staticClass:\"account\"},[_c('div',{staticClass:\"account-wrapper\"},[_c('img',{staticClass:\"account__icon\",attrs:{\"src\":\"/assets/images/account-icon-default.png\"}}),_c('div',{staticClass:\"account__info\"},[_c('div',{staticClass:\"account__info-name\"},[_c('span',{staticClass:\"account__info-name-text\"},[_vm._v(\"ログインしていません\")])]),_c('span',{staticClass:\"account__info-id\"},[_vm._v(\"Not logged in\")])])]),_c('v-btn',{staticClass:\"account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"140\",\"height\":\"56\",\"depressed\":\"\",\"to\":\"/login/\"}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-in\"}}),_vm._v(\"ログイン \")],1)],1):_vm._e(),(_vm.userStore.user !== null)?_c('div',{staticClass:\"account\"},[_c('div',{staticClass:\"account-wrapper\"},[_c('img',{staticClass:\"account__icon\",attrs:{\"src\":_vm.userStore.user_icon_url ?? ''}}),_c('div',{staticClass:\"account__info\"},[_c('div',{staticClass:\"account__info-name\"},[_c('span',{staticClass:\"account__info-name-text\"},[_vm._v(_vm._s(_vm.userStore.user.name))]),(_vm.userStore.user.is_admin)?_c('span',{staticClass:\"account__info-admin\"},[_vm._v(\"管理者\")]):_vm._e()]),_c('span',{staticClass:\"account__info-id\"},[_vm._v(\"User ID: \"+_vm._s(_vm.userStore.user.id))])])]),_c('v-btn',{staticClass:\"account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"140\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.userStore.logout()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-out\"}}),_vm._v(\"ログアウト \")],1)],1):_vm._e(),(_vm.userStore.is_logged_in === false)?_c('div',{staticClass:\"account-register\"},[_c('div',{staticClass:\"account-register__heading\"},[_vm._v(\" KonomiTV アカウントにログインすると、\"),_c('br'),_vm._v(\"より便利な機能が使えます！ \")]),_c('div',{staticClass:\"account-register__feature\"},[_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"ニコニコ実況にコメントする\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"テレビを見ながらニコニコ実況にコメントできます。別途、ニコニコアカウントとの連携が必要です。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fa-brands:twitter\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"Twitter 連携機能\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"テレビを見ながら Twitter にツイートしたり、検索したツイートをリアルタイムで表示できます。別途、Twitter アカウントとの連携が必要です。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fluent:arrow-sync-20-filled\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"設定をデバイス間で同期\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"ピン留めしたチャンネルなど、ブラウザに保存されている各種設定をブラウザやデバイスをまたいで同期できます。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fa-solid:sliders-h\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"サーバー設定をブラウザから変更\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"管理者権限があれば、サーバー設定をブラウザから変更できます。一番最初に作成されたアカウントには、自動で管理者権限が付与されます。\")])])],1)]),_c('div',{staticClass:\"account-register__description\"},[_vm._v(\" KonomiTV アカウントの作成に必要なものは\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"ユーザー名とパスワードだけです。\"),_c('br'),_vm._v(\" アカウントはローカルに導入した\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\" KonomiTV サーバーにのみ保存されます。\"),_c('br'),_vm._v(\" 外部のサービスには保存されませんので、ご安心ください。\"),_c('br')]),_c('v-btn',{staticClass:\"account-register__button\",attrs:{\"color\":\"secondary\",\"width\":\"100%\",\"max-width\":\"250\",\"height\":\"50\",\"depressed\":\"\",\"to\":\"/register/\"}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-add-20-filled\",\"height\":\"24\"}}),_vm._v(\"アカウントを作成 \")],1)],1):_vm._e(),(_vm.userStore.is_logged_in === true)?_c('div',[_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"sync_settings\"}},[_vm._v(\"設定をデバイス間で同期する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"sync_settings\"}},[_vm._v(\" KonomiTV では、設定を同じアカウントでログインしているデバイス間で同期できます！\"),_c('br'),_vm._v(\" 同期をオンにすると、同期をオンにしているすべてのデバイスで共通の設定が使えます。ピン留めチャンネルやハッシュタグリストなども同期されます。\"),_c('br'),_vm._v(\" なお、デバイス固有の設定（画質設定など）は、同期後も各デバイスで個別に反映されます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"sync_settings\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.sync_settings),callback:function ($$v) {_vm.sync_settings=$$v},expression:\"sync_settings\"}})],1),_c('v-dialog',{attrs:{\"max-width\":\"530\"},model:{value:(_vm.sync_settings_dialog),callback:function ($$v) {_vm.sync_settings_dialog=$$v},expression:\"sync_settings_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center\"},[_vm._v(\"設定データの競合\")]),_c('v-card-text',[_vm._v(\" このデバイスの設定と、サーバーに保存されている設定が競合しています。\"),_c('br'),_vm._v(\" 一度上書きすると、元に戻すことはできません。慎重に選択してください。\"),_c('br')]),_c('div',{staticClass:\"d-flex flex-column px-4 pb-4 settings__conflict-dialog\"},[_c('v-btn',{staticClass:\"settings__save-button error--text text--lighten-1\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.overrideServerSettingsFromClient()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:document-arrow-up-16-filled\",\"height\":\"22px\"}}),_vm._v(\" サーバーに保存されている設定を、\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"このデバイスの設定で上書きする \")],1),_c('v-btn',{staticClass:\"settings__save-button error--text text--lighten-1 mt-3\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.overrideClientSettingsFromServer()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:document-arrow-down-16-filled\",\"height\":\"22px\"}}),_vm._v(\" このデバイスの設定を、\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"サーバーに保存されている設定で上書きする \")],1),_c('v-btn',{staticClass:\"settings__save-button mt-3\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.sync_settings_dialog = false}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:dismiss-16-filled\",\"height\":\"22px\"}}),_vm._v(\" キャンセル \")],1)],1)],1)],1),_c('v-form',{ref:\"settings_username\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ユーザー名\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントのユーザー名を設定します。アルファベットだけでなく日本語や記号も使えます。\"),_c('br'),_vm._v(\" 同じ KonomiTV サーバー上の他のアカウントと同じユーザー名には変更できません。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"dense\":_vm.is_form_dense,\"rules\":[_vm.settings_username_validation]},model:{value:(_vm.settings_username),callback:function ($$v) {_vm.settings_username=$$v},expression:\"settings_username\"}})],1),_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountInfo('username')}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"ユーザー名を更新 \")],1),_c('v-form',{staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"アイコン画像\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントのアイコン画像を設定します。\"),_c('br'),_vm._v(\" アップロードされた画像は自動で 400×400 の正方形にリサイズされます。\"),_c('br')]),_c('v-file-input',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"アイコン画像を選択\",\"dense\":_vm.is_form_dense,\"accept\":\"image/jpeg, image/png\",\"prepend-icon\":\"\",\"prepend-inner-icon\":\"mdi-paperclip\"},model:{value:(_vm.settings_icon),callback:function ($$v) {_vm.settings_icon=$$v},expression:\"settings_icon\"}})],1),_c('v-btn',{staticClass:\"settings__save-button mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountIcon()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"アイコン画像を更新 \")],1),_c('v-form',{ref:\"settings_password\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"新しいパスワード\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントの新しいパスワードを設定します。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"新しいパスワード\",\"dense\":_vm.is_form_dense,\"type\":_vm.settings_password_showing ? 'text' : 'password',\"append-icon\":_vm.settings_password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[_vm.settings_password_validation]},on:{\"click:append\":function($event){_vm.settings_password_showing = !_vm.settings_password_showing}},model:{value:(_vm.settings_password),callback:function ($$v) {_vm.settings_password=$$v},expression:\"settings_password\"}})],1),_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountInfo('password')}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"パスワードを更新 \")],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item mt-6\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"アカウントを削除\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 現在ログインしている KonomiTV アカウントを削除します。\"),_c('br'),_c('b',[_vm._v(\"アカウントに紐づくすべてのデータが削除されます。\")]),_vm._v(\"元に戻すことはできません。\"),_c('br')])]),_c('v-dialog',{attrs:{\"max-width\":\"385\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on }){return [_c('v-btn',_vm._g({staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"}},on),[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:delete-16-filled\",\"height\":\"24px\"}}),_vm._v(\"アカウントを削除 \")],1)]}}],null,false,1849668703),model:{value:(_vm.account_delete_confirm_dialog),callback:function ($$v) {_vm.account_delete_confirm_dialog=$$v},expression:\"account_delete_confirm_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center pt-6 font-weight-bold\"},[_vm._v(\"本当にアカウントを削除しますか？\")]),_c('v-card-text',{staticClass:\"pt-2 pb-0\"},[_vm._v(\" アカウントに紐づくすべてのデータが削除されます。元に戻すことはできません。\"),_c('br'),_vm._v(\" 本当にアカウントを削除しますか？ \")]),_c('v-card-actions',{staticClass:\"pt-4 px-6 pb-5\"},[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"text\",\"text\":\"\"},on:{\"click\":function($event){_vm.account_delete_confirm_dialog = false}}},[_vm._v(\"キャンセル\")]),_c('v-btn',{attrs:{\"color\":\"error\"},on:{\"click\":function($event){return _vm.deleteAccount()}}},[_vm._v(\"削除\")])],1)],1)],1)],1):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('v-card',{staticClass:\"settings-container d-flex px-5 py-5 mx-auto background\",attrs:{\"elevation\":\"0\",\"width\":\"100%\",\"max-width\":\"1000\"}},[_c('div',[_c('v-navigation-drawer',{staticClass:\"settings-navigation flex-shrink-0 background\",attrs:{\"permanent\":\"\",\"width\":\"195\",\"height\":\"auto\"}},[_c('v-list-item',{staticClass:\"px-4\"},[_c('v-list-item-content',[_c('h1',[_vm._v(\"設定\")])])],1),_c('v-list',{staticClass:\"mt-3 px-0 py-0\",attrs:{\"nav\":\"\"}},[_c('v-list-item',{staticClass:\"px-4 mb-1\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/general\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 3px\"},attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"全般\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 mb-1\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/caption\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:subtitles-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"字幕\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 mb-1\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/data-broadcasting\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('svg',{attrs:{\"width\":\"26px\",\"height\":\"26px\",\"viewBox\":\"0 0 512 512\"}},[_c('path',{attrs:{\"fill\":\"currentColor\",\"d\":\"M248.039 381.326L355.039 67.8258C367.539 28.3257 395.039 34.3258 406.539 34.3258C431.039 34.3258 453.376 61.3258 441.039 96.8258C362.639 322.426 343.539 375.326 340.539 384.826C338.486 391.326 342.039 391.326 345.539 391.326C377.039 391.326 386.539 418.326 386.539 435.326C386.539 458.826 371.539 477.326 350.039 477.326H214.539C179.039 477.326 85.8269 431.3 88.0387 335.826C91.0387 206.326 192.039 183.326 243.539 183.326H296.539L265.539 272.326H243.539C185.539 272.326 174.113 314.826 176.039 334.326C180.039 374.826 215.039 389.814 237.039 390.326C244.539 390.5 246.039 386.826 248.039 381.326Z\"}})])]),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"データ放送\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 mb-1\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/capture\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-multiple-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"キャプチャ\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 mb-1\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/account\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"アカウント\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 mb-1\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/jikkyo\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 2px\"},attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"ニコニコ実況\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 mb-1\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/twitter\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 1px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"Twitter\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 mb-1\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/server\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:server-surface-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"サーバー設定\")])],1)],1)],1)],1)],1),_c('v-card',{staticClass:\"settings ml-5 px-7 py-7 lighten-1\",attrs:{\"width\":\"100%\"}},[_vm._t(\"default\")],2)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"route-container\">\r\n        <Header/>\r\n        <main>\r\n            <Navigation/>\r\n            <v-card class=\"settings-container d-flex px-5 py-5 mx-auto background\" elevation=\"0\" width=\"100%\" max-width=\"1000\">\r\n                <div><!-- ← position: sticky; を効かせるためのボックス -->\r\n                    <v-navigation-drawer permanent class=\"settings-navigation flex-shrink-0 background\" width=\"195\" height=\"auto\">\r\n                        <v-list-item class=\"px-4\">\r\n                            <v-list-item-content>\r\n                                <h1>設定</h1>\r\n                            </v-list-item-content>\r\n                        </v-list-item>\r\n                        <v-list nav class=\"mt-3 px-0 py-0\">\r\n                            <v-list-item link color=\"primary\" class=\"px-4 mb-1\" to=\"/settings/general\">\r\n                                <v-list-item-icon class=\"mr-4\">\r\n                                    <Icon icon=\"fa-solid:sliders-h\" width=\"26px\" style=\"padding: 0 3px;\" />\r\n                                </v-list-item-icon>\r\n                                <v-list-item-content>\r\n                                    <v-list-item-title>全般</v-list-item-title>\r\n                                </v-list-item-content>\r\n                            </v-list-item>\r\n                            <v-list-item link color=\"primary\" class=\"px-4 mb-1\" to=\"/settings/caption\">\r\n                                <v-list-item-icon class=\"mr-4\">\r\n                                    <Icon icon=\"fluent:subtitles-16-filled\" width=\"26px\" />\r\n                                </v-list-item-icon>\r\n                                <v-list-item-content>\r\n                                    <v-list-item-title>字幕</v-list-item-title>\r\n                                </v-list-item-content>\r\n                            </v-list-item>\r\n                            <v-list-item link color=\"primary\" class=\"px-4 mb-1\" to=\"/settings/data-broadcasting\">\r\n                                <v-list-item-icon class=\"mr-4\">\r\n                                    <svg width=\"26px\" height=\"26px\" viewBox=\"0 0 512 512\">\r\n                                        <path fill=\"currentColor\" d=\"M248.039 381.326L355.039 67.8258C367.539 28.3257 395.039 34.3258 406.539 34.3258C431.039 34.3258 453.376 61.3258 441.039 96.8258C362.639 322.426 343.539 375.326 340.539 384.826C338.486 391.326 342.039 391.326 345.539 391.326C377.039 391.326 386.539 418.326 386.539 435.326C386.539 458.826 371.539 477.326 350.039 477.326H214.539C179.039 477.326 85.8269 431.3 88.0387 335.826C91.0387 206.326 192.039 183.326 243.539 183.326H296.539L265.539 272.326H243.539C185.539 272.326 174.113 314.826 176.039 334.326C180.039 374.826 215.039 389.814 237.039 390.326C244.539 390.5 246.039 386.826 248.039 381.326Z\" />\r\n                                    </svg>\r\n                                </v-list-item-icon>\r\n                                <v-list-item-content>\r\n                                    <v-list-item-title>データ放送</v-list-item-title>\r\n                                </v-list-item-content>\r\n                            </v-list-item>\r\n                            <v-list-item link color=\"primary\" class=\"px-4 mb-1\" to=\"/settings/capture\">\r\n                                <v-list-item-icon class=\"mr-4\">\r\n                                    <Icon icon=\"fluent:image-multiple-16-filled\" width=\"26px\" />\r\n                                </v-list-item-icon>\r\n                                <v-list-item-content>\r\n                                    <v-list-item-title>キャプチャ</v-list-item-title>\r\n                                </v-list-item-content>\r\n                            </v-list-item>\r\n                            <v-list-item link color=\"primary\" class=\"px-4 mb-1\" to=\"/settings/account\">\r\n                                <v-list-item-icon class=\"mr-4\">\r\n                                    <Icon icon=\"fluent:person-20-filled\" width=\"26px\" />\r\n                                </v-list-item-icon>\r\n                                <v-list-item-content>\r\n                                    <v-list-item-title>アカウント</v-list-item-title>\r\n                                </v-list-item-content>\r\n                            </v-list-item>\r\n                            <v-list-item link color=\"primary\" class=\"px-4 mb-1\" to=\"/settings/jikkyo\">\r\n                                <v-list-item-icon class=\"mr-4\">\r\n                                    <Icon icon=\"bi:chat-left-text-fill\" width=\"26px\" style=\"padding: 0 2px;\" />\r\n                                </v-list-item-icon>\r\n                                <v-list-item-content>\r\n                                    <v-list-item-title>ニコニコ実況</v-list-item-title>\r\n                                </v-list-item-content>\r\n                            </v-list-item>\r\n                            <v-list-item link color=\"primary\" class=\"px-4 mb-1\" to=\"/settings/twitter\">\r\n                                <v-list-item-icon class=\"mr-4\">\r\n                                    <Icon icon=\"fa-brands:twitter\" width=\"26px\" style=\"padding: 0 1px;\" />\r\n                                </v-list-item-icon>\r\n                                <v-list-item-content>\r\n                                    <v-list-item-title>Twitter</v-list-item-title>\r\n                                </v-list-item-content>\r\n                            </v-list-item>\r\n                            <v-list-item link color=\"primary\" class=\"px-4 mb-1\" to=\"/settings/server\">\r\n                                <v-list-item-icon class=\"mr-4\">\r\n                                    <Icon icon=\"fluent:server-surface-16-filled\" width=\"26px\" />\r\n                                </v-list-item-icon>\r\n                                <v-list-item-content>\r\n                                    <v-list-item-title>サーバー設定</v-list-item-title>\r\n                                </v-list-item-content>\r\n                            </v-list-item>\r\n                        </v-list>\r\n                    </v-navigation-drawer>\r\n                </div>\r\n                <v-card class=\"settings ml-5 px-7 py-7 lighten-1\" width=\"100%\">\r\n                    <!-- この slot にそれぞれの設定画面の内容が入る -->\r\n                    <slot></slot>\r\n                </v-card>\r\n            </v-card>\r\n        </main>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport Vue from 'vue';\r\n\r\nimport Header from '@/components/Header.vue';\r\nimport Navigation from '@/components/Navigation.vue';\r\n\r\n// 設定のベース画面なので、ロジックは基本置かない\r\nexport default Vue.extend({\r\n    name: 'Settings-Base',\r\n    components: {\r\n        Header,\r\n        Navigation,\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.settings-container {\r\n    width: 100%;\r\n    min-width: 0;\r\n    @include smartphone-horizontal {\r\n        padding: 16px 20px !important;\r\n    }\r\n    @include smartphone-horizontal-short {\r\n        padding: 16px 16px !important;\r\n    }\r\n    @include smartphone-vertical {\r\n        padding: 0px 0px !important;\r\n    }\r\n\r\n    .settings-navigation {\r\n        position: sticky;\r\n        top: calc(65px + 20px) !important;  // ヘッダー+余白の高さ\r\n\r\n        // タブレット縦画面・スマホ横画面・スマホ縦画面では表示しない\r\n        @include tablet-vertical {\r\n            display: none;\r\n        }\r\n        @include smartphone-horizontal {\r\n            display: none;\r\n        }\r\n        @include smartphone-vertical {\r\n            display: none;\r\n        }\r\n\r\n        .v-list-item--link, .v-list-item--link:before {\r\n            border-radius: 11px !important;\r\n        }\r\n    }\r\n\r\n    // ::deep() で子コンポーネント（それぞれの設定画面）にも CSS が効くようにする\r\n    // ref: https://qiita.com/buntafujikawa/items/b1703a2a4344fd326fe0\r\n    .settings :deep() {\r\n        width: 100%;\r\n        min-width: 0;\r\n        border-radius: 11px !important;\r\n        background-color: var(--v-background-lighten1);\r\n        @include tablet-vertical {\r\n            margin-left: 0 !important;\r\n            padding-top: 20px !important;\r\n            padding-left: 20px !important;\r\n            padding-right: 20px !important;\r\n        }\r\n        @include smartphone-horizontal {\r\n            padding: 20px !important;\r\n            margin-left: 0 !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            margin-left: 0 !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            padding-top: 60px !important;\r\n            padding-left: 16px !important;\r\n            padding-right: 16px !important;\r\n            border-radius: 0 !important;\r\n            background-color: var(--v-background-base);\r\n        }\r\n\r\n        .settings__heading {\r\n            display: flex;\r\n            align-items: center;\r\n            font-size: 22px;\r\n            @include smartphone-horizontal {\r\n                font-size: 20px;\r\n            }\r\n            @include smartphone-vertical {\r\n                position: fixed;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                height: 60px;\r\n                padding: 16px;\r\n                border-radius: 0;\r\n                background: var(--v-background-lighten1);\r\n                box-shadow: 0px 3px 14px 2px rgb(0 0 0 / 12%);\r\n                z-index: 5;\r\n            }\r\n\r\n            .settings__back-button {\r\n                display: none;\r\n                position: relative;\r\n                left: -6px;\r\n                padding: 6px;\r\n                border-radius: 50%;\r\n                color: var(--v-text-base);\r\n                @include tablet-vertical {\r\n                    display: flex;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    display: flex;\r\n                }\r\n                @include smartphone-vertical {\r\n                    display: flex;\r\n                }\r\n            }\r\n\r\n            .settings__back-button + svg {\r\n                @include tablet-vertical {\r\n                    display: none;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    display: none;\r\n                }\r\n                @include smartphone-vertical {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            .settings__back-button + svg + span {\r\n                @include tablet-vertical {\r\n                    margin-left: 0px !important;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    margin-left: 0px !important;\r\n                }\r\n                @include smartphone-vertical {\r\n                    margin-left: 0px !important;\r\n                }\r\n            }\r\n        }\r\n\r\n        .settings__content {\r\n            margin-top: 24px;\r\n            @include smartphone-horizontal {\r\n                margin-top: 16px;\r\n            }\r\n\r\n            .settings__item {\r\n                display: flex;\r\n                position: relative;\r\n                flex-direction: column;\r\n                margin-top: 24px;\r\n                @include smartphone-horizontal {\r\n                    margin-top: 16px;\r\n                }\r\n\r\n                &--sync-disabled {\r\n                    .settings__item-heading {\r\n                        padding-right: 8px;\r\n                        &:after {\r\n                            content: 'デバイス間同期無効';\r\n                            display: flex;\r\n                            align-items: center;\r\n                            flex-shrink: 0;\r\n                            position: relative;\r\n                            right: -8px;\r\n                            padding: 2px 4px;\r\n                            margin-left: auto;\r\n                            border-radius: 4px;\r\n                            background: var(--v-background-lighten2);\r\n                            font-size: 11px;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                &--switch {\r\n                    margin-right: 62px;\r\n\r\n                    .settings__item-heading {\r\n                        width: calc(100% + 62px);\r\n                    }\r\n\r\n                    .settings__item-heading, .settings__item-label {\r\n                        cursor: pointer;\r\n                    }\r\n                }\r\n\r\n                &--disabled {\r\n                    opacity: 0.5;\r\n                }\r\n\r\n                &-heading {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    color: var(--v-text-base);\r\n                    font-size: 16.5px;\r\n                    @include smartphone-horizontal {\r\n                        font-size: 15px;\r\n                    }\r\n                }\r\n                &-label {\r\n                    margin-top: 8px;\r\n                    color: var(--v-text-darken1);\r\n                    font-size: 13.5px;\r\n                    line-height: 1.6;\r\n                    @include smartphone-horizontal {\r\n                        font-size: 11px;\r\n                        line-height: 1.7;\r\n                    }\r\n                }\r\n                &-form {\r\n                    margin-top: 14px;\r\n                    @include smartphone-horizontal {\r\n                        font-size: 13.5px;\r\n                    }\r\n                }\r\n                &-switch {\r\n                    align-items: center;\r\n                    position: absolute;\r\n                    top: 0;\r\n                    right: -74px;\r\n                    bottom: 0;\r\n                    margin-top: 0;\r\n                }\r\n\r\n                p {\r\n                    margin-bottom: 8px;\r\n                    &:last-of-type {\r\n                        margin-bottom: 0px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .settings__save-button {\r\n                height: 45px;\r\n                background: var(--v-background-lighten2);\r\n                font-size: 15.5px;\r\n                letter-spacing: 0;\r\n                @include smartphone-horizontal {\r\n                    height: 40px;\r\n                    padding: 0 12px;\r\n                    font-size: 14px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Base.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Base.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Base.vue?vue&type=template&id=7802007e&scoped=true\"\nimport script from \"./Base.vue?vue&type=script&lang=ts\"\nexport * from \"./Base.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Base.vue?vue&type=style&index=0&id=7802007e&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7802007e\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <!-- ベース画面の中にそれぞれの設定画面で異なる部分を記述する -->\r\n    <SettingsBase>\r\n        <h2 class=\"settings__heading\">\r\n            <router-link v-ripple class=\"settings__back-button\" to=\"/settings/\">\r\n                <Icon icon=\"fluent:arrow-left-12-filled\" width=\"25px\" />\r\n            </router-link>\r\n            <Icon icon=\"fluent:person-20-filled\" width=\"25px\" />\r\n            <span class=\"ml-2\">アカウント</span>\r\n        </h2>\r\n        <div class=\"settings__content\" :class=\"{'settings__content--loading': is_loading}\">\r\n            <div class=\"account\" v-if=\"userStore.user === null\">\r\n                <div class=\"account-wrapper\">\r\n                    <img class=\"account__icon\" src=\"/assets/images/account-icon-default.png\">\r\n                    <div class=\"account__info\">\r\n                        <div class=\"account__info-name\">\r\n                            <span class=\"account__info-name-text\">ログインしていません</span>\r\n                        </div>\r\n                        <span class=\"account__info-id\">Not logged in</span>\r\n                    </div>\r\n                </div>\r\n                <v-btn class=\"account__login ml-auto\" color=\"secondary\" width=\"140\" height=\"56\" depressed to=\"/login/\">\r\n                    <Icon icon=\"fa:sign-in\" class=\"mr-2\" />ログイン\r\n                </v-btn>\r\n            </div>\r\n            <div class=\"account\" v-if=\"userStore.user !== null\">\r\n                <div class=\"account-wrapper\">\r\n                    <img class=\"account__icon\" :src=\"userStore.user_icon_url ?? ''\">\r\n                    <div class=\"account__info\">\r\n                        <div class=\"account__info-name\">\r\n                            <span class=\"account__info-name-text\">{{userStore.user.name}}</span>\r\n                            <span class=\"account__info-admin\" v-if=\"userStore.user.is_admin\">管理者</span>\r\n                        </div>\r\n                        <span class=\"account__info-id\">User ID: {{userStore.user.id}}</span>\r\n                    </div>\r\n                </div>\r\n                <v-btn class=\"account__login ml-auto\" color=\"secondary\" width=\"140\" height=\"56\" depressed @click=\"userStore.logout()\">\r\n                    <Icon icon=\"fa:sign-out\" class=\"mr-2\" />ログアウト\r\n                </v-btn>\r\n            </div>\r\n            <div class=\"account-register\" v-if=\"userStore.is_logged_in === false\">\r\n                <div class=\"account-register__heading\">\r\n                    KonomiTV アカウントにログインすると、<br>より便利な機能が使えます！\r\n                </div>\r\n                <div class=\"account-register__feature\">\r\n                    <div class=\"account-feature\">\r\n                        <Icon class=\"account-feature__icon\" icon=\"bi:chat-left-text-fill\" />\r\n                        <div class=\"account-feature__info\">\r\n                            <span class=\"account-feature__info-heading\">ニコニコ実況にコメントする</span>\r\n                            <span class=\"account-feature__info-text\">テレビを見ながらニコニコ実況にコメントできます。別途、ニコニコアカウントとの連携が必要です。</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"account-feature\">\r\n                        <Icon class=\"account-feature__icon\" icon=\"fa-brands:twitter\" />\r\n                        <div class=\"account-feature__info\">\r\n                            <span class=\"account-feature__info-heading\">Twitter 連携機能</span>\r\n                            <span class=\"account-feature__info-text\">テレビを見ながら Twitter にツイートしたり、検索したツイートをリアルタイムで表示できます。別途、Twitter アカウントとの連携が必要です。</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"account-feature\">\r\n                        <Icon class=\"account-feature__icon\" icon=\"fluent:arrow-sync-20-filled\" />\r\n                        <div class=\"account-feature__info\">\r\n                            <span class=\"account-feature__info-heading\">設定をデバイス間で同期</span>\r\n                            <span class=\"account-feature__info-text\">ピン留めしたチャンネルなど、ブラウザに保存されている各種設定をブラウザやデバイスをまたいで同期できます。</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"account-feature\">\r\n                        <Icon class=\"account-feature__icon\" icon=\"fa-solid:sliders-h\" />\r\n                        <div class=\"account-feature__info\">\r\n                            <span class=\"account-feature__info-heading\">サーバー設定をブラウザから変更</span>\r\n                            <span class=\"account-feature__info-text\">管理者権限があれば、サーバー設定をブラウザから変更できます。一番最初に作成されたアカウントには、自動で管理者権限が付与されます。</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"account-register__description\">\r\n                    KonomiTV アカウントの作成に必要なものは<br class=\"smartphone-vertical-only\">ユーザー名とパスワードだけです。<br>\r\n                    アカウントはローカルに導入した<br class=\"smartphone-vertical-only\"> KonomiTV サーバーにのみ保存されます。<br>\r\n                    外部のサービスには保存されませんので、ご安心ください。<br>\r\n                </div>\r\n                <v-btn class=\"account-register__button\" color=\"secondary\" width=\"100%\" max-width=\"250\" height=\"50\" depressed to=\"/register/\">\r\n                    <Icon icon=\"fluent:person-add-20-filled\" class=\"mr-2\" height=\"24\" />アカウントを作成\r\n                </v-btn>\r\n            </div>\r\n            <div v-if=\"userStore.is_logged_in === true\">\r\n                <div class=\"settings__item settings__item--switch\">\r\n                    <label class=\"settings__item-heading\" for=\"sync_settings\">設定をデバイス間で同期する</label>\r\n                    <label class=\"settings__item-label\" for=\"sync_settings\">\r\n                        KonomiTV では、設定を同じアカウントでログインしているデバイス間で同期できます！<br>\r\n                        同期をオンにすると、同期をオンにしているすべてのデバイスで共通の設定が使えます。ピン留めチャンネルやハッシュタグリストなども同期されます。<br>\r\n                        なお、デバイス固有の設定（画質設定など）は、同期後も各デバイスで個別に反映されます。<br>\r\n                    </label>\r\n                    <v-switch class=\"settings__item-switch\" id=\"sync_settings\" inset hide-details\r\n                        v-model=\"sync_settings\">\r\n                    </v-switch>\r\n                </div>\r\n                <v-dialog max-width=\"530\" v-model=\"sync_settings_dialog\">\r\n                    <v-card>\r\n                        <v-card-title class=\"justify-center\">設定データの競合</v-card-title>\r\n                        <v-card-text>\r\n                            このデバイスの設定と、サーバーに保存されている設定が競合しています。<br>\r\n                            一度上書きすると、元に戻すことはできません。慎重に選択してください。<br>\r\n                        </v-card-text>\r\n                        <div class=\"d-flex flex-column px-4 pb-4 settings__conflict-dialog\">\r\n                            <v-btn class=\"settings__save-button error--text text--lighten-1\" depressed\r\n                                @click=\"overrideServerSettingsFromClient()\">\r\n                                <Icon icon=\"fluent:document-arrow-up-16-filled\" class=\"mr-2\" height=\"22px\" />\r\n                                サーバーに保存されている設定を、<br class=\"smartphone-vertical-only\">このデバイスの設定で上書きする\r\n                            </v-btn>\r\n                            <v-btn class=\"settings__save-button error--text text--lighten-1 mt-3\" depressed\r\n                                @click=\"overrideClientSettingsFromServer()\">\r\n                                <Icon icon=\"fluent:document-arrow-down-16-filled\" class=\"mr-2\" height=\"22px\" />\r\n                                このデバイスの設定を、<br class=\"smartphone-vertical-only\">サーバーに保存されている設定で上書きする\r\n                            </v-btn>\r\n                            <v-btn class=\"settings__save-button mt-3\" depressed @click=\"sync_settings_dialog = false\">\r\n                                <Icon icon=\"fluent:dismiss-16-filled\" class=\"mr-2\" height=\"22px\" />\r\n                                キャンセル\r\n                            </v-btn>\r\n                        </div>\r\n                    </v-card>\r\n                </v-dialog>\r\n                <v-form class=\"settings__item\" ref=\"settings_username\" @submit.prevent>\r\n                    <div class=\"settings__item-heading\">ユーザー名</div>\r\n                    <div class=\"settings__item-label\">\r\n                        KonomiTV アカウントのユーザー名を設定します。アルファベットだけでなく日本語や記号も使えます。<br>\r\n                        同じ KonomiTV サーバー上の他のアカウントと同じユーザー名には変更できません。<br>\r\n                    </div>\r\n                    <v-text-field class=\"settings__item-form\" outlined placeholder=\"ユーザー名\"\r\n                        :dense=\"is_form_dense\"\r\n                        v-model=\"settings_username\"\r\n                        :rules=\"[settings_username_validation]\">\r\n                    </v-text-field>\r\n                </v-form>\r\n                <v-btn class=\"settings__save-button\" depressed @click=\"updateAccountInfo('username')\">\r\n                    <Icon icon=\"fluent:save-16-filled\" class=\"mr-2\" height=\"24px\" />ユーザー名を更新\r\n                </v-btn>\r\n                <v-form class=\"settings__item\" @submit.prevent>\r\n                    <div class=\"settings__item-heading\">アイコン画像</div>\r\n                    <div class=\"settings__item-label\">\r\n                        KonomiTV アカウントのアイコン画像を設定します。<br>\r\n                        アップロードされた画像は自動で 400×400 の正方形にリサイズされます。<br>\r\n                    </div>\r\n                    <v-file-input class=\"settings__item-form\" outlined hide-details placeholder=\"アイコン画像を選択\"\r\n                        :dense=\"is_form_dense\"\r\n                        accept=\"image/jpeg, image/png\"\r\n                        prepend-icon=\"\"\r\n                        prepend-inner-icon=\"mdi-paperclip\"\r\n                        v-model=\"settings_icon\">\r\n                    </v-file-input>\r\n                </v-form>\r\n                <v-btn class=\"settings__save-button mt-5\" depressed @click=\"updateAccountIcon()\">\r\n                    <Icon icon=\"fluent:save-16-filled\" class=\"mr-2\" height=\"24px\" />アイコン画像を更新\r\n                </v-btn>\r\n                <v-form class=\"settings__item\" ref=\"settings_password\" @submit.prevent>\r\n                    <div class=\"settings__item-heading\">新しいパスワード</div>\r\n                    <div class=\"settings__item-label\">\r\n                        KonomiTV アカウントの新しいパスワードを設定します。<br>\r\n                    </div>\r\n                    <v-text-field class=\"settings__item-form\" outlined placeholder=\"新しいパスワード\"\r\n                        :dense=\"is_form_dense\"\r\n                        v-model=\"settings_password\"\r\n                        :type=\"settings_password_showing ? 'text' : 'password'\"\r\n                        :append-icon=\"settings_password_showing ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                        :rules=\"[settings_password_validation]\"\r\n                        @click:append=\"settings_password_showing = !settings_password_showing\">\r\n                    </v-text-field>\r\n                </v-form>\r\n                <v-btn class=\"settings__save-button\" depressed @click=\"updateAccountInfo('password')\">\r\n                    <Icon icon=\"fluent:save-16-filled\" class=\"mr-2\" height=\"24px\" />パスワードを更新\r\n                </v-btn>\r\n                <v-divider class=\"mt-6\"></v-divider>\r\n                <div class=\"settings__item mt-6\">\r\n                    <div class=\"settings__item-heading error--text text--lighten-1\">アカウントを削除</div>\r\n                    <div class=\"settings__item-label\">\r\n                        現在ログインしている KonomiTV アカウントを削除します。<br>\r\n                        <b>アカウントに紐づくすべてのデータが削除されます。</b>元に戻すことはできません。<br>\r\n                    </div>\r\n                </div>\r\n                <v-dialog max-width=\"385\" v-model=\"account_delete_confirm_dialog\">\r\n                    <template v-slot:activator=\"{ on }\">\r\n                        <v-btn class=\"settings__save-button error mt-5\" depressed v-on=\"on\">\r\n                            <Icon icon=\"fluent:delete-16-filled\" class=\"mr-2\" height=\"24px\" />アカウントを削除\r\n                        </v-btn>\r\n                    </template>\r\n                    <v-card>\r\n                        <v-card-title class=\"justify-center pt-6 font-weight-bold\">本当にアカウントを削除しますか？</v-card-title>\r\n                        <v-card-text class=\"pt-2 pb-0\">\r\n                            アカウントに紐づくすべてのデータが削除されます。元に戻すことはできません。<br>\r\n                            本当にアカウントを削除しますか？\r\n                        </v-card-text>\r\n                        <v-card-actions class=\"pt-4 px-6 pb-5\">\r\n                            <v-spacer></v-spacer>\r\n                            <v-btn color=\"text\" text @click=\"account_delete_confirm_dialog = false\">キャンセル</v-btn>\r\n                            <v-btn color=\"error\" @click=\"deleteAccount()\">削除</v-btn>\r\n                        </v-card-actions>\r\n                    </v-card>\r\n                </v-dialog>\r\n            </div>\r\n        </div>\r\n    </SettingsBase>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport Settings from '@/services/Settings';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport useUserStore from '@/stores/UserStore';\r\nimport Utils from '@/utils';\r\nimport SettingsBase from '@/views/Settings/Base.vue';\r\n\r\nexport default Vue.extend({\r\n    name: 'Settings-Account',\r\n    components: {\r\n        SettingsBase,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // フォームを小さくするかどうか\r\n            is_form_dense: Utils.isSmartphoneHorizontal(),\r\n\r\n            // ローディング中かどうか\r\n            is_loading: true,\r\n\r\n            // ユーザー名とパスワード\r\n            // ログイン画面やアカウント作成画面の data と同一のもの\r\n            settings_username: null as string | null,\r\n            settings_username_validation: (value: string | null) => {\r\n                if (value === '' || value === null) return 'ユーザー名を入力してください。';\r\n                if (/^.{2,}$/.test(value) === false) return 'ユーザー名は2文字以上で入力してください。';\r\n                return true;\r\n            },\r\n            settings_password: null as string | null,\r\n            settings_password_showing: false,\r\n            settings_password_validation: (value: string | null) => {\r\n                if (value === '' || value === null) return 'パスワードを入力してください。';\r\n                // 正規表現の参考: https://qiita.com/grrrr/items/0b35b5c1c98eebfa5128\r\n                if (/^[a-zA-Z0-9!-/:-@¥[-`{-~]{4,}$/.test(value) === false) return 'パスワードは4文字以上の半角英数記号を入力してください。';\r\n                return true;\r\n            },\r\n\r\n            // アップロードするアイコン画像\r\n            settings_icon: null as File | null,\r\n\r\n            // アカウント削除確認ダイヤログ\r\n            account_delete_confirm_dialog: false,\r\n\r\n            // 設定を同期するかの設定値\r\n            sync_settings: useSettingsStore().settings.sync_settings as boolean,\r\n\r\n            // 設定を同期するときのダイヤログ\r\n            sync_settings_dialog: false,\r\n        };\r\n    },\r\n    computed: {\r\n        // SettingsStore / UserStore に this.settingsStore / this.userStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useSettingsStore, useUserStore),\r\n    },\r\n    async created() {\r\n\r\n        // アカウント情報を更新\r\n        await this.userStore.fetchUser();\r\n\r\n        // ローディング状態を解除\r\n        this.is_loading = false;\r\n    },\r\n    watch: {\r\n        // sync_settings の値の変更を監視する\r\n        async sync_settings() {\r\n\r\n            // 同期がオンになった & ダイヤログが表示されていない\r\n            if (this.sync_settings === true && this.sync_settings_dialog === false) {\r\n\r\n                // 同期対象の設定キーのみで設定データをまとめ直す\r\n                const sync_settings = this.settingsStore.getSyncableClientSettings();\r\n\r\n                // 同期対象のこのクライアントの設定を再度 JSON にする（文字列比較のため）\r\n                const sync_settings_json = JSON.stringify(sync_settings);\r\n\r\n                // サーバーから設定データをダウンロード\r\n                // 一度オブジェクトに戻したものをを再度 JSON にする（文字列比較のため）\r\n                const server_sync_settings = await Settings.fetchClientSettings();\r\n                if (server_sync_settings === null) {\r\n                    this.$message.error('サーバーから設定データを取得できませんでした。');\r\n                    return;\r\n                }\r\n                const server_sync_settings_json = JSON.stringify(server_sync_settings);\r\n\r\n                // このクライアントの設定とサーバーに保存されている設定が一致しない（=競合している）\r\n                if (sync_settings_json !== server_sync_settings_json) {\r\n\r\n                    // 一度同期のスイッチをオフにして、クライアントとサーバーどちらの設定を使うのかを選択させるダイヤログを表示\r\n                    this.sync_settings_dialog = true;\r\n                    this.sync_settings = false;\r\n\r\n                // このクライアントの設定とサーバーに保存されている設定が一致する\r\n                } else {\r\n\r\n                    // 特に設定の同期をオンにしても問題ないので、そのまま有効にする\r\n                    this.settingsStore.settings.sync_settings = true;\r\n                }\r\n\r\n            // 同期がオフになった & ダイヤログが表示されていない\r\n            } else if (this.sync_settings === false && this.sync_settings_dialog === false) {\r\n                this.settingsStore.settings.sync_settings = false;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        // このクライアントの設定でサーバー上の設定を上書きする\r\n        async overrideServerSettingsFromClient() {\r\n\r\n            // 強制的にこのクライアントの設定をサーバーに同期\r\n            await this.settingsStore.syncClientSettingsToServer(true);\r\n\r\n            // 設定の同期を有効化\r\n            this.settingsStore.settings.sync_settings = true;\r\n            this.sync_settings = true;\r\n\r\n            // ダイヤログを閉じる\r\n            this.sync_settings_dialog = false;\r\n        },\r\n\r\n        // サーバー上の設定でこのクライアントの設定を上書きする\r\n        async overrideClientSettingsFromServer() {\r\n\r\n            // 強制的にサーバーに保存されている設定データをこのクライアントに同期する\r\n            // 設定の同期を有効化する前に実行しておくのが重要\r\n            await this.settingsStore.syncClientSettingsFromServer(true);\r\n\r\n            // 設定の同期を有効化\r\n            // 値を変更した時点で設定データがサーバーにアップロードされてしまうので、\r\n            // それよりも前に syncClientSettingsFromServer(true) でサーバー上の設定データを同期させておく必要がある\r\n            // さもなければ、サーバー上の設定データがこのクライアントの設定で上書きされてしまい、overrideServerSettingsFromClient() と同じ挙動になってしまう\r\n            this.settingsStore.settings.sync_settings = true;\r\n            this.sync_settings = true;\r\n\r\n            // ダイヤログを閉じる\r\n            this.sync_settings_dialog = false;\r\n        },\r\n\r\n        async updateAccountInfo(update_type: 'username' | 'password') {\r\n\r\n            // すべてのバリデーションが通過したときのみ\r\n            // ref: https://qiita.com/Hijiri_Ishi/items/56cac99c8f3806a6fa24\r\n            if (update_type === 'username') {\r\n                if ((this.$refs.settings_username as any).validate() === false) return;\r\n            } else {\r\n                if ((this.$refs.settings_password as any).validate() === false) return;\r\n            }\r\n\r\n            // アカウント情報の更新処理 (エラーハンドリングを含む) を実行\r\n            if (update_type === 'username') {\r\n                if (this.settings_username === null) return;\r\n                await this.userStore.updateUser({username: this.settings_username});\r\n            } else {\r\n                if (this.settings_password === null) return;\r\n                await this.userStore.updateUser({password: this.settings_password});\r\n            }\r\n        },\r\n\r\n        async updateAccountIcon() {\r\n\r\n            // アイコン画像が選択されていないなら更新しない\r\n            if (this.settings_icon === null) {\r\n                this.$message.error('アップロードする画像を選択してください！');\r\n                return;\r\n            }\r\n\r\n            // アイコン画像の更新処理 (エラーハンドリングを含む) を実行\r\n            await this.userStore.updateUserIcon(this.settings_icon);\r\n        },\r\n\r\n        async deleteAccount() {\r\n\r\n            // ダイヤログを閉じる\r\n            this.account_delete_confirm_dialog = false;\r\n\r\n            // アカウント削除処理 (エラーハンドリングを含む) を実行\r\n            await this.userStore.deleteUser();\r\n        }\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.settings__content {\r\n    opacity: 1;\r\n    transition: opacity 0.4s;\r\n\r\n    &--loading {\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n.settings__conflict-dialog {\r\n    .v-btn {\r\n        @include smartphone-vertical {\r\n            height: 50px !important;\r\n            text-align: left;\r\n        }\r\n        br.smartphone-vertical-only {\r\n            display: none;\r\n            @include smartphone-vertical {\r\n                display: inline;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.account {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 130px;\r\n    padding: 18px 20px;\r\n    border-radius: 15px;\r\n    background: var(--v-background-lighten2);\r\n    @include tablet-horizontal {\r\n        align-items: normal;\r\n        flex-direction: column;\r\n        height: auto;\r\n        padding: 16px;\r\n    }\r\n    @include tablet-vertical {\r\n        align-items: normal;\r\n        flex-direction: column;\r\n        height: auto;\r\n        padding: 16px;\r\n    }\r\n    @include smartphone-horizontal {\r\n        align-items: normal;\r\n        flex-direction: column;\r\n        height: auto;\r\n        padding: 16px;\r\n        border-radius: 10px;\r\n    }\r\n    @include smartphone-vertical {\r\n        align-items: normal;\r\n        flex-direction: column;\r\n        height: auto;\r\n        padding: 16px 12px;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    &-wrapper {\r\n        display: flex;\r\n        align-items: center;\r\n        min-width: 0;\r\n        height: 94px;\r\n        @include smartphone-horizontal {\r\n            height: 80px;\r\n        }\r\n        @include smartphone-vertical {\r\n            height: 70px;\r\n        }\r\n    }\r\n\r\n    &__icon {\r\n        flex-shrink: 0;\r\n        min-width: 94px;\r\n        height: 100%;\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n        // 読み込まれるまでのアイコンの背景\r\n        background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n        // 低解像度で表示する画像がぼやけないようにする\r\n        // ref: https://sho-log.com/chrome-image-blurred/\r\n        image-rendering: -webkit-optimize-contrast;\r\n        @include smartphone-horizontal {\r\n            min-width: 80px;\r\n        }\r\n        @include smartphone-vertical {\r\n            min-width: 70px;\r\n        }\r\n    }\r\n\r\n    &__info {\r\n        display: flex;\r\n        flex-direction: column;\r\n        min-width: 0;\r\n        margin-left: 20px;\r\n        margin-right: 12px;\r\n        @include smartphone-vertical {\r\n            margin-left: 12px !important;\r\n            margin-right: 0 !important;\r\n        }\r\n\r\n        &-name {\r\n            display: inline-flex;\r\n            align-items: center;\r\n            height: 33px;\r\n\r\n            &-text {\r\n                display: inline-block;\r\n                font-size: 23px;\r\n                color: var(--v-text-base);\r\n                font-weight: bold;\r\n                overflow: hidden;\r\n                white-space: nowrap;\r\n                text-overflow: ellipsis;  // はみ出た部分を … で省略\r\n                @include smartphone-horizontal {\r\n                    font-size: 21px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    font-size: 20px;\r\n                }\r\n            }\r\n        }\r\n\r\n        &-admin {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            flex-shrink: 0;\r\n            width: 52px;\r\n            height: 28px;\r\n            margin-left: 10px;\r\n            border-radius: 5px;\r\n            background: var(--v-secondary-base);\r\n            font-size: 14px;\r\n            font-weight: 500;\r\n            line-height: 2;\r\n            @include smartphone-horizontal {\r\n                width: 45px;\r\n                height: 24px;\r\n                border-radius: 4px;\r\n                font-size: 11.5px;\r\n            }\r\n            @include smartphone-vertical {\r\n                width: 45px;\r\n                height: 24px;\r\n                border-radius: 4px;\r\n                font-size: 11.5px;\r\n            }\r\n        }\r\n\r\n        &-id {\r\n            display: inline-block;\r\n            margin-top: 2px;\r\n            color: var(--v-text-darken1);\r\n            font-size: 16px;\r\n            @include smartphone-horizontal {\r\n                font-size: 14.5px;\r\n            }\r\n            @include smartphone-vertical {\r\n                font-size: 14.5px;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__login {\r\n        border-radius: 7px;\r\n        font-size: 16px;\r\n        letter-spacing: 0;\r\n        @include tablet-horizontal {\r\n            height: 50px !important;\r\n            margin-top: 8px;\r\n            margin-right: auto;\r\n            font-size: 14.5px;\r\n        }\r\n        @include tablet-vertical {\r\n            height: 42px !important;\r\n            margin-top: 8px;\r\n            margin-right: auto;\r\n            font-size: 14.5px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            height: 42px !important;\r\n            margin-top: 8px;\r\n            margin-right: auto;\r\n            font-size: 14.5px;\r\n        }\r\n        @include smartphone-vertical {\r\n            height: 42px !important;\r\n            margin-top: 16px;\r\n            margin-right: auto;\r\n            font-size: 14.5px;\r\n        }\r\n    }\r\n}\r\n\r\n.account-register {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 28px;\r\n\r\n    &__heading {\r\n        font-size: 21px;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        font-feature-settings: \"palt\" 1;  // 文字詰め\r\n        letter-spacing: 0.04em;  // 字間を少し空ける\r\n        @include smartphone-horizontal {\r\n            font-size: 19px;\r\n        }\r\n        @include smartphone-vertical {\r\n            font-size: 18px;\r\n        }\r\n    }\r\n\r\n    &__feature {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-row-gap: 18px;\r\n        grid-column-gap: 16px;\r\n        margin-top: 28px;\r\n        @include tablet-horizontal {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        @include tablet-vertical {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        @include smartphone-horizontal {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        @include smartphone-vertical {\r\n            grid-template-columns: 1fr;\r\n        }\r\n\r\n        .account-feature {\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            &__icon {\r\n                width: 46px;\r\n                height: 46px;\r\n                flex-shrink: 0;\r\n                margin-right: 16px;\r\n                color: var(--v-secondary-lighten1);\r\n            }\r\n\r\n            &__info {\r\n                display: flex;\r\n                flex-direction: column;\r\n                &-heading {\r\n                    font-size: 15px;\r\n                }\r\n                &-text {\r\n                    margin-top: 3px;\r\n                    color: var(--v-text-darken1);\r\n                    font-size: 12.5px;\r\n                    line-height: 1.65;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &__description {\r\n        margin-top: 32px;\r\n        font-size: 15px;\r\n        line-height: 1.7;\r\n        text-align: center;\r\n        br.smartphone-vertical-only {\r\n            display: none;\r\n        }\r\n        @include tablet-horizontal {\r\n            font-size: 12.5px;\r\n        }\r\n        @include tablet-vertical {\r\n            font-size: 10.5px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            font-size: 12.5px;\r\n        }\r\n        @include smartphone-horizontal-short {\r\n            font-size: 10.5px;\r\n        }\r\n        @include smartphone-vertical {\r\n            font-size: 12.5px;\r\n            br.smartphone-vertical-only {\r\n                display: inline;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__button {\r\n        margin-top: 24px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        border-radius: 7px;\r\n        font-size: 16px;\r\n        letter-spacing: 0;\r\n        @include tablet-vertical {\r\n            height: 42px !important;\r\n            font-size: 14.5px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            height: 42px !important;\r\n            font-size: 14.5px;\r\n        }\r\n        @include smartphone-vertical {\r\n            max-width: 210px !important;\r\n            height: 42px !important;\r\n            font-size: 15px;\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Account.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Account.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Account.vue?vue&type=template&id=3eeb94f6&scoped=true\"\nimport script from \"./Account.vue?vue&type=script&lang=ts\"\nexport * from \"./Account.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Account.vue?vue&type=style&index=0&id=3eeb94f6&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3eeb94f6\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:subtitles-16-filled\",\"width\":\"25px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"字幕\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item\"},[_c('label',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕のフォント\")]),_c('label',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーで字幕表示をオンにしているときの、字幕のフォントを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.caption_font},model:{value:(_vm.settingsStore.settings.caption_font),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"caption_font\", $$v)},expression:\"settingsStore.settings.caption_font\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"always_border_caption_text\"}},[_vm._v(\"字幕の文字を常に縁取りする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"always_border_caption_text\"}},[_vm._v(\" 字幕表示時、縁取りをオンにすると、字幕が見やすくきれいになります。とくに理由がなければ、オンにしておくのがおすすめです。\"),_c('br'),_vm._v(\" この設定がオフのときも、字幕データ側で縁取りが指定されていれば、オンのときと同様に縁取り付きで描画されます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"always_border_caption_text\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.always_border_caption_text),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"always_border_caption_text\", $$v)},expression:\"settingsStore.settings.always_border_caption_text\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"specify_caption_opacity\"}},[_vm._v(\"字幕の不透明度を指定する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"specify_caption_opacity\"}},[_vm._v(\" 字幕表示時、不透明度を自分で指定するか設定できます。\"),_c('br'),_vm._v(\" この設定がオフのときは、字幕データ側で指定されている不透明度で描画します。とくに理由がなければ、オフにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"specify_caption_opacity\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.specify_caption_opacity),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"specify_caption_opacity\", $$v)},expression:\"settingsStore.settings.specify_caption_opacity\"}})],1),_c('div',{staticClass:\"settings__item\",class:{'settings__item--disabled': _vm.settingsStore.settings.specify_caption_opacity === false}},[_c('label',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕の不透明度\")]),_c('label',{staticClass:\"settings__item-label\"},[_vm._v(\" 上の [字幕の不透明度を指定する] をオンに設定したときのみ有効です。不透明度を 0 に設定すれば、字幕の背景を非表示にできます。\"),_c('br')]),_c('div',{ref:\"caption_opacity\",staticClass:\"settings__item-label\"},[_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"min\":0,\"max\":1,\"step\":0.05,\"disabled\":_vm.settingsStore.settings.specify_caption_opacity === false},model:{value:(_vm.settingsStore.settings.caption_opacity),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"caption_opacity\", $$v)},expression:\"settingsStore.settings.caption_opacity\"}})],1)]),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_show_superimpose\"}},[_vm._v(\"テレビをみるときに文字スーパーを表示する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_show_superimpose\"}},[_vm._v(\" 文字スーパーは、緊急地震速報の赤テロップや、NHK BS のニュース速報のテロップなどで利用されています。とくに理由がなければ、オンにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_show_superimpose\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.tv_show_superimpose),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_show_superimpose\", $$v)},expression:\"settingsStore.settings.tv_show_superimpose\"}})],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- ベース画面の中にそれぞれの設定画面で異なる部分を記述する -->\r\n    <SettingsBase>\r\n        <h2 class=\"settings__heading\">\r\n            <router-link v-ripple class=\"settings__back-button\" to=\"/settings/\">\r\n                <Icon icon=\"fluent:arrow-left-12-filled\" width=\"25px\" />\r\n            </router-link>\r\n            <Icon icon=\"fluent:subtitles-16-filled\" width=\"25px\" />\r\n            <span class=\"ml-3\">字幕</span>\r\n        </h2>\r\n        <div class=\"settings__content\">\r\n            <div class=\"settings__item\">\r\n                <label class=\"settings__item-heading\">字幕のフォント</label>\r\n                <label class=\"settings__item-label\">\r\n                    プレイヤーで字幕表示をオンにしているときの、字幕のフォントを設定します。<br>\r\n                </label>\r\n                <v-select class=\"settings__item-form\" outlined hide-details :dense=\"is_form_dense\"\r\n                    :items=\"caption_font\" v-model=\"settingsStore.settings.caption_font\">\r\n                </v-select>\r\n            </div>\r\n            <div class=\"settings__item settings__item--switch\">\r\n                <label class=\"settings__item-heading\" for=\"always_border_caption_text\">字幕の文字を常に縁取りする</label>\r\n                <label class=\"settings__item-label\" for=\"always_border_caption_text\">\r\n                    字幕表示時、縁取りをオンにすると、字幕が見やすくきれいになります。とくに理由がなければ、オンにしておくのがおすすめです。<br>\r\n                    この設定がオフのときも、字幕データ側で縁取りが指定されていれば、オンのときと同様に縁取り付きで描画されます。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"always_border_caption_text\" inset hide-details\r\n                    v-model=\"settingsStore.settings.always_border_caption_text\">\r\n                </v-switch>\r\n            </div>\r\n            <div class=\"settings__item settings__item--switch\">\r\n                <label class=\"settings__item-heading\" for=\"specify_caption_opacity\">字幕の不透明度を指定する</label>\r\n                <label class=\"settings__item-label\" for=\"specify_caption_opacity\">\r\n                    字幕表示時、不透明度を自分で指定するか設定できます。<br>\r\n                    この設定がオフのときは、字幕データ側で指定されている不透明度で描画します。とくに理由がなければ、オフにしておくのがおすすめです。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"specify_caption_opacity\" inset hide-details\r\n                    v-model=\"settingsStore.settings.specify_caption_opacity\">\r\n                </v-switch>\r\n            </div>\r\n            <div class=\"settings__item\" :class=\"{'settings__item--disabled': settingsStore.settings.specify_caption_opacity === false}\">\r\n                <label class=\"settings__item-heading\">字幕の不透明度</label>\r\n                <label class=\"settings__item-label\">\r\n                    上の [字幕の不透明度を指定する] をオンに設定したときのみ有効です。不透明度を 0 に設定すれば、字幕の背景を非表示にできます。<br>\r\n                </label>\r\n                <div class=\"settings__item-label\" ref=\"caption_opacity\">\r\n                    <v-slider class=\"settings__item-form\" ticks=\"always\" thumb-label hide-details\r\n                        :min=\"0\" :max=\"1\" :step=\"0.05\" v-model=\"settingsStore.settings.caption_opacity\"\r\n                        :disabled=\"settingsStore.settings.specify_caption_opacity === false\">\r\n                    </v-slider>\r\n                </div>\r\n            </div>\r\n            <v-divider class=\"mt-6\"></v-divider>\r\n            <div class=\"settings__item settings__item--switch\">\r\n                <label class=\"settings__item-heading\" for=\"tv_show_superimpose\">テレビをみるときに文字スーパーを表示する</label>\r\n                <label class=\"settings__item-label\" for=\"tv_show_superimpose\">\r\n                    文字スーパーは、緊急地震速報の赤テロップや、NHK BS のニュース速報のテロップなどで利用されています。とくに理由がなければ、オンにしておくのがおすすめです。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"tv_show_superimpose\" inset hide-details\r\n                    v-model=\"settingsStore.settings.tv_show_superimpose\">\r\n                </v-switch>\r\n            </div>\r\n        </div>\r\n    </SettingsBase>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils from '@/utils';\r\nimport SettingsBase from '@/views/Settings/Base.vue';\r\n\r\nexport default Vue.extend({\r\n    name: 'Settings-Caption',\r\n    components: {\r\n        SettingsBase,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // フォームを小さくするかどうか\r\n            is_form_dense: Utils.isSmartphoneHorizontal(),\r\n\r\n            // 字幕のフォントの選択肢\r\n            caption_font: [\r\n                {text: 'Windows TV ゴシック', value: 'Windows TV Gothic'},\r\n                {text: 'Windows TV 丸ゴシック', value: 'Windows TV MaruGothic'},\r\n                {text: 'Windows TV 太丸ゴシック', value: 'Windows TV FutoMaruGothic'},\r\n                {text: 'ヒラギノTV丸ゴ', value: 'Hiragino TV Sans Rd S'},\r\n                {text: '新丸ゴ ARIB', value: 'TT-ShinMGo-regular'},\r\n                {text: 'Rounded M+ 1m for ARIB', value: 'Rounded M+ 1m for ARIB'},\r\n                {text: 'Noto Sans JP', value: 'Noto Sans JP'},\r\n                {text: 'デフォルトのフォント', value: 'sans-serif'},\r\n            ],\r\n        };\r\n    },\r\n    computed: {\r\n        // SettingsStore に this.settingsStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useSettingsStore),\r\n    }\r\n});\r\n\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Caption.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Caption.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Caption.vue?vue&type=template&id=2bbe6b86\"\nimport script from \"./Caption.vue?vue&type=script&lang=ts\"\nexport * from \"./Caption.vue?vue&type=script&lang=ts\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:image-multiple-16-filled\",\"width\":\"26px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"キャプチャ\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"capture_copy_to_clipboard\"}},[_vm._v(\"キャプチャをクリップボードにコピーする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"capture_copy_to_clipboard\"}},[_vm._v(\" この設定をオンにすると、撮ったキャプチャ画像がクリップボードにもコピーされます。\"),_c('br'),_vm._v(\" クリップボードの履歴をサポートしていない OS では、この設定をオンにしてキャプチャを撮ると、以前のクリップボードが上書きされます。注意してください。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"capture_copy_to_clipboard\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.capture_copy_to_clipboard),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"capture_copy_to_clipboard\", $$v)},expression:\"settingsStore.settings.capture_copy_to_clipboard\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"キャプチャの保存先\")]),_c('div',{staticClass:\"settings__item-label\"},[_c('p',[_vm._v(\" キャプチャした画像をブラウザでダウンロードするか、KonomiTV サーバーにアップロードするかを設定します。\"),_c('br'),_vm._v(\" ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方同時に行うこともできます。\"),_c('br')]),_c('p',[_vm._v(\" ブラウザでダウンロードすると、視聴中のデバイスのダウンロードフォルダに保存されます。\"),_c('br'),_vm._v(\" 視聴中のデバイスにそのまま保存されるためシンプルですが、保存先のフォルダを変更できないこと、PC 版 Chrome では毎回ダウンロードバーが表示されてしまったり、iOS Safari (PWA モード) ではダウンロードするとファイル概要画面が表示され再生が中断してしまったりなど、視聴に支障することがデメリットです (将来的には、iOS / Android アプリ版や拡張機能などで解消される予定) 。\"),_c('br')]),_c('p',[_vm._v(\" KonomiTV サーバーにアップロードすると、サーバー設定で指定されたキャプチャ保存フォルダに保存されます。視聴したデバイスにかかわらず、今までに撮ったキャプチャをひとつのフォルダにまとめて保存できます。\"),_c('br'),_vm._v(\" 他のデバイスでキャプチャを見るにはキャプチャ保存フォルダをネットワークに共有する必要があること、スマホ・タブレットではネットワーク上のフォルダへのアクセスがやや面倒なことがデメリットです。(将来的には、保存フォルダ内のキャプチャを Google フォトのように表示する機能を追加予定)\"),_c('br')])]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.capture_save_mode},model:{value:(_vm.settingsStore.settings.capture_save_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"capture_save_mode\", $$v)},expression:\"settingsStore.settings.capture_save_mode\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕表示時のキャプチャの保存モード\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 字幕表示時、キャプチャした画像に字幕を合成するかを設定します。\"),_c('br'),_vm._v(\" 映像のみのキャプチャと、字幕を合成したキャプチャを両方同時に保存することもできます。\"),_c('br'),_vm._v(\" なお、字幕非表示時は、常に映像のみ (+コメント付きキャプチャではコメントを合成して) 保存されます。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.capture_caption_mode},model:{value:(_vm.settingsStore.settings.capture_caption_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"capture_caption_mode\", $$v)},expression:\"settingsStore.settings.capture_caption_mode\"}})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- ベース画面の中にそれぞれの設定画面で異なる部分を記述する -->\r\n    <SettingsBase>\r\n        <h2 class=\"settings__heading\">\r\n            <router-link v-ripple class=\"settings__back-button\" to=\"/settings/\">\r\n                <Icon icon=\"fluent:arrow-left-12-filled\" width=\"25px\" />\r\n            </router-link>\r\n            <Icon icon=\"fluent:image-multiple-16-filled\" width=\"26px\" />\r\n            <span class=\"ml-2\">キャプチャ</span>\r\n        </h2>\r\n        <div class=\"settings__content\">\r\n            <div class=\"settings__item settings__item--switch settings__item--sync-disabled\">\r\n                <label class=\"settings__item-heading\" for=\"capture_copy_to_clipboard\">キャプチャをクリップボードにコピーする</label>\r\n                <label class=\"settings__item-label\" for=\"capture_copy_to_clipboard\">\r\n                    この設定をオンにすると、撮ったキャプチャ画像がクリップボードにもコピーされます。<br>\r\n                    クリップボードの履歴をサポートしていない OS では、この設定をオンにしてキャプチャを撮ると、以前のクリップボードが上書きされます。注意してください。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"capture_copy_to_clipboard\" inset hide-details\r\n                    v-model=\"settingsStore.settings.capture_copy_to_clipboard\">\r\n                </v-switch>\r\n            </div>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">キャプチャの保存先</div>\r\n                <div class=\"settings__item-label\">\r\n                    <p>\r\n                        キャプチャした画像をブラウザでダウンロードするか、KonomiTV サーバーにアップロードするかを設定します。<br>\r\n                        ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方同時に行うこともできます。<br>\r\n                    </p>\r\n                    <p>\r\n                        ブラウザでダウンロードすると、視聴中のデバイスのダウンロードフォルダに保存されます。<br>\r\n                        視聴中のデバイスにそのまま保存されるためシンプルですが、保存先のフォルダを変更できないこと、PC 版 Chrome では毎回ダウンロードバーが表示されてしまったり、iOS Safari (PWA モード) ではダウンロードするとファイル概要画面が表示され再生が中断してしまったりなど、視聴に支障することがデメリットです (将来的には、iOS / Android アプリ版や拡張機能などで解消される予定) 。<br>\r\n                    </p>\r\n                    <p>\r\n                        KonomiTV サーバーにアップロードすると、サーバー設定で指定されたキャプチャ保存フォルダに保存されます。視聴したデバイスにかかわらず、今までに撮ったキャプチャをひとつのフォルダにまとめて保存できます。<br>\r\n                        他のデバイスでキャプチャを見るにはキャプチャ保存フォルダをネットワークに共有する必要があること、スマホ・タブレットではネットワーク上のフォルダへのアクセスがやや面倒なことがデメリットです。(将来的には、保存フォルダ内のキャプチャを Google フォトのように表示する機能を追加予定)<br>\r\n                    </p>\r\n                </div>\r\n                <v-select class=\"settings__item-form\" outlined hide-details :dense=\"is_form_dense\"\r\n                    :items=\"capture_save_mode\" v-model=\"settingsStore.settings.capture_save_mode\">\r\n                </v-select>\r\n            </div>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">字幕表示時のキャプチャの保存モード</div>\r\n                <div class=\"settings__item-label\">\r\n                    字幕表示時、キャプチャした画像に字幕を合成するかを設定します。<br>\r\n                    映像のみのキャプチャと、字幕を合成したキャプチャを両方同時に保存することもできます。<br>\r\n                    なお、字幕非表示時は、常に映像のみ (+コメント付きキャプチャではコメントを合成して) 保存されます。<br>\r\n                </div>\r\n                <v-select class=\"settings__item-form\" outlined hide-details :dense=\"is_form_dense\"\r\n                    :items=\"capture_caption_mode\" v-model=\"settingsStore.settings.capture_caption_mode\">\r\n                </v-select>\r\n            </div>\r\n        </div>\r\n    </SettingsBase>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils from '@/utils';\r\nimport SettingsBase from '@/views/Settings/Base.vue';\r\n\r\nexport default Vue.extend({\r\n    name: 'Settings-Capture',\r\n    components: {\r\n        SettingsBase,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // フォームを小さくするかどうか\r\n            is_form_dense: Utils.isSmartphoneHorizontal(),\r\n\r\n            // キャプチャの保存先の選択肢\r\n            capture_save_mode: [\r\n                {text: 'ブラウザでダウンロード', value: 'Browser'},\r\n                {text: 'KonomiTV サーバーにアップロード', value: 'UploadServer'},\r\n                {text: 'ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方行う', value: 'Both'},\r\n            ],\r\n\r\n            // 字幕が表示されているときのキャプチャの保存モードの選択肢\r\n            capture_caption_mode: [\r\n                {text: '映像のみのキャプチャを保存する', value: 'VideoOnly'},\r\n                {text: '字幕を合成したキャプチャを保存する', value: 'CompositingCaption'},\r\n                {text: '映像のみのキャプチャと、字幕を合成したキャプチャを両方保存する', value: 'Both'},\r\n            ],\r\n        };\r\n    },\r\n    computed: {\r\n        // SettingsStore に this.settingsStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useSettingsStore),\r\n    }\r\n});\r\n\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Capture.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Capture.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Capture.vue?vue&type=template&id=259695c2\"\nimport script from \"./Capture.vue?vue&type=script&lang=ts\"\nexport * from \"./Capture.vue?vue&type=script&lang=ts\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('svg',{attrs:{\"width\":\"27px\",\"height\":\"27px\",\"viewBox\":\"0 0 512 512\"}},[_c('path',{attrs:{\"fill\":\"currentColor\",\"d\":\"M248.039 381.326L355.039 67.8258C367.539 28.3257 395.039 34.3258 406.539 34.3258C431.039 34.3258 453.376 61.3258 441.039 96.8258C362.639 322.426 343.539 375.326 340.539 384.826C338.486 391.326 342.039 391.326 345.539 391.326C377.039 391.326 386.539 418.326 386.539 435.326C386.539 458.826 371.539 477.326 350.039 477.326H214.539C179.039 477.326 85.8269 431.3 88.0387 335.826C91.0387 206.326 192.039 183.326 243.539 183.326H296.539L265.539 272.326H243.539C185.539 272.326 174.113 314.826 176.039 334.326C180.039 374.826 215.039 389.814 237.039 390.326C244.539 390.5 246.039 386.826 248.039 381.326Z\"}})]),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"データ放送\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_show_data_broadcasting\"}},[_vm._v(\"テレビをみるときにデータ放送を表示する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_show_data_broadcasting\"}},[_vm._v(\" この設定をオンにすると、テレビをみるときにデータ放送機能を利用できます。\"),_c('br'),_vm._v(\" データ放送画面自体のオン/オフは、視聴画面右側のパネルからリモコンを表示した上で、リモコンの d ボタンから切り替えられます。\"),_c('br')]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_show_data_broadcasting\"}},[_vm._v(\" データ放送機能をオンにすると、視聴時の負荷が若干高くなります。データ放送を利用しない場合や、スペックの低い Android デバイスで動作が重い場合は、オフに設定してみてください。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_show_data_broadcasting\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.tv_show_data_broadcasting),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_show_data_broadcasting\", $$v)},expression:\"settingsStore.settings.tv_show_data_broadcasting\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('v-form',{ref:\"data_broadcasting_zip_code\",staticClass:\"settings__item settings__item--sync-disabled\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('label',{staticClass:\"settings__item-heading\"},[_vm._v(\"お住まいの郵便番号\")]),_c('label',{staticClass:\"settings__item-label\"},[_vm._v(\" ここで設定した郵便番号をもとに、データ放送の地域情報（ニュース・天気予報など）が表示されます。\"),_c('br'),_vm._v(\" 設定しない場合、データ放送の一部のコンテンツが利用できないことがあります。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"郵便番号\",\"dense\":_vm.is_form_dense,\"rules\":[_vm.data_broadcasting_zip_code_validation]},model:{value:(_vm.data_broadcasting_zip_code),callback:function ($$v) {_vm.data_broadcasting_zip_code=$$v},expression:\"data_broadcasting_zip_code\"}})],1),_c('div',{staticClass:\"settings__item settings__item--sync-disabled mt-0\"},[_c('label',{staticClass:\"settings__item-heading\"},[_vm._v(\"お住まいの都道府県\")]),_c('label',{staticClass:\"settings__item-label\"},[_vm._v(\" ここで設定した都道府県をもとに、データ放送の地域情報（ニュース・天気予報など）が表示されます。\"),_c('br'),_vm._v(\" 設定しない場合、データ放送の一部のコンテンツが利用できないことがあります。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.data_broadcasting_prefectures},model:{value:(_vm.data_broadcasting_prefecture),callback:function ($$v) {_vm.data_broadcasting_prefecture=$$v},expression:\"data_broadcasting_prefecture\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"データ放送の保存データをリセット\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" このデバイス（ブラウザ）に保存されているデータ放送の保存データを、初期状態にリセット (消去) できます。\"),_c('br'),_vm._v(\" 保存データには、データ放送内のミニゲームの得点データや、設定データなどが含まれます。\"),_c('br'),_vm._v(\" 保存データをリセットすると、元に戻すことはできません。十分ご注意ください。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.resetNVRAMSettings()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"material-symbols:device-reset-rounded\",\"height\":\"23px\"}}),_vm._v(\"保存データをリセット \")],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- ベース画面の中にそれぞれの設定画面で異なる部分を記述する -->\r\n    <SettingsBase>\r\n        <h2 class=\"settings__heading\">\r\n            <router-link v-ripple class=\"settings__back-button\" to=\"/settings/\">\r\n                <Icon icon=\"fluent:arrow-left-12-filled\" width=\"25px\" />\r\n            </router-link>\r\n            <svg width=\"27px\" height=\"27px\" viewBox=\"0 0 512 512\">\r\n                <path fill=\"currentColor\" d=\"M248.039 381.326L355.039 67.8258C367.539 28.3257 395.039 34.3258 406.539 34.3258C431.039 34.3258 453.376 61.3258 441.039 96.8258C362.639 322.426 343.539 375.326 340.539 384.826C338.486 391.326 342.039 391.326 345.539 391.326C377.039 391.326 386.539 418.326 386.539 435.326C386.539 458.826 371.539 477.326 350.039 477.326H214.539C179.039 477.326 85.8269 431.3 88.0387 335.826C91.0387 206.326 192.039 183.326 243.539 183.326H296.539L265.539 272.326H243.539C185.539 272.326 174.113 314.826 176.039 334.326C180.039 374.826 215.039 389.814 237.039 390.326C244.539 390.5 246.039 386.826 248.039 381.326Z\" />\r\n            </svg>\r\n            <span class=\"ml-2\">データ放送</span>\r\n        </h2>\r\n        <div class=\"settings__content\">\r\n            <div class=\"settings__item settings__item--switch settings__item--sync-disabled\">\r\n                <label class=\"settings__item-heading\" for=\"tv_show_data_broadcasting\">テレビをみるときにデータ放送を表示する</label>\r\n                <label class=\"settings__item-label\" for=\"tv_show_data_broadcasting\">\r\n                    この設定をオンにすると、テレビをみるときにデータ放送機能を利用できます。<br>\r\n                    データ放送画面自体のオン/オフは、視聴画面右側のパネルからリモコンを表示した上で、リモコンの d ボタンから切り替えられます。<br>\r\n                </label>\r\n                <label class=\"settings__item-label\" for=\"tv_show_data_broadcasting\">\r\n                    データ放送機能をオンにすると、視聴時の負荷が若干高くなります。データ放送を利用しない場合や、スペックの低い Android デバイスで動作が重い場合は、オフに設定してみてください。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"tv_show_data_broadcasting\" inset hide-details\r\n                    v-model=\"settingsStore.settings.tv_show_data_broadcasting\">\r\n                </v-switch>\r\n            </div>\r\n            <v-divider class=\"mt-6\"></v-divider>\r\n            <v-form class=\"settings__item settings__item--sync-disabled\" ref=\"data_broadcasting_zip_code\" @submit.prevent>\r\n                <label class=\"settings__item-heading\">お住まいの郵便番号</label>\r\n                <label class=\"settings__item-label\">\r\n                    ここで設定した郵便番号をもとに、データ放送の地域情報（ニュース・天気予報など）が表示されます。<br>\r\n                    設定しない場合、データ放送の一部のコンテンツが利用できないことがあります。<br>\r\n                </label>\r\n                <v-text-field class=\"settings__item-form\" outlined placeholder=\"郵便番号\" :dense=\"is_form_dense\"\r\n                    :rules=\"[data_broadcasting_zip_code_validation]\" v-model=\"data_broadcasting_zip_code\">\r\n                </v-text-field>\r\n            </v-form>\r\n            <div class=\"settings__item settings__item--sync-disabled mt-0\">\r\n                <label class=\"settings__item-heading\">お住まいの都道府県</label>\r\n                <label class=\"settings__item-label\">\r\n                    ここで設定した都道府県をもとに、データ放送の地域情報（ニュース・天気予報など）が表示されます。<br>\r\n                    設定しない場合、データ放送の一部のコンテンツが利用できないことがあります。<br>\r\n                </label>\r\n                <v-select class=\"settings__item-form\" outlined hide-details :dense=\"is_form_dense\"\r\n                    :items=\"data_broadcasting_prefectures\" v-model=\"data_broadcasting_prefecture\">\r\n                </v-select>\r\n            </div>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading error--text text--lighten-1\">データ放送の保存データをリセット</div>\r\n                <div class=\"settings__item-label\">\r\n                    このデバイス（ブラウザ）に保存されているデータ放送の保存データを、初期状態にリセット (消去) できます。<br>\r\n                    保存データには、データ放送内のミニゲームの得点データや、設定データなどが含まれます。<br>\r\n                    保存データをリセットすると、元に戻すことはできません。十分ご注意ください。<br>\r\n                </div>\r\n            </div>\r\n            <v-btn class=\"settings__save-button error mt-5\" depressed @click=\"resetNVRAMSettings()\">\r\n                <Icon icon=\"material-symbols:device-reset-rounded\" class=\"mr-2\" height=\"23px\" />保存データをリセット\r\n            </v-btn>\r\n        </div>\r\n    </SettingsBase>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils from '@/utils';\r\nimport SettingsBase from '@/views/Settings/Base.vue';\r\n\r\n// データ放送の NVRAM のうち、郵便番号/都道府県設定の保存に使う LocalStorage キーのプレフィックス\r\nconst NVRAM_LOCAL_STORAGE_PREFIX = 'KonomiTV-BMLBrowser_nvram_prefix=receiverinfo%2F';\r\n\r\nexport default Vue.extend({\r\n    name: 'Settings-DataBroadcasting',\r\n    components: {\r\n        SettingsBase,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // フォームを小さくするかどうか\r\n            is_form_dense: Utils.isSmartphoneHorizontal(),\r\n\r\n            // データ放送向け郵便番号設定\r\n            data_broadcasting_zip_code: '' as string,\r\n\r\n            // データ放送向け郵便番号（日本）のバリデーション関数\r\n            data_broadcasting_zip_code_validation: (value: string) => {\r\n                if (value === '') {\r\n                    return true;\r\n                }\r\n                if (value.match(/^[0-9]{3}-[0-9]{4}$/) === null) {\r\n                    return '郵便番号は「000-0000」の形式で入力してください。';\r\n                }\r\n                return true;\r\n            },\r\n\r\n            // データ放送向け都道府県設定\r\n            data_broadcasting_prefecture: '255-0b0' as string,\r\n            data_broadcasting_prefectures: [\r\n                {text: '未設定', value: '255-0b0'},\r\n                {text: '西北海道', value: '2-0b000101101011'},\r\n                {text: '東北海道', value: '1-0b000101101011'},\r\n                {text: '青森県', value: '3-0b010001100111'},\r\n                {text: '岩手県', value: '4-0b010111010100'},\r\n                {text: '宮城県', value: '5-0b011101011000'},\r\n                {text: '秋田県', value: '6-0b101011000110'},\r\n                {text: '山形県', value: '7-0b111001001100'},\r\n                {text: '福島県', value: '8-0b000110101110'},\r\n                {text: '茨城県', value: '9-0b110001101001'},\r\n                {text: '栃木県', value: '10-0b111000111000'},\r\n                {text: '群馬県', value: '11-0b100110001011'},\r\n                {text: '埼玉県', value: '12-0b011001001011'},\r\n                {text: '千葉県', value: '13-0b000111000111'},\r\n                {text: '東京都 (島部を除く)', value: '14-0b101010101100'},\r\n                {text: '東京都島部 (伊豆・小笠原諸島)', value: '49-0b101010101100'},\r\n                {text: '神奈川県', value: '15-0b010101101100'},\r\n                {text: '新潟県', value: '16-0b010011001110'},\r\n                {text: '富山県', value: '17-0b010100111001'},\r\n                {text: '石川県', value: '18-0b011010100110'},\r\n                {text: '福井県', value: '19-0b100100101101'},\r\n                {text: '山梨県', value: '20-0b110101001010'},\r\n                {text: '長野県', value: '21-0b100111010010'},\r\n                {text: '岐阜県', value: '22-0b101001100101'},\r\n                {text: '静岡県', value: '23-0b101001011010'},\r\n                {text: '愛知県', value: '24-0b100101100110'},\r\n                {text: '三重県', value: '25-0b001011011100'},\r\n                {text: '滋賀県', value: '26-0b110011100100'},\r\n                {text: '京都府', value: '27-0b010110011010'},\r\n                {text: '大阪府', value: '28-0b110010110010'},\r\n                {text: '兵庫県', value: '29-0b011001110100'},\r\n                {text: '奈良県', value: '30-0b101010010011'},\r\n                {text: '和歌山県', value: '31-0b001110010110'},\r\n                {text: '鳥取県', value: '32-0b110100100011'},\r\n                {text: '島根県', value: '33-0b001100011011'},\r\n                {text: '岡山県', value: '34-0b001010110101'},\r\n                {text: '広島県', value: '35-0b101100110001'},\r\n                {text: '山口県', value: '36-0b101110011000'},\r\n                {text: '徳島県', value: '37-0b111001100010'},\r\n                {text: '香川県', value: '38-0b100110110100'},\r\n                {text: '愛媛県', value: '39-0b000110011101'},\r\n                {text: '高知県', value: '40-0b001011100011'},\r\n                {text: '福岡県', value: '41-0b011000101101'},\r\n                {text: '佐賀県', value: '42-0b100101011001'},\r\n                {text: '長崎県', value: '43-0b101000101011'},\r\n                {text: '熊本県', value: '44-0b100010100111'},\r\n                {text: '大分県', value: '45-0b110010001101'},\r\n                {text: '宮崎県', value: '46-0b110100011100'},\r\n                {text: '鹿児島県 (南西諸島を除く)', value: '47-0b110101000101'},\r\n                {text: '鹿児島県島部 (南西諸島の鹿児島県域)', value: '50-0b110101000101'},\r\n                {text: '沖縄県', value: '48-0b001101110010'},\r\n            ],\r\n        };\r\n    },\r\n    computed: {\r\n        // SettingsStore に this.settingsStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useSettingsStore),\r\n    },\r\n    created() {\r\n        // 郵便番号設定を LocalStorage から読み込む\r\n        const zip_code_raw = localStorage.getItem(`${NVRAM_LOCAL_STORAGE_PREFIX}zipcode`);\r\n        if (zip_code_raw) {\r\n            try {\r\n                // 3文字目と4文字目の間に - を挿入する\r\n                this.data_broadcasting_zip_code = window.atob(zip_code_raw);\r\n                this.data_broadcasting_zip_code = this.data_broadcasting_zip_code.slice(0, 3) + '-' + this.data_broadcasting_zip_code.slice(3);\r\n            } catch (error) {\r\n                // 何もしない\r\n            }\r\n        }\r\n        // 都道府県設定を LocalStorage から読み込む\r\n        // 現在設定されている都道府県を特定するだけなら regioncode は不要なので、省略している\r\n        const prefecture_raw = localStorage.getItem(`${NVRAM_LOCAL_STORAGE_PREFIX}prefecture`);\r\n        if (prefecture_raw) {\r\n            try {\r\n                const prefecture = window.atob(prefecture_raw).charCodeAt(0);\r\n                for (const item of this.data_broadcasting_prefectures) {\r\n                    if (item.value.startsWith(`${prefecture}-`)) {\r\n                        this.data_broadcasting_prefecture = item.value;\r\n                        break;\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                // 何もしない\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        data_broadcasting_zip_code(new_value: string) {\r\n            // バリデーションチェック\r\n            if ((this.$refs.data_broadcasting_zip_code as any).validate() === false) {\r\n                return;\r\n            }\r\n            // 郵便番号設定を LocalStorage に保存する\r\n            if (new_value !== '') {\r\n                // - を除去してから Base64 エンコードする\r\n                const zip_code_raw = window.btoa(new_value.replace('-', ''));\r\n                localStorage.setItem(`${NVRAM_LOCAL_STORAGE_PREFIX}zipcode`, zip_code_raw);\r\n            } else {\r\n                // 未設定の場合は LocalStorage から削除する\r\n                localStorage.removeItem(`${NVRAM_LOCAL_STORAGE_PREFIX}zipcode`);\r\n            }\r\n        },\r\n        data_broadcasting_prefecture(new_value: string) {\r\n            // 都道府県設定を LocalStorage に保存する\r\n            if (new_value !== '255-0b0') {\r\n                const value = new_value.split('-0b');\r\n                const prefecture_number = parseInt(value[0]);\r\n                const prefecture_raw = window.btoa(String.fromCharCode(prefecture_number));\r\n                localStorage.setItem(`${NVRAM_LOCAL_STORAGE_PREFIX}prefecture`, prefecture_raw);\r\n                const region_code_number = parseInt(value[1], 2);  // 2進数の文字列を10進数の数値に変換する\r\n                const region_code_raw = window.btoa(String.fromCharCode(region_code_number >> 8, region_code_number & 0xff));\r\n                localStorage.setItem(`${NVRAM_LOCAL_STORAGE_PREFIX}regioncode`, region_code_raw);\r\n            } else {\r\n                // 未設定の場合は LocalStorage から削除する\r\n                localStorage.removeItem(`${NVRAM_LOCAL_STORAGE_PREFIX}prefecture`);\r\n                localStorage.removeItem(`${NVRAM_LOCAL_STORAGE_PREFIX}regioncode`);\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        resetNVRAMSettings() {\r\n            // KonomiTV-BMLBrowser_nvram_ から始まる LocalStorage の項目をすべて削除する\r\n            for (const key in localStorage) {\r\n                if (key.startsWith('KonomiTV-BMLBrowser_nvram_')) {\r\n                    localStorage.removeItem(key);\r\n                }\r\n            }\r\n            this.data_broadcasting_zip_code = '';\r\n            this.data_broadcasting_prefecture = '255-0b0';\r\n            this.$message.success('データ放送の保存データをリセットしました。');\r\n        }\r\n    }\r\n});\r\n\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DataBroadcasting.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DataBroadcasting.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./DataBroadcasting.vue?vue&type=template&id=22fd80a2\"\nimport script from \"./DataBroadcasting.vue?vue&type=script&lang=ts\"\nexport * from \"./DataBroadcasting.vue?vue&type=script&lang=ts\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"19px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"全般\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item settings__item--sync-disabled\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"テレビのデフォルトのストリーミング画質\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" テレビをライブストリーミングするときのデフォルトの画質を設定します。\"),_c('br'),_vm._v(\" ストリーミング画質はプレイヤーの設定からいつでも切り替えられます。\"),_c('br')]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" [1080p (60fps)] は、通常 30fps (60i) の映像を補間し、より滑らか（ぬるぬる）な映像で視聴できます！\"),_c('br'),_vm._v(\" [1080p (60fps)] で視聴するときは、サーバー設定の [利用するエンコーダー] をハードウェアエンコーダーに設定してください。FFmpeg (ソフトウェアエンコーダー) では、視聴に支障が出ることがあります。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tv_streaming_quality},model:{value:(_vm.settingsStore.settings.tv_streaming_quality),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_streaming_quality\", $$v)},expression:\"settingsStore.settings.tv_streaming_quality\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\",class:{'settings__item--disabled': _vm.PlayerUtils.isHEVCVideoSupported() === false}},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_data_saver_mode\"}},[_vm._v(\"テレビを通信節約モードで視聴する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_data_saver_mode\"}},[_vm._v(\" 通信節約モードでは、H.265 / HEVC という圧縮率の高いコーデックを使い、画質はほぼそのまま、通信量を通常の 1/2 程度に抑えながら視聴できます！\"),_c('br'),_vm._v(\" 通信節約モードで視聴するときは、サーバー設定の [利用するエンコーダー] をハードウェアエンコーダーに設定してください。FFmpeg (ソフトウェアエンコーダー) では、視聴に支障が出る可能性が高いです。\"),_c('br'),(_vm.PlayerUtils.isHEVCVideoSupported() === false && _vm.Utils.isFirefox() === false)?_c('p',{staticClass:\"mt-1 mb-0 error--text lighten-1\"},[_vm._v(\" このデバイスでは通信節約モードがサポートされていません。 \")]):_vm._e(),(_vm.PlayerUtils.isHEVCVideoSupported() === false && _vm.Utils.isFirefox() === true)?_c('p',{staticClass:\"mt-1 mb-0 error--text lighten-1\"},[_vm._v(\" お使いの Firefox ブラウザでは通信節約モードがサポートされていません。 \")]):_vm._e()]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_data_saver_mode\",\"inset\":\"\",\"hide-details\":\"\",\"disabled\":_vm.PlayerUtils.isHEVCVideoSupported() === false},model:{value:(_vm.settingsStore.settings.tv_data_saver_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_data_saver_mode\", $$v)},expression:\"settingsStore.settings.tv_data_saver_mode\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_low_latency_mode\"}},[_vm._v(\"テレビを低遅延で視聴する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_low_latency_mode\"}},[_vm._v(\" 低遅延ストリーミングをオンにすると、\"),_c('b',[_vm._v(\"放送波との遅延を最短 0.9 秒に抑えて視聴できます！\")]),_c('br'),_vm._v(\" また、約 3 秒以上遅延したときに少しだけ再生速度を早める (1.1x) ことで、滑らかにストリーミングの遅延を取り戻します。\"),_c('br'),_vm._v(\" 宅外視聴などのネットワークが不安定になりがちな環境では、低遅延ストリーミングをオフにしてみると、映像のカクつきを改善できるかもしれません。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_low_latency_mode\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.tv_low_latency_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_low_latency_mode\", $$v)},expression:\"settingsStore.settings.tv_low_latency_mode\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"デフォルトのパネルの表示状態\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 視聴画面を開いたときに、右側のパネルをどう表示するかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.panel_display_state},model:{value:(_vm.settingsStore.settings.panel_display_state),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"panel_display_state\", $$v)},expression:\"settingsStore.settings.panel_display_state\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"テレビをみるときにデフォルトで表示されるパネルのタブ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" テレビの視聴画面を開いたときに、右側のパネルで最初に表示されるタブを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tv_panel_active_tab},model:{value:(_vm.settingsStore.settings.tv_panel_active_tab),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_panel_active_tab\", $$v)},expression:\"settingsStore.settings.tv_panel_active_tab\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_show_superimpose\"}},[_vm._v(\"チャンネル選局のキーボードショートカットを \"+_vm._s(_vm.Utils.AltOrOption())+\" + 数字キー/テンキーに変更する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_show_superimpose\"}},[_vm._v(\" この設定をオンにすると、数字キーまたはテンキーに対応するリモコン番号（1～12）のチャンネルに切り替える際、\"+_vm._s(_vm.Utils.AltOrOption())+\" キーを同時に押す必要があります。\"),_c('br'),_vm._v(\" コメントやツイートを入力しようとして誤って数字キーを押してしまい、チャンネルが変わってしまう事態を避けたい方におすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_show_superimpose\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.tv_channel_selection_requires_alt_key),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_channel_selection_requires_alt_key\", $$v)},expression:\"settingsStore.settings.tv_channel_selection_requires_alt_key\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"設定をエクスポート\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" このデバイス（ブラウザ）に保存されている設定データを、エクスポート（ダウンロード）できます。\"),_c('br'),_vm._v(\" ダウンロードした設定データ (KonomiTV-Settings.json) は、[設定をインポート] からインポートできます。異なるサーバーの KonomiTV を同じ設定で使いたいときなどに使ってください。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button mt-4\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.exportSettings()}}},[_c('Icon',{staticClass:\"mr-3\",attrs:{\"icon\":\"fa6-solid:download\",\"height\":\"19px\"}}),_vm._v(\"設定をエクスポート \")],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"設定をインポート\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" [設定をエクスポート] でダウンロードした設定データを、このデバイス（ブラウザ）にインポートできます。\"),_c('br'),_vm._v(\" 設定をインポートすると、\"),_c('b',[_vm._v(\"現在のデバイス設定はすべて上書きされます。\")]),_vm._v(\"元に戻すことはできません。\"),_c('br'),_vm._v(\" 設定のデバイス間同期がオンのときは、\"),_c('b',[_vm._v(\"同期が有効なすべてのデバイスに反映されます。\")]),_vm._v(\"十分ご注意ください。\"),_c('br')]),_c('v-file-input',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"設定データ (KonomiTV-Settings.json) を選択\",\"dense\":_vm.is_form_dense,\"accept\":\"application/json\",\"prepend-icon\":\"\",\"prepend-inner-icon\":\"mdi-paperclip\"},model:{value:(_vm.import_settings_file),callback:function ($$v) {_vm.import_settings_file=$$v},expression:\"import_settings_file\"}})],1),_c('v-btn',{staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.importSettings()}}},[_c('Icon',{staticClass:\"mr-3\",attrs:{\"icon\":\"fa6-solid:upload\",\"height\":\"19px\"}}),_vm._v(\"設定をインポート \")],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"設定を初期状態にリセット\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" このデバイス（ブラウザ）に保存されている設定データを、初期状態のデフォルト値にリセットできます。\"),_c('br'),_vm._v(\" 設定をリセットすると、元に戻すことはできません。\"),_c('br'),_vm._v(\" 設定のデバイス間同期がオンのときは、\"),_c('b',[_vm._v(\"同期が有効なすべてのデバイスに反映されます。\")]),_vm._v(\"十分ご注意ください。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.resetSettings()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"material-symbols:device-reset-rounded\",\"height\":\"23px\"}}),_vm._v(\"設定をリセット \")],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- ベース画面の中にそれぞれの設定画面で異なる部分を記述する -->\r\n    <SettingsBase>\r\n        <h2 class=\"settings__heading\">\r\n            <router-link v-ripple class=\"settings__back-button\" to=\"/settings/\">\r\n                <Icon icon=\"fluent:arrow-left-12-filled\" width=\"25px\" />\r\n            </router-link>\r\n            <Icon icon=\"fa-solid:sliders-h\" width=\"19px\" />\r\n            <span class=\"ml-3\">全般</span>\r\n        </h2>\r\n        <div class=\"settings__content\">\r\n            <div class=\"settings__item settings__item--sync-disabled\">\r\n                <div class=\"settings__item-heading\">テレビのデフォルトのストリーミング画質</div>\r\n                <div class=\"settings__item-label\">\r\n                    テレビをライブストリーミングするときのデフォルトの画質を設定します。<br>\r\n                    ストリーミング画質はプレイヤーの設定からいつでも切り替えられます。<br>\r\n                </div>\r\n                <div class=\"settings__item-label\">\r\n                    [1080p (60fps)] は、通常 30fps (60i) の映像を補間し、より滑らか（ぬるぬる）な映像で視聴できます！<br>\r\n                    [1080p (60fps)] で視聴するときは、サーバー設定の [利用するエンコーダー] をハードウェアエンコーダーに設定してください。FFmpeg (ソフトウェアエンコーダー) では、視聴に支障が出ることがあります。<br>\r\n                </div>\r\n                <v-select class=\"settings__item-form\" outlined hide-details :dense=\"is_form_dense\"\r\n                    :items=\"tv_streaming_quality\" v-model=\"settingsStore.settings.tv_streaming_quality\">\r\n                </v-select>\r\n            </div>\r\n            <div class=\"settings__item settings__item--switch settings__item--sync-disabled\"\r\n                :class=\"{'settings__item--disabled': PlayerUtils.isHEVCVideoSupported() === false}\">\r\n                <label class=\"settings__item-heading\" for=\"tv_data_saver_mode\">テレビを通信節約モードで視聴する</label>\r\n                <label class=\"settings__item-label\" for=\"tv_data_saver_mode\">\r\n                    通信節約モードでは、H.265 / HEVC という圧縮率の高いコーデックを使い、画質はほぼそのまま、通信量を通常の 1/2 程度に抑えながら視聴できます！<br>\r\n                    通信節約モードで視聴するときは、サーバー設定の [利用するエンコーダー] をハードウェアエンコーダーに設定してください。FFmpeg (ソフトウェアエンコーダー) では、視聴に支障が出る可能性が高いです。<br>\r\n                    <p class=\"mt-1 mb-0 error--text lighten-1\" v-if=\"PlayerUtils.isHEVCVideoSupported() === false && Utils.isFirefox() === false\">\r\n                        このデバイスでは通信節約モードがサポートされていません。\r\n                    </p>\r\n                    <p class=\"mt-1 mb-0 error--text lighten-1\" v-if=\"PlayerUtils.isHEVCVideoSupported() === false && Utils.isFirefox() === true\">\r\n                        お使いの Firefox ブラウザでは通信節約モードがサポートされていません。\r\n                    </p>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"tv_data_saver_mode\" inset hide-details\r\n                    v-model=\"settingsStore.settings.tv_data_saver_mode\" :disabled=\"PlayerUtils.isHEVCVideoSupported() === false\">\r\n                </v-switch>\r\n            </div>\r\n            <div class=\"settings__item settings__item--switch settings__item--sync-disabled\">\r\n                <label class=\"settings__item-heading\" for=\"tv_low_latency_mode\">テレビを低遅延で視聴する</label>\r\n                <label class=\"settings__item-label\" for=\"tv_low_latency_mode\">\r\n                    低遅延ストリーミングをオンにすると、<b>放送波との遅延を最短 0.9 秒に抑えて視聴できます！</b><br>\r\n                    また、約 3 秒以上遅延したときに少しだけ再生速度を早める (1.1x) ことで、滑らかにストリーミングの遅延を取り戻します。<br>\r\n                    宅外視聴などのネットワークが不安定になりがちな環境では、低遅延ストリーミングをオフにしてみると、映像のカクつきを改善できるかもしれません。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"tv_low_latency_mode\" inset hide-details\r\n                    v-model=\"settingsStore.settings.tv_low_latency_mode\">\r\n                </v-switch>\r\n            </div>\r\n            <v-divider class=\"mt-6\"></v-divider>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">デフォルトのパネルの表示状態</div>\r\n                <div class=\"settings__item-label\">\r\n                    視聴画面を開いたときに、右側のパネルをどう表示するかを設定します。<br>\r\n                </div>\r\n                <v-select class=\"settings__item-form\" outlined hide-details :dense=\"is_form_dense\"\r\n                    :items=\"panel_display_state\" v-model=\"settingsStore.settings.panel_display_state\">\r\n                </v-select>\r\n            </div>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">テレビをみるときにデフォルトで表示されるパネルのタブ</div>\r\n                <div class=\"settings__item-label\">\r\n                    テレビの視聴画面を開いたときに、右側のパネルで最初に表示されるタブを設定します。<br>\r\n                </div>\r\n                <v-select class=\"settings__item-form\" outlined hide-details :dense=\"is_form_dense\"\r\n                    :items=\"tv_panel_active_tab\" v-model=\"settingsStore.settings.tv_panel_active_tab\">\r\n                </v-select>\r\n            </div>\r\n            <v-divider class=\"mt-6\"></v-divider>\r\n            <div class=\"settings__item settings__item--switch\">\r\n                <label class=\"settings__item-heading\" for=\"tv_show_superimpose\">チャンネル選局のキーボードショートカットを {{Utils.AltOrOption()}} + 数字キー/テンキーに変更する</label>\r\n                <label class=\"settings__item-label\" for=\"tv_show_superimpose\">\r\n                    この設定をオンにすると、数字キーまたはテンキーに対応するリモコン番号（1～12）のチャンネルに切り替える際、{{Utils.AltOrOption()}} キーを同時に押す必要があります。<br>\r\n                    コメントやツイートを入力しようとして誤って数字キーを押してしまい、チャンネルが変わってしまう事態を避けたい方におすすめです。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"tv_show_superimpose\" inset hide-details\r\n                    v-model=\"settingsStore.settings.tv_channel_selection_requires_alt_key\">\r\n                </v-switch>\r\n            </div>\r\n            <v-divider class=\"mt-6\"></v-divider>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">設定をエクスポート</div>\r\n                <div class=\"settings__item-label\">\r\n                    このデバイス（ブラウザ）に保存されている設定データを、エクスポート（ダウンロード）できます。<br>\r\n                    ダウンロードした設定データ (KonomiTV-Settings.json) は、[設定をインポート] からインポートできます。異なるサーバーの KonomiTV を同じ設定で使いたいときなどに使ってください。<br>\r\n                </div>\r\n            </div>\r\n            <v-btn class=\"settings__save-button mt-4\" depressed @click=\"exportSettings()\">\r\n                <Icon icon=\"fa6-solid:download\" class=\"mr-3\" height=\"19px\" />設定をエクスポート\r\n            </v-btn>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading error--text text--lighten-1\">設定をインポート</div>\r\n                <div class=\"settings__item-label\">\r\n                    [設定をエクスポート] でダウンロードした設定データを、このデバイス（ブラウザ）にインポートできます。<br>\r\n                    設定をインポートすると、<b>現在のデバイス設定はすべて上書きされます。</b>元に戻すことはできません。<br>\r\n                    設定のデバイス間同期がオンのときは、<b>同期が有効なすべてのデバイスに反映されます。</b>十分ご注意ください。<br>\r\n                </div>\r\n                <v-file-input class=\"settings__item-form\" outlined hide-details placeholder=\"設定データ (KonomiTV-Settings.json) を選択\"\r\n                    :dense=\"is_form_dense\"\r\n                    accept=\"application/json\"\r\n                    prepend-icon=\"\"\r\n                    prepend-inner-icon=\"mdi-paperclip\"\r\n                    v-model=\"import_settings_file\">\r\n                </v-file-input>\r\n            </div>\r\n            <v-btn class=\"settings__save-button error mt-5\" depressed @click=\"importSettings()\">\r\n                <Icon icon=\"fa6-solid:upload\" class=\"mr-3\" height=\"19px\" />設定をインポート\r\n            </v-btn>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading error--text text--lighten-1\">設定を初期状態にリセット</div>\r\n                <div class=\"settings__item-label\">\r\n                    このデバイス（ブラウザ）に保存されている設定データを、初期状態のデフォルト値にリセットできます。<br>\r\n                    設定をリセットすると、元に戻すことはできません。<br>\r\n                    設定のデバイス間同期がオンのときは、<b>同期が有効なすべてのデバイスに反映されます。</b>十分ご注意ください。<br>\r\n                </div>\r\n            </div>\r\n            <v-btn class=\"settings__save-button error mt-5\" depressed @click=\"resetSettings()\">\r\n                <Icon icon=\"material-symbols:device-reset-rounded\" class=\"mr-2\" height=\"23px\" />設定をリセット\r\n            </v-btn>\r\n        </div>\r\n    </SettingsBase>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils, { PlayerUtils } from '@/utils';\r\nimport SettingsBase from '@/views/Settings/Base.vue';\r\n\r\nconst QUALITY_H264 = [\r\n    {text: '1080p (60fps) (約4.50GB/h / 平均10.0Mbps)', value: '1080p-60fps'},\r\n    {text: '1080p (約4.50GB/h / 平均10.0Mbps)', value: '1080p'},\r\n    {text: '810p (約2.62GB/h / 平均5.8Mbps)', value: '810p'},\r\n    {text: '720p (約2.18GB/h / 平均4.9Mbps)', value: '720p'},\r\n    {text: '540p (約1.52GB/h / 平均3.4Mbps)', value: '540p'},\r\n    {text: '480p (約1.06GB/h / 平均2.3Mbps)', value: '480p'},\r\n    {text: '360p (約0.60GB/h / 平均1.3Mbps)', value: '360p'},\r\n    {text: '240p (約0.35GB/h / 平均0.8Mbps)', value: '240p'},\r\n];\r\n\r\nconst QUALITY_H265 = [\r\n    {text: '1080p (60fps) (約1.80GB/h / 平均4.0Mbps)', value: '1080p-60fps'},\r\n    {text: '1080p (約1.37GB/h / 平均3.0Mbps)', value: '1080p'},\r\n    {text: '810p (約1.05GB/h / 平均2.3Mbps)', value: '810p'},\r\n    {text: '720p (約0.82GB/h / 平均1.8Mbps)', value: '720p'},\r\n    {text: '540p (約0.53GB/h / 平均1.2Mbps)', value: '540p'},\r\n    {text: '480p (約0.46GB/h / 平均1.0Mbps)', value: '480p'},\r\n    {text: '360p (約0.30GB/h / 平均0.7Mbps)', value: '360p'},\r\n    {text: '240p (約0.20GB/h / 平均0.4Mbps)', value: '240p'},\r\n];\r\n\r\nexport default Vue.extend({\r\n    name: 'Settings-General',\r\n    components: {\r\n        SettingsBase,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // ユーティリティをテンプレートで使えるように\r\n            Utils: Utils,\r\n            PlayerUtils: PlayerUtils,\r\n\r\n            // フォームを小さくするかどうか\r\n            is_form_dense: Utils.isSmartphoneHorizontal(),\r\n\r\n            // テレビのデフォルトのストリーミング画質の選択肢\r\n            tv_streaming_quality: QUALITY_H264,\r\n\r\n            // デフォルトのパネルの表示状態の選択肢\r\n            panel_display_state: [\r\n                {text: '前回の状態を復元する', value: 'RestorePreviousState'},\r\n                {text: '常に表示する', value: 'AlwaysDisplay'},\r\n                {text: '常に折りたたむ', value: 'AlwaysFold'},\r\n            ],\r\n\r\n            // テレビをみるときにデフォルトで表示されるパネルのタブの選択肢\r\n            tv_panel_active_tab: [\r\n                {text: '番組情報タブ', value: 'Program'},\r\n                {text: 'チャンネルタブ', value: 'Channel'},\r\n                {text: 'コメントタブ', value: 'Comment'},\r\n                {text: 'Twitter タブ', value: 'Twitter'},\r\n            ],\r\n\r\n            // 選択された設定データ (KonomiTV-Settings.json) が入る\r\n            import_settings_file: null as File | null,\r\n        };\r\n    },\r\n    computed: {\r\n        // SettingsStore に this.settingsStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useSettingsStore),\r\n    },\r\n    created() {\r\n        if (this.settingsStore.settings.tv_data_saver_mode === true) {\r\n            this.tv_streaming_quality = QUALITY_H265;\r\n        }\r\n    },\r\n    watch: {\r\n        'settingsStore.settings.tv_data_saver_mode': {\r\n            immediate: true,\r\n            handler(val: boolean) {\r\n                if (val === true) {\r\n                    this.tv_streaming_quality = QUALITY_H265;\r\n                } else {\r\n                    this.tv_streaming_quality = QUALITY_H264;\r\n                }\r\n            },\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        // 設定データをエクスポートする\r\n        exportSettings() {\r\n\r\n            // 設定データを JSON 化して取得\r\n            const settings_json = JSON.stringify(this.settingsStore.settings, null, 4);\r\n\r\n            // ダウンロードさせるために一旦 Blob にしてから、KonomiTV-Settings.json としてダウンロード\r\n            const settings_json_blob = new Blob([settings_json], {type: 'application/json'});\r\n            Utils.downloadBlobData(settings_json_blob, 'KonomiTV-Settings.json');\r\n            this.$message.success('設定をエクスポートしました。');\r\n        },\r\n\r\n        // 設定データをインポートする\r\n        async importSettings() {\r\n\r\n            // 設定データが選択されていないときは実行しない\r\n            if (this.import_settings_file === null) {\r\n                this.$message.error('インポートする設定データを選択してください！');\r\n                return;\r\n            }\r\n\r\n            // 設定データのインポートを実行\r\n            const result = await this.settingsStore.importClientSettings(this.import_settings_file);\r\n            if (result === true) {\r\n                this.$message.success('設定をインポートしました。');\r\n                window.setTimeout(() => this.$router.go(0), 300);\r\n            } else {\r\n                this.$message.error('設定データが不正なため、インポートできませんでした。');\r\n            }\r\n        },\r\n\r\n        // 設定データをリセットする\r\n        async resetSettings() {\r\n            await this.settingsStore.resetClientSettings();\r\n            this.$message.success('設定をリセットしました。');\r\n            window.setTimeout(() => this.$router.go(0), 300);\r\n        },\r\n    }\r\n});\r\n\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./General.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./General.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./General.vue?vue&type=template&id=14e25f9e\"\nimport script from \"./General.vue?vue&type=script&lang=ts\"\nexport * from \"./General.vue?vue&type=script&lang=ts\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('v-card',{staticClass:\"settings-container d-flex px-5 py-5 mx-auto background\",attrs:{\"elevation\":\"0\",\"width\":\"100%\",\"max-width\":\"1000\"}},[_c('v-navigation-drawer',{staticClass:\"settings-navigation flex-shrink-0 background\",attrs:{\"permanent\":\"\",\"width\":\"100%\",\"height\":\"auto\"}},[_c('v-list-item',{staticClass:\"px-1\"},[_c('v-list-item-content',[_c('h1',[_vm._v(\"設定\")])])],1),_c('v-list',{staticClass:\"mt-2 px-0\",attrs:{\"nav\":\"\"}},[_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/general\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 3px\"},attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"全般\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/caption\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:subtitles-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"字幕\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/data-broadcasting\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('svg',{attrs:{\"width\":\"26px\",\"height\":\"26px\",\"viewBox\":\"0 0 512 512\"}},[_c('path',{attrs:{\"fill\":\"currentColor\",\"d\":\"M248.039 381.326L355.039 67.8258C367.539 28.3257 395.039 34.3258 406.539 34.3258C431.039 34.3258 453.376 61.3258 441.039 96.8258C362.639 322.426 343.539 375.326 340.539 384.826C338.486 391.326 342.039 391.326 345.539 391.326C377.039 391.326 386.539 418.326 386.539 435.326C386.539 458.826 371.539 477.326 350.039 477.326H214.539C179.039 477.326 85.8269 431.3 88.0387 335.826C91.0387 206.326 192.039 183.326 243.539 183.326H296.539L265.539 272.326H243.539C185.539 272.326 174.113 314.826 176.039 334.326C180.039 374.826 215.039 389.814 237.039 390.326C244.539 390.5 246.039 386.826 248.039 381.326Z\"}})])]),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"データ放送\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/capture\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-multiple-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"キャプチャ\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/account\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"アカウント\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/jikkyo\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 2px\"},attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"ニコニコ実況\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/twitter\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 1px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"Twitter\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/server\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:server-surface-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"サーバー設定\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 settings-navigation-version\",class:{'settings-navigation-version--highlight': _vm.versionStore.is_update_available},attrs:{\"link\":\"\",\"color\":\"primary\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\" version \"+_vm._s(_vm.versionStore.client_version)+_vm._s(_vm.versionStore.is_update_available ? ' (Update Available)' : '')+\" \")])],1)],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"route-container\">\r\n        <Header/>\r\n        <main>\r\n            <Navigation/>\r\n            <v-card class=\"settings-container d-flex px-5 py-5 mx-auto background\" elevation=\"0\" width=\"100%\" max-width=\"1000\">\r\n                <v-navigation-drawer permanent class=\"settings-navigation flex-shrink-0 background\" width=\"100%\" height=\"auto\">\r\n                    <v-list-item class=\"px-1\">\r\n                        <v-list-item-content>\r\n                            <h1>設定</h1>\r\n                        </v-list-item-content>\r\n                    </v-list-item>\r\n                    <v-list nav class=\"mt-2 px-0\">\r\n                        <v-list-item link color=\"primary\" class=\"px-4\" to=\"/settings/general\">\r\n                            <v-list-item-icon class=\"mr-4\">\r\n                                <Icon icon=\"fa-solid:sliders-h\" width=\"26px\" style=\"padding: 0 3px;\" />\r\n                            </v-list-item-icon>\r\n                            <v-list-item-content>\r\n                                <v-list-item-title>全般</v-list-item-title>\r\n                            </v-list-item-content>\r\n                        </v-list-item>\r\n                        <v-list-item link color=\"primary\" class=\"px-4\" to=\"/settings/caption\">\r\n                            <v-list-item-icon class=\"mr-4\">\r\n                                <Icon icon=\"fluent:subtitles-16-filled\" width=\"26px\" />\r\n                            </v-list-item-icon>\r\n                            <v-list-item-content>\r\n                                <v-list-item-title>字幕</v-list-item-title>\r\n                            </v-list-item-content>\r\n                        </v-list-item>\r\n                        <v-list-item link color=\"primary\" class=\"px-4\" to=\"/settings/data-broadcasting\">\r\n                            <v-list-item-icon class=\"mr-4\">\r\n                                <svg width=\"26px\" height=\"26px\" viewBox=\"0 0 512 512\">\r\n                                    <path fill=\"currentColor\" d=\"M248.039 381.326L355.039 67.8258C367.539 28.3257 395.039 34.3258 406.539 34.3258C431.039 34.3258 453.376 61.3258 441.039 96.8258C362.639 322.426 343.539 375.326 340.539 384.826C338.486 391.326 342.039 391.326 345.539 391.326C377.039 391.326 386.539 418.326 386.539 435.326C386.539 458.826 371.539 477.326 350.039 477.326H214.539C179.039 477.326 85.8269 431.3 88.0387 335.826C91.0387 206.326 192.039 183.326 243.539 183.326H296.539L265.539 272.326H243.539C185.539 272.326 174.113 314.826 176.039 334.326C180.039 374.826 215.039 389.814 237.039 390.326C244.539 390.5 246.039 386.826 248.039 381.326Z\" />\r\n                                </svg>\r\n                            </v-list-item-icon>\r\n                            <v-list-item-content>\r\n                                <v-list-item-title>データ放送</v-list-item-title>\r\n                            </v-list-item-content>\r\n                        </v-list-item>\r\n                        <v-list-item link color=\"primary\" class=\"px-4\" to=\"/settings/capture\">\r\n                            <v-list-item-icon class=\"mr-4\">\r\n                                <Icon icon=\"fluent:image-multiple-16-filled\" width=\"26px\" />\r\n                            </v-list-item-icon>\r\n                            <v-list-item-content>\r\n                                <v-list-item-title>キャプチャ</v-list-item-title>\r\n                            </v-list-item-content>\r\n                        </v-list-item>\r\n                        <v-list-item link color=\"primary\" class=\"px-4\" to=\"/settings/account\">\r\n                            <v-list-item-icon class=\"mr-4\">\r\n                                <Icon icon=\"fluent:person-20-filled\" width=\"26px\" />\r\n                            </v-list-item-icon>\r\n                            <v-list-item-content>\r\n                                <v-list-item-title>アカウント</v-list-item-title>\r\n                            </v-list-item-content>\r\n                        </v-list-item>\r\n                        <v-list-item link color=\"primary\" class=\"px-4\" to=\"/settings/jikkyo\">\r\n                            <v-list-item-icon class=\"mr-4\">\r\n                                <Icon icon=\"bi:chat-left-text-fill\" width=\"26px\" style=\"padding: 0 2px;\" />\r\n                            </v-list-item-icon>\r\n                            <v-list-item-content>\r\n                                <v-list-item-title>ニコニコ実況</v-list-item-title>\r\n                            </v-list-item-content>\r\n                        </v-list-item>\r\n                        <v-list-item link color=\"primary\" class=\"px-4\" to=\"/settings/twitter\">\r\n                            <v-list-item-icon class=\"mr-4\">\r\n                                <Icon icon=\"fa-brands:twitter\" width=\"26px\" style=\"padding: 0 1px;\" />\r\n                            </v-list-item-icon>\r\n                            <v-list-item-content>\r\n                                <v-list-item-title>Twitter</v-list-item-title>\r\n                            </v-list-item-content>\r\n                        </v-list-item>\r\n                        <v-list-item link color=\"primary\" class=\"px-4\" to=\"/settings/server\">\r\n                            <v-list-item-icon class=\"mr-4\">\r\n                                <Icon icon=\"fluent:server-surface-16-filled\" width=\"26px\" />\r\n                            </v-list-item-icon>\r\n                            <v-list-item-content>\r\n                                <v-list-item-title>サーバー設定</v-list-item-title>\r\n                            </v-list-item-content>\r\n                        </v-list-item>\r\n                        <v-list-item link color=\"primary\" class=\"px-4 settings-navigation-version\" href=\"https://github.com/tsukumijima/KonomiTV\"\r\n                            :class=\"{'settings-navigation-version--highlight': versionStore.is_update_available}\">\r\n                            <v-list-item-icon class=\"mr-4\">\r\n                                <Icon icon=\"fluent:info-16-regular\" width=\"26px\" />\r\n                            </v-list-item-icon>\r\n                            <v-list-item-content>\r\n                                <v-list-item-title>\r\n                                    version {{versionStore.client_version}}{{versionStore.is_update_available ? ' (Update Available)' : ''}}\r\n                                </v-list-item-title>\r\n                            </v-list-item-content>\r\n                        </v-list-item>\r\n                    </v-list>\r\n                </v-navigation-drawer>\r\n            </v-card>\r\n        </main>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport Header from '@/components/Header.vue';\r\nimport Navigation from '@/components/Navigation.vue';\r\nimport useVersionStore from '@/stores/VersionStore';\r\n\r\nexport default Vue.extend({\r\n    name: 'Settings-Index',\r\n    components: {\r\n        Header,\r\n        Navigation,\r\n    },\r\n    computed: {\r\n        ...mapStores(useVersionStore),\r\n    },\r\n    async created() {\r\n        await this.versionStore.fetchServerVersion();\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.settings-container {\r\n    width: 100%;\r\n    min-width: 0;\r\n    @include smartphone-horizontal {\r\n        padding: 16px 20px !important;\r\n    }\r\n    @include smartphone-horizontal-short {\r\n        padding: 16px 16px !important;\r\n    }\r\n    @include smartphone-vertical {\r\n        padding: 16px 16px !important;\r\n    }\r\n\r\n    .settings-navigation {\r\n        transform: none !important;\r\n        visibility: visible !important;\r\n\r\n        .settings-navigation-version {\r\n            display: none;\r\n            @include smartphone-vertical {\r\n                display: flex;\r\n            }\r\n            &--highlight {\r\n                color: var(--v-secondary-lighten1);\r\n            }\r\n        }\r\n\r\n        h1 {\r\n            @include smartphone-horizontal {\r\n                font-size: 22px !important;\r\n            }\r\n        }\r\n\r\n        .v-navigation-drawer__content .v-list {\r\n            @include smartphone-horizontal {\r\n                margin-top: 12px !important;\r\n                padding: 0 !important;\r\n            }\r\n        }\r\n\r\n        .v-list-item--link, .v-list-item--link:before {\r\n            background: var(--v-background-lighten1);\r\n            border-radius: 6px !important;\r\n            margin-top: 6px !important;\r\n            margin-bottom: 0px !important;\r\n        }\r\n        .v-list-item--link {\r\n            &:first-of-type {\r\n                margin-top: 0 !important;\r\n            }\r\n        }\r\n        .v-list-item__icon {\r\n            margin: 14px 0 !important;\r\n            margin-right: 16px !important;\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=68cd8920&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=ts\"\nexport * from \"./Index.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=68cd8920&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"68cd8920\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"19px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"ニコニコ実況\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[(_vm.userStore.user === null || _vm.userStore.user.niconico_user_id === null)?_c('div',{staticClass:\"niconico-account niconico-account--anonymous\"},[_c('div',{staticClass:\"niconico-account-wrapper\"},[_c('Icon',{staticClass:\"flex-shrink-0\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"45px\"}}),_c('div',{staticClass:\"niconico-account__info ml-4\"},[_c('div',{staticClass:\"niconico-account__info-name\"},[_c('span',{staticClass:\"niconico-account__info-name-text\"},[_vm._v(\"ニコニコアカウントと連携していません\")])]),_c('span',{staticClass:\"niconico-account__info-description\"},[_vm._v(\" ニコニコアカウントと連携すると、テレビを見ながらニコニコ実況にコメントできるようになります。 \")])])],1),_c('v-btn',{staticClass:\"niconico-account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"130\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginNiconicoAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"26\"}}),_vm._v(\"連携する \")],1)],1):_vm._e(),(_vm.userStore.user !== null && _vm.userStore.user.niconico_user_id !== null)?_c('div',{staticClass:\"niconico-account\"},[_c('div',{staticClass:\"niconico-account-wrapper\"},[_c('img',{staticClass:\"niconico-account__icon\",attrs:{\"src\":_vm.userStore.user_niconico_icon_url ?? ''}}),_c('div',{staticClass:\"niconico-account__info\"},[_c('div',{staticClass:\"niconico-account__info-name\"},[_c('span',{staticClass:\"niconico-account__info-name-text\"},[_vm._v(_vm._s(_vm.userStore.user.niconico_user_name)+\" と連携しています\")])]),_c('span',{staticClass:\"niconico-account__info-description\"},[_c('span',{staticClass:\"mr-2\",staticStyle:{\"white-space\":\"nowrap\"}},[_vm._v(\"Niconico User ID:\")]),_c('a',{staticClass:\"mr-2\",attrs:{\"href\":`https://www.nicovideo.jp/user/${_vm.userStore.user.niconico_user_id}`,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.userStore.user.niconico_user_id))]),(_vm.userStore.user.niconico_user_premium === true)?_c('span',{staticClass:\"secondary--text\"},[_vm._v(\"(Premium)\")]):_vm._e()])])]),_c('v-btn',{staticClass:\"niconico-account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"130\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logoutNiconicoAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-disconnected-20-filled\",\"height\":\"26\"}}),_vm._v(\"連携解除 \")],1)],1):_vm._e(),_c('div',{staticClass:\"settings__item mt-7\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントのミュート設定\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 表示したくないコメントを、映像上やコメントリストに表示しないようにミュートできます。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button mt-4\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.comment_mute_settings_modal = !_vm.comment_mute_settings_modal}}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"19px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"コメントのミュート設定を開く\")])],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの速さ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーに流れるコメントの速さを設定します。\"),_c('br'),_vm._v(\" たとえば 1.2 に設定すると、コメントが 1.2 倍速く流れます。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"step\":0.1,\"min\":0.5,\"max\":2},model:{value:(_vm.settingsStore.settings.comment_speed_rate),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"comment_speed_rate\", $$v)},expression:\"settingsStore.settings.comment_speed_rate\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの文字サイズ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーに流れるコメントの文字サイズの基準値を設定します。\"),_c('br'),_vm._v(\" 実際の文字サイズは画面サイズに合わせて調整されます。デフォルトの文字サイズは 34px です。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"min\":20,\"max\":60},model:{value:(_vm.settingsStore.settings.comment_font_size),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"comment_font_size\", $$v)},expression:\"settingsStore.settings.comment_font_size\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"close_comment_form_after_sending\"}},[_vm._v(\"コメント送信後にコメント入力フォームを閉じる\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"close_comment_form_after_sending\"}},[_vm._v(\" この設定をオンにすると、コメントを送信した後に、コメント入力フォームが自動で閉じるようになります。\"),_c('br'),_vm._v(\" コメント入力フォームが表示されたままだと、大半のショートカットキーが文字入力と競合して使えなくなります。とくに理由がなければ、オンにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"close_comment_form_after_sending\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.close_comment_form_after_sending),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"close_comment_form_after_sending\", $$v)},expression:\"settingsStore.settings.close_comment_form_after_sending\"}})],1)],1),_c('CommentMuteSettings',{model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('v-dialog',{attrs:{\"max-width\":\"770\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}},[_c('v-card',{staticClass:\"comment-mute-settings\"},[_c('v-card-title',{staticClass:\"px-5 pt-5 pb-3 d-flex align-center font-weight-bold\",staticStyle:{\"height\":\"60px\"}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"26px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"コメントのミュート設定\")]),_c('v-spacer'),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\",on:{\"click\":function($event){_vm.comment_mute_settings_modal = false}}},[_c('Icon',{attrs:{\"icon\":\"fluent:dismiss-12-filled\",\"width\":\"23px\",\"height\":\"23px\"}})],1)],1),_c('div',{staticClass:\"px-5 pb-5\"},[_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"24px\",\"height\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"クイック設定\")])],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_vulgar_comments\"}},[_vm._v(\" 露骨な表現を含むコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_vulgar_comments\"}},[_vm._v(\" 性的な単語などの露骨・下品な表現を含むコメントを、一括でミュートするかを設定します。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_vulgar_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_vulgar_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_vulgar_comments\", $$v)},expression:\"settingsStore.settings.mute_vulgar_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_abusive_discriminatory_prejudiced_comments\"}},[_vm._v(\" ネガティブな表現、差別的な表現、政治的に偏った表現を含むコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_abusive_discriminatory_prejudiced_comments\"}},[_vm._v(\" 『死ね』『殺す』などのネガティブな表現、特定の国や人々への差別的な表現、政治的に偏った表現を含むコメントを、一括でミュートするかを設定します。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_abusive_discriminatory_prejudiced_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_abusive_discriminatory_prejudiced_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_abusive_discriminatory_prejudiced_comments\", $$v)},expression:\"settingsStore.settings.mute_abusive_discriminatory_prejudiced_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_big_size_comments\"}},[_vm._v(\" 文字サイズが大きいコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_big_size_comments\"}},[_vm._v(\" 通常より大きい文字サイズで表示されるコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" 文字サイズが大きいコメントには迷惑なコメントが多いです。基本的にはオンにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_big_size_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_big_size_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_big_size_comments\", $$v)},expression:\"settingsStore.settings.mute_big_size_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_fixed_comments\"}},[_vm._v(\" 映像の上下に固定表示されるコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_fixed_comments\"}},[_vm._v(\" 映像の上下に固定された状態で表示されるコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" 固定表示されるコメントが煩わしい方におすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_fixed_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_fixed_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_fixed_comments\", $$v)},expression:\"settingsStore.settings.mute_fixed_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_colored_comments\"}},[_vm._v(\" 色付きのコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_colored_comments\"}},[_vm._v(\" 白以外の色で表示される色付きのコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" この設定をオンにしておくと、目立つ色のコメントを一掃できます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_colored_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_colored_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_colored_comments\", $$v)},expression:\"settingsStore.settings.mute_colored_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_consecutive_same_characters_comments\"}},[_vm._v(\" 8文字以上同じ文字が連続しているコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_consecutive_same_characters_comments\"}},[_vm._v(\" 『wwwwwwwwwww』『あばばばばばばばばば』など、8文字以上同じ文字が連続しているコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" しばしばあるテンプレコメントが煩わしい方におすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_consecutive_same_characters_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_consecutive_same_characters_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_consecutive_same_characters_comments\", $$v)},expression:\"settingsStore.settings.mute_consecutive_same_characters_comments\"}})],1),_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:comment-dismiss-20-filled\",\"width\":\"24px\"}}),_c('span',{staticClass:\"ml-2 mr-2\"},[_vm._v(\"ミュート済みのキーワード\")]),_c('v-btn',{staticClass:\"ml-auto\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.settingsStore.settings.muted_comment_keywords.push({match: 'partial', pattern: ''})}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"height\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)],1),_c('div',{staticClass:\"muted-comment-items\"},_vm._l((_vm.settingsStore.settings.muted_comment_keywords),function(muted_comment_keyword,index){return _c('div',{key:index,staticClass:\"muted-comment-item\"},[_c('v-text-field',{staticClass:\"muted-comment-item__input\",attrs:{\"type\":\"search\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"ミュートするキーワードを入力\"},model:{value:(_vm.settingsStore.settings.muted_comment_keywords[index].pattern),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings.muted_comment_keywords[index], \"pattern\", $$v)},expression:\"settingsStore.settings.muted_comment_keywords[index].pattern\"}}),_c('v-select',{staticClass:\"muted-comment-item__match-type\",attrs:{\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.muted_comment_keyword_match_type},model:{value:(_vm.settingsStore.settings.muted_comment_keywords[index].match),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings.muted_comment_keywords[index], \"match\", $$v)},expression:\"settingsStore.settings.muted_comment_keywords[index].match\"}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"muted-comment-item__delete-button\",on:{\"click\":function($event){_vm.settingsStore.settings.muted_comment_keywords\n                            .splice(_vm.settingsStore.settings.muted_comment_keywords.indexOf(muted_comment_keyword), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"20px\"}})],1)],1)}),0),_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-prohibited-20-filled\",\"width\":\"24px\"}}),_c('span',{staticClass:\"ml-2 mr-2\"},[_vm._v(\"ミュート済みのニコニコユーザー ID\")]),_c('v-btn',{staticClass:\"ml-auto\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.settingsStore.settings.muted_niconico_user_ids.push('')}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"height\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)],1),_c('div',{staticClass:\"muted-comment-items\"},_vm._l((_vm.settingsStore.settings.muted_niconico_user_ids),function(muted_niconico_user_id,index){return _c('div',{key:index,staticClass:\"muted-comment-item\"},[_c('v-text-field',{staticClass:\"muted-comment-item__input\",attrs:{\"type\":\"search\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"ミュートするニコニコユーザー ID を入力\"},model:{value:(_vm.settingsStore.settings.muted_niconico_user_ids[index]),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings.muted_niconico_user_ids, index, $$v)},expression:\"settingsStore.settings.muted_niconico_user_ids[index]\"}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"muted-comment-item__delete-button\",on:{\"click\":function($event){_vm.settingsStore.settings.muted_niconico_user_ids\n                            .splice(_vm.settingsStore.settings.muted_niconico_user_ids.indexOf(muted_niconico_user_id), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"20px\"}})],1)],1)}),0)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-dialog max-width=\"770\" transition=\"slide-y-transition\" v-model=\"comment_mute_settings_modal\">\r\n        <v-card class=\"comment-mute-settings\">\r\n            <v-card-title class=\"px-5 pt-5 pb-3 d-flex align-center font-weight-bold\" style=\"height: 60px;\">\r\n                <Icon icon=\"heroicons-solid:filter\" height=\"26px\" />\r\n                <span class=\"ml-3\">コメントのミュート設定</span>\r\n                <v-spacer></v-spacer>\r\n                <div v-ripple class=\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\" @click=\"comment_mute_settings_modal = false\">\r\n                    <Icon icon=\"fluent:dismiss-12-filled\" width=\"23px\" height=\"23px\" />\r\n                </div>\r\n            </v-card-title>\r\n            <div class=\"px-5 pb-5\">\r\n                <div class=\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\">\r\n                    <Icon icon=\"fa-solid:sliders-h\" width=\"24px\" height=\"20px\" />\r\n                    <span class=\"ml-2\">クイック設定</span>\r\n                </div>\r\n                <div class=\"settings__item settings__item--switch\">\r\n                    <label class=\"settings__item-heading\" for=\"mute_vulgar_comments\">\r\n                        露骨な表現を含むコメントをミュートする\r\n                    </label>\r\n                    <label class=\"settings__item-label\" for=\"mute_vulgar_comments\">\r\n                        性的な単語などの露骨・下品な表現を含むコメントを、一括でミュートするかを設定します。<br>\r\n                    </label>\r\n                    <v-switch class=\"settings__item-switch\" id=\"mute_vulgar_comments\" inset hide-details\r\n                        v-model=\"settingsStore.settings.mute_vulgar_comments\">\r\n                    </v-switch>\r\n                </div>\r\n                <div class=\"settings__item settings__item--switch\">\r\n                    <label class=\"settings__item-heading\" for=\"mute_abusive_discriminatory_prejudiced_comments\">\r\n                        ネガティブな表現、差別的な表現、政治的に偏った表現を含むコメントをミュートする\r\n                    </label>\r\n                    <label class=\"settings__item-label\" for=\"mute_abusive_discriminatory_prejudiced_comments\">\r\n                        『死ね』『殺す』などのネガティブな表現、特定の国や人々への差別的な表現、政治的に偏った表現を含むコメントを、一括でミュートするかを設定します。<br>\r\n                    </label>\r\n                    <v-switch class=\"settings__item-switch\" id=\"mute_abusive_discriminatory_prejudiced_comments\" inset hide-details\r\n                        v-model=\"settingsStore.settings.mute_abusive_discriminatory_prejudiced_comments\">\r\n                    </v-switch>\r\n                </div>\r\n                <div class=\"settings__item settings__item--switch\">\r\n                    <label class=\"settings__item-heading\" for=\"mute_big_size_comments\">\r\n                        文字サイズが大きいコメントをミュートする\r\n                    </label>\r\n                    <label class=\"settings__item-label\" for=\"mute_big_size_comments\">\r\n                        通常より大きい文字サイズで表示されるコメントを、一括でミュートするかを設定します。<br>\r\n                        文字サイズが大きいコメントには迷惑なコメントが多いです。基本的にはオンにしておくのがおすすめです。<br>\r\n                    </label>\r\n                    <v-switch class=\"settings__item-switch\" id=\"mute_big_size_comments\" inset hide-details\r\n                        v-model=\"settingsStore.settings.mute_big_size_comments\">\r\n                    </v-switch>\r\n                </div>\r\n                <div class=\"settings__item settings__item--switch\">\r\n                    <label class=\"settings__item-heading\" for=\"mute_fixed_comments\">\r\n                        映像の上下に固定表示されるコメントをミュートする\r\n                    </label>\r\n                    <label class=\"settings__item-label\" for=\"mute_fixed_comments\">\r\n                        映像の上下に固定された状態で表示されるコメントを、一括でミュートするかを設定します。<br>\r\n                        固定表示されるコメントが煩わしい方におすすめです。<br>\r\n                    </label>\r\n                    <v-switch class=\"settings__item-switch\" id=\"mute_fixed_comments\" inset hide-details\r\n                        v-model=\"settingsStore.settings.mute_fixed_comments\">\r\n                    </v-switch>\r\n                </div>\r\n                <div class=\"settings__item settings__item--switch\">\r\n                    <label class=\"settings__item-heading\" for=\"mute_colored_comments\">\r\n                       色付きのコメントをミュートする\r\n                    </label>\r\n                    <label class=\"settings__item-label\" for=\"mute_colored_comments\">\r\n                        白以外の色で表示される色付きのコメントを、一括でミュートするかを設定します。<br>\r\n                        この設定をオンにしておくと、目立つ色のコメントを一掃できます。<br>\r\n                    </label>\r\n                    <v-switch class=\"settings__item-switch\" id=\"mute_colored_comments\" inset hide-details\r\n                        v-model=\"settingsStore.settings.mute_colored_comments\">\r\n                    </v-switch>\r\n                </div>\r\n                <div class=\"settings__item settings__item--switch\">\r\n                    <label class=\"settings__item-heading\" for=\"mute_consecutive_same_characters_comments\">\r\n                        8文字以上同じ文字が連続しているコメントをミュートする\r\n                    </label>\r\n                    <label class=\"settings__item-label\" for=\"mute_consecutive_same_characters_comments\">\r\n                        『wwwwwwwwwww』『あばばばばばばばばば』など、8文字以上同じ文字が連続しているコメントを、一括でミュートするかを設定します。<br>\r\n                        しばしばあるテンプレコメントが煩わしい方におすすめです。<br>\r\n                    </label>\r\n                    <v-switch class=\"settings__item-switch\" id=\"mute_consecutive_same_characters_comments\" inset hide-details\r\n                        v-model=\"settingsStore.settings.mute_consecutive_same_characters_comments\">\r\n                    </v-switch>\r\n                </div>\r\n                <div class=\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\">\r\n                    <Icon icon=\"fluent:comment-dismiss-20-filled\" width=\"24px\" />\r\n                    <span class=\"ml-2 mr-2\">ミュート済みのキーワード</span>\r\n                    <v-btn class=\"ml-auto\" depressed\r\n                        @click=\"settingsStore.settings.muted_comment_keywords.push({match: 'partial', pattern: ''})\">\r\n                        <Icon icon=\"fluent:add-12-filled\" height=\"17px\" />\r\n                        <span class=\"ml-1\">追加</span>\r\n                    </v-btn>\r\n                </div>\r\n                <div class=\"muted-comment-items\">\r\n                    <div class=\"muted-comment-item\"\r\n                        v-for=\"(muted_comment_keyword, index) in settingsStore.settings.muted_comment_keywords\" :key=\"index\">\r\n                        <v-text-field type=\"search\" class=\"muted-comment-item__input\" dense outlined hide-details\r\n                            placeholder=\"ミュートするキーワードを入力\"\r\n                            v-model=\"settingsStore.settings.muted_comment_keywords[index].pattern\">\r\n                        </v-text-field>\r\n                        <v-select class=\"muted-comment-item__match-type\" dense outlined hide-details\r\n                            :items=\"muted_comment_keyword_match_type\"\r\n                            v-model=\"settingsStore.settings.muted_comment_keywords[index].match\">\r\n                        </v-select>\r\n                        <button v-ripple class=\"muted-comment-item__delete-button\"\r\n                            @click=\"settingsStore.settings.muted_comment_keywords\r\n                                .splice(settingsStore.settings.muted_comment_keywords.indexOf(muted_comment_keyword), 1)\">\r\n                            <Icon icon=\"fluent:delete-16-filled\" width=\"20px\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\">\r\n                    <Icon icon=\"fluent:person-prohibited-20-filled\" width=\"24px\" />\r\n                    <span class=\"ml-2 mr-2\">ミュート済みのニコニコユーザー ID</span>\r\n                    <v-btn class=\"ml-auto\" depressed\r\n                        @click=\"settingsStore.settings.muted_niconico_user_ids.push('')\">\r\n                        <Icon icon=\"fluent:add-12-filled\" height=\"17px\" />\r\n                        <span class=\"ml-1\">追加</span>\r\n                    </v-btn>\r\n                </div>\r\n                <div class=\"muted-comment-items\">\r\n                    <div class=\"muted-comment-item\"\r\n                        v-for=\"(muted_niconico_user_id, index) in settingsStore.settings.muted_niconico_user_ids\" :key=\"index\">\r\n                        <v-text-field type=\"search\" class=\"muted-comment-item__input\" dense outlined hide-details\r\n                            placeholder=\"ミュートするニコニコユーザー ID を入力\" v-model=\"settingsStore.settings.muted_niconico_user_ids[index]\">\r\n                        </v-text-field>\r\n                        <button v-ripple class=\"muted-comment-item__delete-button\"\r\n                            @click=\"settingsStore.settings.muted_niconico_user_ids\r\n                                .splice(settingsStore.settings.muted_niconico_user_ids.indexOf(muted_niconico_user_id), 1)\">\r\n                            <Icon icon=\"fluent:delete-16-filled\" width=\"20px\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </v-card>\r\n    </v-dialog>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue, { PropType } from 'vue';\r\n\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\n\r\nexport default Vue.extend({\r\n    name: 'CommentMuteSettings',\r\n    // カスタム v-model を実装する\r\n    // ref: https://jp.vuejs.org/v2/guide/components-custom-events.html\r\n    model: {\r\n        prop: 'showing',  // v-model で渡された値が \"showing\" props に入る\r\n        event: 'change',  // \"change\" イベントで親コンポーネントに反映\r\n    },\r\n    props: {\r\n        // コメントのミュート設定のモーダルを表示するか\r\n        showing: {\r\n            type: Boolean as PropType<Boolean>,\r\n            required: true,\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // インターバルのタイマー ID\r\n            interval_timer_id: 0,\r\n\r\n            // コメントのミュート設定のモーダルを表示するか\r\n            comment_mute_settings_modal: false,\r\n\r\n            // ミュート済みのキーワードのマッチタイプ\r\n            muted_comment_keyword_match_type: [\r\n                {text: '部分一致', value: 'partial'},\r\n                {text: '前方一致', value: 'forward'},\r\n                {text: '後方一致', value: 'backward'},\r\n                {text: '完全一致', value: 'exact'},\r\n                {text: '正規表現', value: 'regex'},\r\n            ],\r\n        };\r\n    },\r\n    computed: {\r\n        // SettingsStore に this.settingsStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useSettingsStore),\r\n    },\r\n    watch: {\r\n\r\n        // showing (親コンポーネント側) の変更を監視し、変更されたら comment_mute_settings_modal に反映する\r\n        showing() {\r\n            this.comment_mute_settings_modal = this.showing as boolean;\r\n        },\r\n\r\n        // comment_mute_settings_modal (子コンポーネント側) の変更を監視し、変更されたら this.$emit() で親コンポーネントに伝える\r\n        comment_mute_settings_modal() {\r\n            this.$emit('change', this.comment_mute_settings_modal);\r\n        }\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.comment-mute-settings {\r\n    .v-card__title, & > div {\r\n        @include smartphone-vertical {\r\n            padding-left: 12px !important;\r\n            padding-right: 12px !important;\r\n        }\r\n    }\r\n}\r\n\r\n// views/Settings/Base.vue から抜粋して一部編集\r\n.settings__item {\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    margin-top: 24px;\r\n    @include smartphone-horizontal {\r\n        margin-top: 16px;\r\n    }\r\n\r\n    &--switch {\r\n        margin-right: 62px;\r\n    }\r\n\r\n    &-heading {\r\n        display: flex;\r\n        align-items: center;\r\n        color: var(--v-text-base);\r\n        font-size: 16.5px;\r\n        @include smartphone-horizontal {\r\n            font-size: 15px;\r\n        }\r\n    }\r\n    &-label {\r\n        margin-top: 8px;\r\n        color: var(--v-text-darken1);\r\n        font-size: 13.5px;\r\n        line-height: 1.6;\r\n        @include smartphone-horizontal {\r\n            font-size: 11px;\r\n            line-height: 1.7;\r\n        }\r\n    }\r\n    &-form {\r\n        margin-top: 14px;\r\n        @include smartphone-horizontal {\r\n            font-size: 13.5px;\r\n        }\r\n    }\r\n    &-switch {\r\n        align-items: center;\r\n        position: absolute;\r\n        top: 0;\r\n        right: -74px;\r\n        bottom: 0;\r\n        margin-top: 0;\r\n    }\r\n\r\n    p {\r\n        margin-bottom: 8px;\r\n        &:last-of-type {\r\n            margin-bottom: 0px;\r\n        }\r\n    }\r\n}\r\n.muted-comment-items {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 8px;\r\n\r\n    .muted-comment-item {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 6px 0px;\r\n        border-bottom: 1px solid var(--v-background-lighten2);\r\n        transition: background-color 0.15s ease;\r\n\r\n        &:last-of-type {\r\n            border-bottom: none;\r\n        }\r\n\r\n        &__input {\r\n            font-size: 14px;\r\n        }\r\n\r\n        &__match-type {\r\n            max-width: 150px;\r\n            margin-left: 12px;\r\n            font-size: 14px;\r\n            @include smartphone-vertical {\r\n                max-width: 115px;\r\n            }\r\n        }\r\n\r\n        &__delete-button {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 40px;\r\n            height: 40px;\r\n            margin-left: 6px;\r\n            border-radius: 5px;\r\n            outline: none;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommentMuteSettings.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommentMuteSettings.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./CommentMuteSettings.vue?vue&type=template&id=5f1fa58d&scoped=true\"\nimport script from \"./CommentMuteSettings.vue?vue&type=script&lang=ts\"\nexport * from \"./CommentMuteSettings.vue?vue&type=script&lang=ts\"\nimport style0 from \"./CommentMuteSettings.vue?vue&type=style&index=0&id=5f1fa58d&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5f1fa58d\",\n  null\n  \n)\n\nexport default component.exports","\r\nimport APIClient from '@/services/APIClient';\r\n\r\n\r\n/** ニコニコアカウントと連携するための認証 URL を表すインターフェイス */\r\nexport interface INiconicoAuthURL {\r\n    authorization_url: string;\r\n}\r\n\r\n\r\nclass Niconico {\r\n\r\n    /**\r\n     * ニコニコアカウントと連携するための認証 URL を取得する\r\n     * @returns 認証 URL or 認証 URL の取得に失敗した場合は null\r\n     */\r\n    static async fetchAuthorizationURL(): Promise<string | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.get<INiconicoAuthURL>('/niconico/auth');\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'ニコニコアカウントとの連携用の認証 URL を取得できませんでした。');\r\n            return null;\r\n        }\r\n\r\n        return response.data.authorization_url;\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在ログイン中のユーザーアカウントに紐づくニコニコアカウントとの連携を解除する\r\n     * @returns 連携解除に成功した場合は true, 失敗した場合は false\r\n     */\r\n    static async logoutAccount(): Promise<boolean> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.delete('/niconico/logout');\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'ニコニコアカウントとの連携を解除できませんでした。');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default Niconico;\r\n","<template>\r\n    <!-- ベース画面の中にそれぞれの設定画面で異なる部分を記述する -->\r\n    <SettingsBase>\r\n        <h2 class=\"settings__heading\">\r\n            <router-link v-ripple class=\"settings__back-button\" to=\"/settings/\">\r\n                <Icon icon=\"fluent:arrow-left-12-filled\" width=\"25px\" />\r\n            </router-link>\r\n            <Icon icon=\"bi:chat-left-text-fill\" width=\"19px\" />\r\n            <span class=\"ml-3\">ニコニコ実況</span>\r\n        </h2>\r\n        <div class=\"settings__content\" :class=\"{'settings__content--loading': is_loading}\">\r\n            <div class=\"niconico-account niconico-account--anonymous\" v-if=\"userStore.user === null || userStore.user.niconico_user_id === null\">\r\n                <div class=\"niconico-account-wrapper\">\r\n                    <Icon class=\"flex-shrink-0\" icon=\"bi:chat-left-text-fill\" width=\"45px\" />\r\n                    <div class=\"niconico-account__info ml-4\">\r\n                        <div class=\"niconico-account__info-name\">\r\n                            <span class=\"niconico-account__info-name-text\">ニコニコアカウントと連携していません</span>\r\n                        </div>\r\n                        <span class=\"niconico-account__info-description\">\r\n                            ニコニコアカウントと連携すると、テレビを見ながらニコニコ実況にコメントできるようになります。\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <v-btn class=\"niconico-account__login ml-auto\" color=\"secondary\" width=\"130\" height=\"56\" depressed\r\n                    @click=\"loginNiconicoAccount()\">\r\n                    <Icon icon=\"fluent:plug-connected-20-filled\" class=\"mr-2\" height=\"26\" />連携する\r\n                </v-btn>\r\n            </div>\r\n            <div class=\"niconico-account\" v-if=\"userStore.user !== null && userStore.user.niconico_user_id !== null\">\r\n                <div class=\"niconico-account-wrapper\">\r\n                    <img class=\"niconico-account__icon\" :src=\"userStore.user_niconico_icon_url ?? ''\">\r\n                    <div class=\"niconico-account__info\">\r\n                        <div class=\"niconico-account__info-name\">\r\n                            <span class=\"niconico-account__info-name-text\">{{userStore.user.niconico_user_name}} と連携しています</span>\r\n                        </div>\r\n                        <span class=\"niconico-account__info-description\">\r\n                            <span class=\"mr-2\" style=\"white-space: nowrap;\">Niconico User ID:</span>\r\n                            <a class=\"mr-2\" :href=\"`https://www.nicovideo.jp/user/${userStore.user.niconico_user_id}`\"\r\n                                target=\"_blank\">{{userStore.user.niconico_user_id}}</a>\r\n                            <span class=\"secondary--text\" v-if=\"userStore.user.niconico_user_premium === true\">(Premium)</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <v-btn class=\"niconico-account__login ml-auto\" color=\"secondary\" width=\"130\" height=\"56\" depressed\r\n                    @click=\"logoutNiconicoAccount()\">\r\n                    <Icon icon=\"fluent:plug-disconnected-20-filled\" class=\"mr-2\" height=\"26\" />連携解除\r\n                </v-btn>\r\n            </div>\r\n            <div class=\"settings__item mt-7\">\r\n                <div class=\"settings__item-heading\">コメントのミュート設定</div>\r\n                <div class=\"settings__item-label\">\r\n                    表示したくないコメントを、映像上やコメントリストに表示しないようにミュートできます。<br>\r\n                </div>\r\n            </div>\r\n            <v-btn class=\"settings__save-button mt-4\" depressed @click=\"comment_mute_settings_modal = !comment_mute_settings_modal\">\r\n                <Icon icon=\"heroicons-solid:filter\" height=\"19px\" />\r\n                <span class=\"ml-1\">コメントのミュート設定を開く</span>\r\n            </v-btn>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">コメントの速さ</div>\r\n                <div class=\"settings__item-label\">\r\n                    プレイヤーに流れるコメントの速さを設定します。<br>\r\n                    たとえば 1.2 に設定すると、コメントが 1.2 倍速く流れます。<br>\r\n                </div>\r\n                <v-slider class=\"settings__item-form\" ticks=\"always\" thumb-label hide-details\r\n                    :step=\"0.1\" :min=\"0.5\" :max=\"2\" v-model=\"settingsStore.settings.comment_speed_rate\">\r\n                </v-slider>\r\n            </div>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">コメントの文字サイズ</div>\r\n                <div class=\"settings__item-label\">\r\n                    プレイヤーに流れるコメントの文字サイズの基準値を設定します。<br>\r\n                    実際の文字サイズは画面サイズに合わせて調整されます。デフォルトの文字サイズは 34px です。<br>\r\n                </div>\r\n                <v-slider class=\"settings__item-form\" ticks=\"always\" thumb-label hide-details\r\n                    :min=\"20\" :max=\"60\" v-model=\"settingsStore.settings.comment_font_size\">\r\n                </v-slider>\r\n            </div>\r\n            <div class=\"settings__item settings__item--switch\">\r\n                <label class=\"settings__item-heading\" for=\"close_comment_form_after_sending\">コメント送信後にコメント入力フォームを閉じる</label>\r\n                <label class=\"settings__item-label\" for=\"close_comment_form_after_sending\">\r\n                    この設定をオンにすると、コメントを送信した後に、コメント入力フォームが自動で閉じるようになります。<br>\r\n                    コメント入力フォームが表示されたままだと、大半のショートカットキーが文字入力と競合して使えなくなります。とくに理由がなければ、オンにしておくのがおすすめです。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"close_comment_form_after_sending\" inset hide-details\r\n                    v-model=\"settingsStore.settings.close_comment_form_after_sending\">\r\n                </v-switch>\r\n            </div>\r\n        </div>\r\n        <CommentMuteSettings v-model=\"comment_mute_settings_modal\" />\r\n    </SettingsBase>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport CommentMuteSettings from '@/components/Settings/CommentMuteSettings.vue';\r\nimport Niconico from '@/services/Niconico';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport useUserStore from '@/stores/UserStore';\r\nimport Utils from '@/utils';\r\nimport SettingsBase from '@/views/Settings/Base.vue';\r\n\r\nexport default Vue.extend({\r\n    name: 'Settings-Jikkyo',\r\n    components: {\r\n        SettingsBase,\r\n        CommentMuteSettings,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // コメントのミュート設定のモーダルを表示するか\r\n            comment_mute_settings_modal: false,\r\n\r\n            // ローディング中かどうか\r\n            is_loading: true,\r\n        };\r\n    },\r\n    computed: {\r\n        // SettingsStore / UserStore に this.settingsStore / this.userStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useSettingsStore, useUserStore),\r\n    },\r\n    async created() {\r\n\r\n        // アカウント情報を更新\r\n        await this.userStore.fetchUser();\r\n\r\n        // ローディング状態を解除\r\n        this.is_loading = false;\r\n\r\n        // もしハッシュ (# から始まるフラグメント) に何か指定されていたら、\r\n        // OAuth 連携のコールバックの結果が入っている可能性が高いので、パースを試みる\r\n        // アカウント情報更新より後にしないと Snackbar がうまく表示されない\r\n        if (location.hash !== '') {\r\n            const params = new URLSearchParams(location.hash.replace('#', ''));\r\n            if (params.get('status') !== null && params.get('detail') !== null) {\r\n                // コールバックの結果を取得できたので、OAuth 連携の結果を画面に通知する\r\n                const authorization_status = parseInt(params.get('status')!);\r\n                const authorization_detail = params.get('detail')!;\r\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\r\n                // URL からフラグメントを削除\r\n                // ref: https://stackoverflow.com/a/49373716/17124142\r\n                history.replaceState(null, '', ' ');\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async loginNiconicoAccount() {\r\n\r\n            // ログインしていない場合はエラーにする\r\n            if (this.userStore.is_logged_in === false) {\r\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\r\n                return;\r\n            }\r\n\r\n            // ニコニコアカウントと連携するための認証 URL を取得\r\n            const authorization_url = await Niconico.fetchAuthorizationURL();\r\n            if (authorization_url === null) {\r\n                return;\r\n            }\r\n\r\n            // モバイルデバイスではポップアップが事実上使えない (特に Safari ではブロックされてしまう) ので、素直にリダイレクトで実装する\r\n            if (Utils.isMobileDevice() === true) {\r\n                location.href = authorization_url;\r\n                return;\r\n            }\r\n\r\n            // OAuth 連携のため、認証 URL をポップアップウインドウで開く\r\n            // window.open() の第2引数はユニークなものにしておくと良いらしい\r\n            // ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1 (大変参考になりました)\r\n            const popup_window = window.open(authorization_url, 'KonomiTV-OAuthPopup', Utils.getWindowFeatures());\r\n            if (popup_window === null) {\r\n                this.$message.error('ポップアップウインドウを開けませんでした。');\r\n                return;\r\n            }\r\n\r\n            // 認証完了 or 失敗後、ポップアップウインドウから送信される文字列を受信\r\n            const onMessage = async (event) => {\r\n\r\n                // すでにウインドウが閉じている場合は実行しない\r\n                if (popup_window.closed) return;\r\n\r\n                // 受け取ったオブジェクトに KonomiTV-OAuthPopup キーがない or そもそもオブジェクトではない際は実行しない\r\n                // ブラウザの拡張機能から結構余計な message が飛んでくるっぽい…。\r\n                if (Utils.typeof(event.data) !== 'object') return;\r\n                if (('KonomiTV-OAuthPopup' in event.data) === false) return;\r\n\r\n                // 認証は完了したので、ポップアップウインドウを閉じ、リスナーを解除する\r\n                if (popup_window) popup_window.close();\r\n                window.removeEventListener('message', onMessage);\r\n\r\n                // ステータスコードと詳細メッセージを取得\r\n                const authorization_status = event.data['KonomiTV-OAuthPopup']['status'] as number;\r\n                const authorization_detail = event.data['KonomiTV-OAuthPopup']['detail'] as string;\r\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\r\n            };\r\n\r\n            // postMessage() を受信するリスナーを登録\r\n            window.addEventListener('message', onMessage);\r\n        },\r\n\r\n        async onOAuthCallbackReceived(authorization_status: number, authorization_detail: string) {\r\n            console.log(`NiconicoAuthCallbackAPI: Status: ${authorization_status} / Detail: ${authorization_detail}`);\r\n\r\n            // OAuth 連携に失敗した\r\n            if (authorization_status !== 200) {\r\n                if (authorization_detail.startsWith('Authorization was denied (access_denied)')) {\r\n                    this.$message.error('ニコニコアカウントとの連携がキャンセルされました。');\r\n                } else if (authorization_detail.startsWith('Failed to get access token (HTTP Error ')) {\r\n                    const error = authorization_detail.replace('Failed to get access token ', '');\r\n                    this.$message.error(`アクセストークンの取得に失敗しました。${error}`);\r\n                } else if (authorization_detail.startsWith('Failed to get access token (Connection Timeout)')) {\r\n                    this.$message.error('アクセストークンの取得に失敗しました。ニコニコで障害が発生している可能性があります。');\r\n                } else if (authorization_detail.startsWith('Failed to get user information (HTTP Error ')) {\r\n                    const error = authorization_detail.replace('Failed to get user information ', '');\r\n                    this.$message.error(`ニコニコアカウントのユーザー情報の取得に失敗しました。${error}`);\r\n                } else if (authorization_detail.startsWith('Failed to get user information (Connection Timeout)')) {\r\n                    this.$message.error('ニコニコアカウントのユーザー情報の取得に失敗しました。ニコニコで障害が発生している可能性があります。');\r\n                } else {\r\n                    this.$message.error(`ニコニコアカウントとの連携に失敗しました。(${authorization_detail})`);\r\n                }\r\n                return;\r\n            }\r\n\r\n            // アカウント情報を強制的に更新\r\n            await this.userStore.fetchUser(true);\r\n\r\n            this.$message.success('ニコニコアカウントと連携しました。');\r\n        },\r\n\r\n        async logoutNiconicoAccount() {\r\n\r\n            // ニコニコアカウント連携解除 API にリクエスト\r\n            const result = await Niconico.logoutAccount();\r\n            if (result === false) {\r\n                return;\r\n            }\r\n\r\n            // アカウント情報を強制的に更新\r\n            await this.userStore.fetchUser(true);\r\n\r\n            this.$message.success('ニコニコアカウントとの連携を解除しました。');\r\n        },\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.settings__content {\r\n    opacity: 1;\r\n    transition: opacity 0.4s;\r\n\r\n    &--loading {\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n.niconico-account {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 120px;\r\n    padding: 20px;\r\n    border-radius: 15px;\r\n    background: var(--v-background-lighten2);\r\n    @include tablet-horizontal {\r\n        align-items: normal;\r\n        flex-direction: column;\r\n        height: auto;\r\n        padding: 16px;\r\n    }\r\n    @include tablet-vertical {\r\n        align-items: normal;\r\n        flex-direction: column;\r\n        height: auto;\r\n        padding: 16px;\r\n        .niconico-account-wrapper {\r\n            .niconico-account__info {\r\n                margin-left: 16px !important;\r\n                margin-right: 0 !important;\r\n                &-name-text {\r\n                    font-size: 18.5px;\r\n                }\r\n                &-description {\r\n                    font-size: 13.5px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    @include smartphone-horizontal {\r\n        align-items: normal;\r\n        flex-direction: column;\r\n        height: auto;\r\n        padding: 16px;\r\n        border-radius: 10px;\r\n        .niconico-account-wrapper {\r\n            .niconico-account__info {\r\n                margin-right: 0 !important;\r\n            }\r\n        }\r\n    }\r\n    @include smartphone-horizontal-short {\r\n        .niconico-account-wrapper {\r\n            .niconico-account__info {\r\n                margin-left: 16px !important;\r\n                &-name-text {\r\n                    font-size: 18px;\r\n                }\r\n                &-description {\r\n                    font-size: 13px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    @include smartphone-vertical {\r\n        align-items: normal;\r\n        flex-direction: column;\r\n        height: auto;\r\n        padding: 16px 12px;\r\n        border-radius: 10px;\r\n        .niconico-account-wrapper {\r\n            .niconico-account__info {\r\n                margin-left: 12px !important;\r\n                margin-right: 0px !important;\r\n                &-name-text {\r\n                    font-size: 17px;\r\n                }\r\n                &-description {\r\n                    font-size: 13px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &--anonymous {\r\n        @include tablet-vertical {\r\n            .niconico-account__login {\r\n                margin-top: 12px;\r\n            }\r\n        }\r\n        @include smartphone-horizontal {\r\n            .niconico-account__login {\r\n                margin-top: 12px;\r\n            }\r\n        }\r\n        @include smartphone-horizontal-short {\r\n            .niconico-account-wrapper {\r\n                svg {\r\n                    display: none;\r\n                }\r\n                .niconico-account__info {\r\n                    margin-left: 0 !important;\r\n                }\r\n            }\r\n        }\r\n        @include smartphone-vertical {\r\n            padding-top: 20px;\r\n            .niconico-account__login {\r\n                margin-top: 16px;\r\n            }\r\n            .niconico-account-wrapper {\r\n                svg {\r\n                    display: none;\r\n                }\r\n                .niconico-account__info {\r\n                    margin-left: 0 !important;\r\n                    margin-right: 0 !important;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &-wrapper {\r\n        display: flex;\r\n        align-items: center;\r\n        min-width: 0;\r\n        height: 80px;\r\n        @include smartphone-vertical {\r\n            height: 60px;\r\n        }\r\n    }\r\n\r\n    &__icon {\r\n        flex-shrink: 0;\r\n        min-width: 80px;\r\n        height: 100%;\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n        // 読み込まれるまでのアイコンの背景\r\n        background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n        // 低解像度で表示する画像がぼやけないようにする\r\n        // ref: https://sho-log.com/chrome-image-blurred/\r\n        image-rendering: -webkit-optimize-contrast;\r\n        @include smartphone-vertical {\r\n            width: 60px;\r\n            min-width: 60px;\r\n            height: 60px;\r\n        }\r\n    }\r\n\r\n    &__info {\r\n        display: flex;\r\n        flex-direction: column;\r\n        min-width: 0;\r\n        margin-left: 20px;\r\n        margin-right: 16px;\r\n\r\n        &-name {\r\n            display: inline-flex;\r\n            align-items: center;\r\n            height: 33px;\r\n            @include smartphone-vertical {\r\n                height: auto;\r\n            }\r\n\r\n            &-text {\r\n                display: inline-block;\r\n                font-size: 20px;\r\n                color: var(--v-text-base);\r\n                font-weight: bold;\r\n                overflow: hidden;\r\n                white-space: nowrap;\r\n                text-overflow: ellipsis;  // はみ出た部分を … で省略\r\n            }\r\n        }\r\n\r\n        &-description {\r\n            display: inline-block;\r\n            margin-top: 4px;\r\n            color: var(--v-text-darken1);\r\n            font-size: 14px;\r\n        }\r\n    }\r\n\r\n    &__login {\r\n        border-radius: 7px;\r\n        font-size: 16px;\r\n        letter-spacing: 0;\r\n        @include tablet-horizontal {\r\n            height: 50px !important;\r\n            margin-top: 12px;\r\n            margin-right: auto;\r\n        }\r\n        @include tablet-vertical {\r\n            height: 42px !important;\r\n            margin-top: 8px;\r\n            margin-right: auto;\r\n            font-size: 14.5px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            height: 42px !important;\r\n            margin-top: 8px;\r\n            margin-right: auto;\r\n            font-size: 14.5px;\r\n        }\r\n        @include smartphone-vertical {\r\n            height: 42px !important;\r\n            margin-top: 16px;\r\n            margin-right: auto;\r\n            font-size: 14.5px;\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jikkyo.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jikkyo.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Jikkyo.vue?vue&type=template&id=472f3155&scoped=true\"\nimport script from \"./Jikkyo.vue?vue&type=script&lang=ts\"\nexport * from \"./Jikkyo.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Jikkyo.vue?vue&type=style&index=0&id=472f3155&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"472f3155\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:server-surface-16-filled\",\"width\":\"22px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"サーバー設定\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"鋭意開発中…\")])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- ベース画面の中にそれぞれの設定画面で異なる部分を記述する -->\r\n    <SettingsBase>\r\n        <h2 class=\"settings__heading\">\r\n            <router-link v-ripple class=\"settings__back-button\" to=\"/settings/\">\r\n                <Icon icon=\"fluent:arrow-left-12-filled\" width=\"25px\" />\r\n            </router-link>\r\n            <Icon icon=\"fluent:server-surface-16-filled\" width=\"22px\" />\r\n            <span class=\"ml-2\">サーバー設定</span>\r\n        </h2>\r\n        <div class=\"settings__content\">\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">鋭意開発中…</div>\r\n            </div>\r\n        </div>\r\n    </SettingsBase>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport Vue from 'vue';\r\n\r\nimport SettingsBase from '@/views/Settings/Base.vue';\r\n\r\nexport default Vue.extend({\r\n    name: 'Settings-Server',\r\n    components: {\r\n        SettingsBase,\r\n    }\r\n});\r\n\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Server.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Server.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Server.vue?vue&type=template&id=7cf86dbd\"\nimport script from \"./Server.vue?vue&type=script&lang=ts\"\nexport * from \"./Server.vue?vue&type=script&lang=ts\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"22px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"Twitter\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[_c('div',{staticClass:\"twitter-accounts\"},[(_vm.userStore.user !== null && _vm.userStore.user.twitter_accounts.length > 0)?_c('div',{staticClass:\"twitter-accounts__heading\"},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-board-20-filled\",\"height\":\"30\"}}),_vm._v(\"連携中のアカウント \")],1):_vm._e(),(_vm.userStore.user === null || _vm.userStore.user.twitter_accounts.length === 0)?_c('div',{staticClass:\"twitter-accounts__guide\"},[_c('Icon',{staticClass:\"flex-shrink-0\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"45px\"}}),_c('div',{staticClass:\"ml-4\"},[_c('div',{staticClass:\"font-weight-bold text-h6\"},[_vm._v(\"Twitter アカウントと連携していません\")]),_c('div',{staticClass:\"text--text text--darken-1 text-subtitle-2 mt-1\"},[_vm._v(\" Twitter アカウントと連携すると、テレビを見ながら Twitter にツイートしたり、ほかの実況ツイートをリアルタイムで表示できるようになります。 \")])])],1):_vm._e(),_vm._l(((_vm.userStore.user !== null ? _vm.userStore.user.twitter_accounts: [])),function(twitter_account){return _c('div',{key:twitter_account.id,staticClass:\"twitter-account\"},[_c('img',{staticClass:\"twitter-account__icon\",attrs:{\"src\":twitter_account.icon_url}}),_c('div',{staticClass:\"twitter-account__info\"},[_c('div',{staticClass:\"twitter-account__info-name\"},[_c('span',{staticClass:\"twitter-account__info-name-text\"},[_vm._v(_vm._s(twitter_account.name))])]),_c('span',{staticClass:\"twitter-account__info-screen-name\"},[_vm._v(\" @\"+_vm._s(twitter_account.screen_name)+\" \"),(twitter_account.is_oauth_session === true)?_c('span',[_vm._v(\"(Legacy Session)\")]):_vm._e()])]),_c('v-btn',{staticClass:\"twitter-account__logout ml-auto\",attrs:{\"width\":\"124\",\"height\":\"52\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logoutTwitterAccount(twitter_account.screen_name)}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-disconnected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携解除 \")],1)],1)}),_c('v-btn',{staticClass:\"twitter-account__login\",attrs:{\"color\":\"secondary\",\"max-width\":\"250\",\"height\":\"50\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginTwitterAccountWithPasswordForm()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携するアカウントを追加 \")],1),_c('v-dialog',{attrs:{\"max-width\":\"600\"},model:{value:(_vm.twitter_password_auth_dialog),callback:function ($$v) {_vm.twitter_password_auth_dialog=$$v},expression:\"twitter_password_auth_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center pt-6 font-weight-bold\"},[_vm._v(\"Twitter にログイン\")]),_c('v-card-text',{staticClass:\"pt-2 pb-0\"},[_c('p',{staticClass:\"mb-1\"},[_vm._v(\"2023/07 以降、Twitter のサードパーティー API の事実上の廃止により、従来のアプリ連携では Twitter にアクセスできなくなりました。\")]),_c('p',{staticClass:\"mb-1\"},[_vm._v(\"そこで KonomiTV では、代わりに \"),_c('a',{attrs:{\"href\":\"https://github.com/tsukumijima/tweepy-authlib\",\"target\":\"_blank\"}},[_vm._v(\"ユーザー名とパスワードでログイン\")]),_vm._v(\" することで、これまで通り Twitter 連携ができるようにしています (2要素認証を設定しているアカウントには対応していません) 。\")]),_c('p',{staticClass:\"mb-1\"},[_vm._v(\"ここで入力したパスワードは一切保存されず、取得した Cookie セッションはローカルの KonomiTV サーバーにのみ保存されます。Cookie セッションが Twitter API 以外の外部サービスに送信されることはありません。\")]),_c('p',{staticClass:\"mb-1\"},[_vm._v(\"万全は期していますが、非公式な方法のため、使い方次第ではアカウントにペナルティが適用される可能性もあります。自己の責任のもとでご利用ください。\")]),_c('v-form',{ref:\"twitter_form\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{ref:\"twitter_screen_name\",staticClass:\"settings__item-form mt-6\",attrs:{\"outlined\":\"\",\"label\":\"ユーザー名 (@ から始まる ID)\",\"placeholder\":\"screen_name\",\"dense\":_vm.is_form_dense,\"rules\":[(value) => !!value || 'ユーザー名を入力してください。']},model:{value:(_vm.twitter_screen_name),callback:function ($$v) {_vm.twitter_screen_name=$$v},expression:\"twitter_screen_name\"}}),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"label\":\"パスワード\",\"dense\":_vm.is_form_dense,\"type\":_vm.twitter_password_showing ? 'text' : 'password',\"append-icon\":_vm.twitter_password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[(value) => !!value || 'パスワードを入力してください。']},on:{\"click:append\":function($event){_vm.twitter_password_showing = !_vm.twitter_password_showing}},model:{value:(_vm.twitter_password),callback:function ($$v) {_vm.twitter_password=$$v},expression:\"twitter_password\"}})],1)],1),_c('v-card-actions',{staticClass:\"pt-0 px-6 pb-5\"},[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"text\",\"height\":\"40\",\"text\":\"\"},on:{\"click\":function($event){_vm.twitter_password_auth_dialog = false}}},[_vm._v(\"キャンセル\")]),_c('v-btn',{staticClass:\"px-4\",attrs:{\"color\":\"secondary\",\"height\":\"40\"},on:{\"click\":function($event){return _vm.loginTwitterAccountWithPassword()}}},[_vm._v(\"ログイン\")])],1)],1)],1)],2),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"fold_panel_after_sending_tweet\"}},[_vm._v(\"ツイート送信後にパネルを折りたたむ\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"fold_panel_after_sending_tweet\"}},[_vm._v(\" この設定をオンにすると、ツイートを送信した後に、パネルが自動で折りたたまれます。\"),_c('br'),_vm._v(\" ツイートするとき以外はできるだけ映像を大きくして見たい方におすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"fold_panel_after_sending_tweet\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.fold_panel_after_sending_tweet),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"fold_panel_after_sending_tweet\", $$v)},expression:\"settingsStore.settings.fold_panel_after_sending_tweet\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"reset_hashtag_when_program_switches\"}},[_vm._v(\"番組が切り替わったときにハッシュタグフォームをリセットする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"reset_hashtag_when_program_switches\"}},[_vm._v(\" チャンネルを切り替えたときや、視聴中の番組が終了し次の番組の放送が開始されたときに、ハッシュタグフォームをリセットするかを設定します。\"),_c('br'),_vm._v(\" この設定をオンにしておけば、「誤って前番組のハッシュタグをつけたまま次番組の実況ツイートをしてしまう」といったミスを回避できます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"reset_hashtag_when_program_switches\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.reset_hashtag_when_program_switches),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"reset_hashtag_when_program_switches\", $$v)},expression:\"settingsStore.settings.reset_hashtag_when_program_switches\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"auto_add_watching_channel_hashtag\"}},[_vm._v(\"視聴中のチャンネルに対応する局タグを自動で追加する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"auto_add_watching_channel_hashtag\"}},[_vm._v(\" この設定をオンにすると、視聴中のチャンネルに対応する局タグ (#nhk, #tokyomx など) がハッシュタグフォームに自動で追加されます。\"),_c('br'),_vm._v(\" 現時点で、局タグは三大首都圏の地上波・BS の一部チャンネル・AT-X にのみ対応しています。\"),_c('br'),_vm._v(\" なお、ビデオをみるときは視聴中のチャンネルに対応する局タグは追加されません。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"auto_add_watching_channel_hashtag\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.auto_add_watching_channel_hashtag),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"auto_add_watching_channel_hashtag\", $$v)},expression:\"settingsStore.settings.auto_add_watching_channel_hashtag\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"デフォルトで表示される Twitter タブ内のタブ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 視聴画面を開いたときに、パネルの Twitter タブの中で最初に表示されるタブを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.twitter_active_tab},model:{value:(_vm.settingsStore.settings.twitter_active_tab),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"twitter_active_tab\", $$v)},expression:\"settingsStore.settings.twitter_active_tab\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ツイートにつけるハッシュタグの位置\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" ツイート本文から見て、ハッシュタグをどの位置につけてツイートするかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tweet_hashtag_position},model:{value:(_vm.settingsStore.settings.tweet_hashtag_position),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tweet_hashtag_position\", $$v)},expression:\"settingsStore.settings.tweet_hashtag_position\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ツイートするキャプチャに番組タイトルの透かしを描画する\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" ツイートするキャプチャに、透かしとして視聴中の番組タイトルを描画するかを設定します。\"),_c('br'),_vm._v(\" 透かしの描画位置は 左上・右上・左下・右下 から選択できます。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tweet_capture_watermark_position},model:{value:(_vm.settingsStore.settings.tweet_capture_watermark_position),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tweet_capture_watermark_position\", $$v)},expression:\"settingsStore.settings.tweet_capture_watermark_position\"}})],1)]),_c('v-overlay',{attrs:{\"value\":_vm.is_twitter_password_auth_sending,\"z-index\":\"300\"}},[_c('v-progress-circular',{attrs:{\"color\":\"secondary\",\"indeterminate\":\"\",\"size\":\"64\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\nimport Message from '@/message';\r\nimport APIClient from '@/services/APIClient';\r\n\r\n\r\n/** Twitter アカウントと連携するための認証 URL を表すインターフェイス */\r\nexport interface ITwitterAuthURL {\r\n    authorization_url: string;\r\n}\r\n\r\n/** ツイートの送信結果を表すインターフェイス */\r\nexport interface ITweetResult {\r\n    is_success: boolean;\r\n    tweet_url?: string;\r\n    detail: string;\r\n}\r\n\r\nexport interface ITwitterPasswordAuthRequest {\r\n    screen_name: string;\r\n    password: string;\r\n}\r\n\r\n\r\nclass Twitter {\r\n\r\n    /**\r\n     * Twitter アカウントと連携するための認証 URL を取得する\r\n     * @returns 認証 URL or 認証 URL の取得に失敗した場合は null\r\n     */\r\n    static async fetchAuthorizationURL(): Promise<string | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.get<ITwitterAuthURL>('/twitter/auth');\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'Twitter アカウントとの連携用の認証 URL を取得できませんでした。');\r\n            return null;\r\n        }\r\n\r\n        return response.data.authorization_url;\r\n    }\r\n\r\n\r\n    /**\r\n     * Twitter アカウントとパスワード認証で連携する\r\n     * @param twitter_password_auth_request スクリーンネームとパスワード\r\n     * @returns ログインできた場合は true, 失敗した場合は false\r\n     */\r\n    static async authWithPassword(twitter_password_auth_request: ITwitterPasswordAuthRequest): Promise<boolean> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.post('/twitter/password-auth', twitter_password_auth_request);\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            if (typeof response.data.detail === 'string') {\r\n                if (response.data.detail.startsWith('Failed to authenticate with password')) {\r\n                    const error = response.data.detail.match(/Message: (.+)\\)/)![1];\r\n                    Message.error(`ログインに失敗しました。${error}`);\r\n                    return false;\r\n                } else if (response.data.detail.startsWith('Unexpected error occurred while authenticate with password')) {\r\n                    const error = response.data.detail.match(/Message: (.+)\\)/)![1];\r\n                    Message.error(`ログインフローの途中で予期せぬエラーが発生しました。${error}`);\r\n                    return false;\r\n                } else if (response.data.detail.startsWith('Failed to get user information')) {\r\n                    Message.error('Twitter アカウントのユーザー情報の取得に失敗しました。');\r\n                    return false;\r\n                }\r\n            }\r\n            // 上記以外のエラー\r\n            APIClient.showGenericError(response, 'Twitter アカウントとの連携に失敗しました。');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在ログイン中のユーザーアカウントに紐づく Twitter アカウントとの連携を解除する\r\n     * @param screen_name Twitter のスクリーンネーム\r\n     * @returns 連携解除に成功した場合は true, 失敗した場合は false\r\n     */\r\n    static async logoutAccount(screen_name: string): Promise<boolean> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.delete(`/twitter/accounts/${screen_name}`);\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'Twitter アカウントとの連携を解除できませんでした。');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * ツイートを送信する\r\n     * @param screen_name Twitter のスクリーンネーム\r\n     * @param text ツイート本文\r\n     * @param captures 添付するキャプチャ画像\r\n     */\r\n    static async sendTweet(screen_name: string, text: string, captures: Blob[]): Promise<{message: string; is_error: boolean;}> {\r\n\r\n        // multipart/form-data でツイート本文と画像（選択されている場合）を送る\r\n        const form_data = new FormData();\r\n        form_data.append('tweet', text);\r\n        for (const tweet_capture of captures) {\r\n            form_data.append('images', tweet_capture);\r\n        }\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.post<ITweetResult>(`/twitter/accounts/${screen_name}/tweets`, form_data, {\r\n            headers: {'Content-Type': 'multipart/form-data'},\r\n        });\r\n\r\n        // エラー処理 (API リクエスト自体に失敗した場合)\r\n        if (response.type === 'error') {\r\n            if (typeof response.data.detail === 'string') {\r\n                if (Number.isNaN(response.status)) {\r\n                    // HTTP リクエスト自体が失敗し、HTTP ステータスコードが取得できなかった場合\r\n                    return {message: `ツイートの送信に失敗しました。(${response.data.detail})`, is_error: true};\r\n                } else {\r\n                    // HTTP リクエスト自体は成功したが、API からエラーレスポンスが返ってきた場合\r\n                    return {message: `ツイートの送信に失敗しました。(HTTP Error ${response.status} / ${response.data.detail})`, is_error: true};\r\n                }\r\n            } else {\r\n                return {message: `ツイートの送信に失敗しました。(HTTP Error ${response.status})`, is_error: true};\r\n            }\r\n        }\r\n\r\n        // 成功 or 失敗に関わらず detail の内容をそのまま通知する\r\n        if (response.data.is_success === false) {\r\n            // ツイート失敗\r\n            return {message: response.data.detail, is_error: true};\r\n        } else {\r\n            // ツイート成功\r\n            return {message: response.data.detail, is_error: false};\r\n        }\r\n    }\r\n}\r\n\r\nexport default Twitter;\r\n","<template>\r\n    <!-- ベース画面の中にそれぞれの設定画面で異なる部分を記述する -->\r\n    <SettingsBase>\r\n        <h2 class=\"settings__heading\">\r\n            <router-link v-ripple class=\"settings__back-button\" to=\"/settings/\">\r\n                <Icon icon=\"fluent:arrow-left-12-filled\" width=\"25px\" />\r\n            </router-link>\r\n            <Icon icon=\"fa-brands:twitter\" width=\"22px\" />\r\n            <span class=\"ml-3\">Twitter</span>\r\n        </h2>\r\n        <div class=\"settings__content\" :class=\"{'settings__content--loading': is_loading}\">\r\n            <div class=\"twitter-accounts\">\r\n                <div class=\"twitter-accounts__heading\" v-if=\"userStore.user !== null && userStore.user.twitter_accounts.length > 0\">\r\n                    <Icon icon=\"fluent:person-board-20-filled\" class=\"mr-2\" height=\"30\" />連携中のアカウント\r\n                </div>\r\n                <div class=\"twitter-accounts__guide\" v-if=\"userStore.user === null || userStore.user.twitter_accounts.length === 0\">\r\n                    <Icon class=\"flex-shrink-0\" icon=\"fa-brands:twitter\" width=\"45px\" />\r\n                    <div class=\"ml-4\">\r\n                        <div class=\"font-weight-bold text-h6\">Twitter アカウントと連携していません</div>\r\n                        <div class=\"text--text text--darken-1 text-subtitle-2 mt-1\">\r\n                            Twitter アカウントと連携すると、テレビを見ながら Twitter にツイートしたり、ほかの実況ツイートをリアルタイムで表示できるようになります。\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"twitter-account\"\r\n                    v-for=\"twitter_account in (userStore.user !== null ? userStore.user.twitter_accounts: [])\"\r\n                    :key=\"twitter_account.id\">\r\n                    <img class=\"twitter-account__icon\" :src=\"twitter_account.icon_url\">\r\n                    <div class=\"twitter-account__info\">\r\n                        <div class=\"twitter-account__info-name\">\r\n                            <span class=\"twitter-account__info-name-text\">{{twitter_account.name}}</span>\r\n                        </div>\r\n                        <span class=\"twitter-account__info-screen-name\">\r\n                            @{{twitter_account.screen_name}}\r\n                            <span v-if=\"twitter_account.is_oauth_session === true\">(Legacy Session)</span>\r\n                        </span>\r\n                    </div>\r\n                    <v-btn class=\"twitter-account__logout ml-auto\" width=\"124\" height=\"52\" depressed\r\n                        @click=\"logoutTwitterAccount(twitter_account.screen_name)\">\r\n                        <Icon icon=\"fluent:plug-disconnected-20-filled\" class=\"mr-2\" height=\"24\" />連携解除\r\n                    </v-btn>\r\n                </div>\r\n                <v-btn class=\"twitter-account__login\" color=\"secondary\" max-width=\"250\" height=\"50\" depressed\r\n                    @click=\"loginTwitterAccountWithPasswordForm()\">\r\n                    <Icon icon=\"fluent:plug-connected-20-filled\" class=\"mr-2\" height=\"24\" />連携するアカウントを追加\r\n                </v-btn>\r\n                <v-dialog max-width=\"600\" v-model=\"twitter_password_auth_dialog\">\r\n                    <v-card>\r\n                        <v-card-title class=\"justify-center pt-6 font-weight-bold\">Twitter にログイン</v-card-title>\r\n                        <!-- スクリーンネームとパスワードフォーム -->\r\n                        <v-card-text class=\"pt-2 pb-0\">\r\n                            <p class=\"mb-1\">2023/07 以降、Twitter のサードパーティー API の事実上の廃止により、従来のアプリ連携では Twitter にアクセスできなくなりました。</p>\r\n                            <p class=\"mb-1\">そこで KonomiTV では、代わりに <a href=\"https://github.com/tsukumijima/tweepy-authlib\" target=\"_blank\">ユーザー名とパスワードでログイン</a> することで、これまで通り Twitter 連携ができるようにしています (2要素認証を設定しているアカウントには対応していません) 。</p>\r\n                            <p class=\"mb-1\">ここで入力したパスワードは一切保存されず、取得した Cookie セッションはローカルの KonomiTV サーバーにのみ保存されます。Cookie セッションが Twitter API 以外の外部サービスに送信されることはありません。</p>\r\n                            <p class=\"mb-1\">万全は期していますが、非公式な方法のため、使い方次第ではアカウントにペナルティが適用される可能性もあります。自己の責任のもとでご利用ください。</p>\r\n                            <v-form class=\"settings__item\" ref=\"twitter_form\" @submit.prevent>\r\n                                <v-text-field class=\"settings__item-form mt-6\" outlined label=\"ユーザー名 (@ から始まる ID)\" placeholder=\"screen_name\"\r\n                                    ref=\"twitter_screen_name\"\r\n                                    :dense=\"is_form_dense\"\r\n                                    v-model=\"twitter_screen_name\"\r\n                                    :rules=\"[(value) => !!value || 'ユーザー名を入力してください。']\">\r\n                                </v-text-field>\r\n                                <v-text-field class=\"settings__item-form\" outlined label=\"パスワード\"\r\n                                    :dense=\"is_form_dense\"\r\n                                    v-model=\"twitter_password\"\r\n                                    :type=\"twitter_password_showing ? 'text' : 'password'\"\r\n                                    :append-icon=\"twitter_password_showing ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                                    :rules=\"[(value) => !!value || 'パスワードを入力してください。']\"\r\n                                    @click:append=\"twitter_password_showing = !twitter_password_showing\">\r\n                                </v-text-field>\r\n                            </v-form>\r\n                        </v-card-text>\r\n                        <v-card-actions class=\"pt-0 px-6 pb-5\">\r\n                            <v-spacer></v-spacer>\r\n                            <v-btn color=\"text\" height=\"40\" text @click=\"twitter_password_auth_dialog = false\">キャンセル</v-btn>\r\n                            <v-btn color=\"secondary\" height=\"40\" class=\"px-4\" @click=\"loginTwitterAccountWithPassword()\">ログイン</v-btn>\r\n                        </v-card-actions>\r\n                    </v-card>\r\n                </v-dialog>\r\n            </div>\r\n            <div class=\"settings__item settings__item--switch\">\r\n                <label class=\"settings__item-heading\" for=\"fold_panel_after_sending_tweet\">ツイート送信後にパネルを折りたたむ</label>\r\n                <label class=\"settings__item-label\" for=\"fold_panel_after_sending_tweet\">\r\n                    この設定をオンにすると、ツイートを送信した後に、パネルが自動で折りたたまれます。<br>\r\n                    ツイートするとき以外はできるだけ映像を大きくして見たい方におすすめです。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"fold_panel_after_sending_tweet\" inset hide-details\r\n                    v-model=\"settingsStore.settings.fold_panel_after_sending_tweet\">\r\n                </v-switch>\r\n            </div>\r\n            <div class=\"settings__item settings__item--switch\">\r\n                <label class=\"settings__item-heading\" for=\"reset_hashtag_when_program_switches\">番組が切り替わったときにハッシュタグフォームをリセットする</label>\r\n                <label class=\"settings__item-label\" for=\"reset_hashtag_when_program_switches\">\r\n                    チャンネルを切り替えたときや、視聴中の番組が終了し次の番組の放送が開始されたときに、ハッシュタグフォームをリセットするかを設定します。<br>\r\n                    この設定をオンにしておけば、「誤って前番組のハッシュタグをつけたまま次番組の実況ツイートをしてしまう」といったミスを回避できます。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"reset_hashtag_when_program_switches\" inset hide-details\r\n                    v-model=\"settingsStore.settings.reset_hashtag_when_program_switches\">\r\n                </v-switch>\r\n            </div>\r\n            <div class=\"settings__item settings__item--switch\">\r\n                <label class=\"settings__item-heading\" for=\"auto_add_watching_channel_hashtag\">視聴中のチャンネルに対応する局タグを自動で追加する</label>\r\n                <label class=\"settings__item-label\" for=\"auto_add_watching_channel_hashtag\">\r\n                    この設定をオンにすると、視聴中のチャンネルに対応する局タグ (#nhk, #tokyomx など) がハッシュタグフォームに自動で追加されます。<br>\r\n                    現時点で、局タグは三大首都圏の地上波・BS の一部チャンネル・AT-X にのみ対応しています。<br>\r\n                    なお、ビデオをみるときは視聴中のチャンネルに対応する局タグは追加されません。<br>\r\n                </label>\r\n                <v-switch class=\"settings__item-switch\" id=\"auto_add_watching_channel_hashtag\" inset hide-details\r\n                    v-model=\"settingsStore.settings.auto_add_watching_channel_hashtag\">\r\n                </v-switch>\r\n            </div>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">デフォルトで表示される Twitter タブ内のタブ</div>\r\n                <div class=\"settings__item-label\">\r\n                    視聴画面を開いたときに、パネルの Twitter タブの中で最初に表示されるタブを設定します。<br>\r\n                </div>\r\n                <v-select class=\"settings__item-form\" outlined hide-details :dense=\"is_form_dense\"\r\n                    :items=\"twitter_active_tab\" v-model=\"settingsStore.settings.twitter_active_tab\">\r\n                </v-select>\r\n            </div>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">ツイートにつけるハッシュタグの位置</div>\r\n                <div class=\"settings__item-label\">\r\n                    ツイート本文から見て、ハッシュタグをどの位置につけてツイートするかを設定します。<br>\r\n                </div>\r\n                <v-select class=\"settings__item-form\" outlined hide-details :dense=\"is_form_dense\"\r\n                    :items=\"tweet_hashtag_position\" v-model=\"settingsStore.settings.tweet_hashtag_position\">\r\n                </v-select>\r\n            </div>\r\n            <div class=\"settings__item\">\r\n                <div class=\"settings__item-heading\">ツイートするキャプチャに番組タイトルの透かしを描画する</div>\r\n                <div class=\"settings__item-label\">\r\n                    ツイートするキャプチャに、透かしとして視聴中の番組タイトルを描画するかを設定します。<br>\r\n                    透かしの描画位置は 左上・右上・左下・右下 から選択できます。<br>\r\n                </div>\r\n                <v-select class=\"settings__item-form\" outlined hide-details :dense=\"is_form_dense\"\r\n                    :items=\"tweet_capture_watermark_position\" v-model=\"settingsStore.settings.tweet_capture_watermark_position\">\r\n                </v-select>\r\n            </div>\r\n        </div>\r\n        <v-overlay :value=\"is_twitter_password_auth_sending\" z-index=\"300\">\r\n            <v-progress-circular color=\"secondary\" indeterminate size=\"64\" />\r\n        </v-overlay>\r\n    </SettingsBase>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport Twitter from '@/services/Twitter';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport useUserStore from '@/stores/UserStore';\r\nimport Utils from '@/utils';\r\nimport SettingsBase from '@/views/Settings/Base.vue';\r\n\r\nexport default Vue.extend({\r\n    name: 'Settings-Twitter',\r\n    components: {\r\n        SettingsBase,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // フォームを小さくするかどうか\r\n            is_form_dense: Utils.isSmartphoneHorizontal(),\r\n\r\n            // デフォルトで表示されるパネルのタブの選択肢\r\n            twitter_active_tab: [\r\n                {text: 'ツイート検索タブ', value: 'Search'},\r\n                {text: 'タイムラインタブ', value: 'Timeline'},\r\n                {text: 'キャプチャタブ', value: 'Capture'},\r\n            ],\r\n\r\n            // ツイートにつけるハッシュタグの位置の選択肢\r\n            tweet_hashtag_position: [\r\n                {text: 'ツイート本文の前に追加する', value: 'Prepend'},\r\n                {text: 'ツイート本文の後に追加する', value: 'Append'},\r\n                {text: 'ツイート本文の前に追加してから改行する', value: 'PrependWithLineBreak'},\r\n                {text: 'ツイート本文の後に改行してから追加する', value: 'AppendWithLineBreak'},\r\n            ],\r\n\r\n            // ツイートするキャプチャに番組タイトルの透かしを描画する位置の選択肢\r\n            tweet_capture_watermark_position: [\r\n                {text: '透かしを描画しない', value: 'None'},\r\n                {text: '透かしをキャプチャの左上に描画する', value: 'TopLeft'},\r\n                {text: '透かしをキャプチャの右上に描画する', value: 'TopRight'},\r\n                {text: '透かしをキャプチャの左下に描画する', value: 'BottomLeft'},\r\n                {text: '透かしをキャプチャの右下に描画する', value: 'BottomRight'},\r\n            ],\r\n\r\n            // ローディング中かどうか\r\n            is_loading: true,\r\n\r\n            // パスワード認証実行中かどうか\r\n            is_twitter_password_auth_sending: false,\r\n\r\n            // パスワード認証用ダイヤログ\r\n            twitter_password_auth_dialog: false,\r\n\r\n            // Twitter のスクリーンネームとパスワード\r\n            twitter_screen_name: '',\r\n            twitter_password: '',\r\n            twitter_password_showing: false,\r\n        };\r\n    },\r\n    computed: {\r\n        // SettingsStore / UserStore に this.settingsStore / this.userStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useSettingsStore, useUserStore),\r\n    },\r\n    async created() {\r\n\r\n        // アカウント情報を更新\r\n        await this.userStore.fetchUser();\r\n\r\n        // ローディング状態を解除\r\n        this.is_loading = false;\r\n    },\r\n    methods: {\r\n        async loginTwitterAccountWithPasswordForm() {\r\n            // ログインしていない場合はエラーにする\r\n            if (this.userStore.is_logged_in === false) {\r\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\r\n                await Utils.sleep(0.01);\r\n                this.twitter_password_auth_dialog = false;\r\n                return;\r\n            }\r\n            this.twitter_password_auth_dialog = true;\r\n        },\r\n\r\n        async loginTwitterAccountWithPassword() {\r\n\r\n            // バリデーションを実行\r\n            if ((this.$refs.twitter_form as any).validate() === false) {\r\n                return;\r\n            }\r\n\r\n            // Twitter パスワード認証 API にリクエスト\r\n            this.is_twitter_password_auth_sending = true;\r\n            const result = await Twitter.authWithPassword({\r\n                screen_name: this.twitter_screen_name,\r\n                password: this.twitter_password,\r\n            });\r\n            this.is_twitter_password_auth_sending = false;\r\n            if (result === false) {\r\n                return;\r\n            }\r\n\r\n            // アカウント情報を強制的に更新\r\n            await this.userStore.fetchUser(true);\r\n            if (this.userStore.user === null) {\r\n                this.$message.error('アカウント情報を取得できませんでした。');\r\n                return;\r\n            }\r\n\r\n            // ログイン中のユーザーに紐づく Twitter アカウントのうち、一番 updated_at が新しいものを取得\r\n            // ログインすると updated_at が更新されるため、この時点で一番 updated_at が新しいアカウントが今回連携したものだと判断できる\r\n            // ref: https://stackoverflow.com/a/12192544/17124142 (ISO8601 のソートアルゴリズム)\r\n            const current_twitter_account = [...this.userStore.user.twitter_accounts].sort((a, b) => {\r\n                return (a.updated_at < b.updated_at) ? 1 : ((a.updated_at > b.updated_at) ? -1 : 0);\r\n            })[0];\r\n\r\n            this.$message.success(`Twitter @${current_twitter_account.screen_name} と連携しました。`);\r\n\r\n            // フォームをリセットし、非表示にする\r\n            (this.$refs.twitter_form as any).reset();\r\n            this.twitter_password_auth_dialog = false;\r\n        },\r\n\r\n        async logoutTwitterAccount(screen_name: string) {\r\n\r\n            // Twitter アカウント連携解除 API にリクエスト\r\n            const result = await Twitter.logoutAccount(screen_name);\r\n            if (result === false) {\r\n                return;\r\n            }\r\n\r\n            // アカウント情報を強制的に更新\r\n            await this.userStore.fetchUser(true);\r\n\r\n            this.$message.success(`Twitter @${screen_name} との連携を解除しました。`);\r\n        },\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.settings__content {\r\n    opacity: 1;\r\n    transition: opacity 0.4s;\r\n\r\n    &--loading {\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n.twitter-accounts {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px 20px;\r\n    border-radius: 15px;\r\n    background: var(--v-background-lighten2);\r\n    @include smartphone-horizontal {\r\n        padding: 16px 20px;\r\n        border-radius: 10px;\r\n    }\r\n    @include smartphone-vertical {\r\n        padding: 16px 12px;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    &__heading {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 18px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    &__guide {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        .text-h6 {\r\n            @include tablet-vertical {\r\n                font-size: 19px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                font-size: 17px !important;\r\n            }\r\n        }\r\n\r\n        svg {\r\n            @include smartphone-horizontal-short {\r\n                display: none;\r\n            }\r\n            @include smartphone-vertical {\r\n                display: none;\r\n            }\r\n        }\r\n        svg + div {\r\n            @include smartphone-horizontal-short {\r\n                margin-left: 0px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                margin-left: 0px !important;\r\n            }\r\n        }\r\n    }\r\n\r\n    .twitter-account {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-top: 20px;\r\n        @include smartphone-horizontal {\r\n            margin-top: 16px;\r\n        }\r\n\r\n        &__icon {\r\n            flex-shrink: 0;\r\n            width: 70px;\r\n            height: 70px;\r\n            margin-right: 16px;\r\n            border-radius: 50%;\r\n            object-fit: cover;\r\n            // 読み込まれるまでのアイコンの背景\r\n            background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n            // 低解像度で表示する画像がぼやけないようにする\r\n            // ref: https://sho-log.com/chrome-image-blurred/\r\n            image-rendering: -webkit-optimize-contrast;\r\n            @include smartphone-horizontal {\r\n                width: 52px;\r\n                height: 52px;\r\n            }\r\n            @include smartphone-vertical {\r\n                width: 48px;\r\n                height: 48px;\r\n                margin-right: 10px;\r\n            }\r\n        }\r\n\r\n        &__info {\r\n            display: flex;\r\n            flex-direction: column;\r\n            min-width: 0;\r\n            margin-right: 16px;\r\n            @include smartphone-vertical {\r\n                margin-right: 10px;\r\n            }\r\n\r\n            &-name {\r\n                display: inline-flex;\r\n                align-items: center;\r\n\r\n                &-text {\r\n                    display: inline-block;\r\n                    color: var(--v-text-base);\r\n                    font-size: 20px;\r\n                    font-weight: bold;\r\n                    overflow: hidden;\r\n                    white-space: nowrap;\r\n                    text-overflow: ellipsis;  // はみ出た部分を … で省略\r\n                    @include smartphone-horizontal {\r\n                        font-size: 18px;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        font-size: 16px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            &-screen-name {\r\n                display: inline-block;\r\n                color: var(--v-text-darken1);\r\n                font-size: 16px;\r\n                @include smartphone-horizontal {\r\n                    font-size: 14px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    font-size: 13.5px;\r\n                }\r\n            }\r\n        }\r\n\r\n        &__login {\r\n            margin-top: 20px;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n            border-radius: 7px;\r\n            font-size: 15px;\r\n            letter-spacing: 0;\r\n            @include tablet-vertical {\r\n                height: 42px !important;\r\n                font-size: 14.5px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                height: 42px !important;\r\n                font-size: 14.5px;\r\n            }\r\n            @include smartphone-vertical {\r\n                height: 42px !important;\r\n                font-size: 14.5px;\r\n            }\r\n        }\r\n\r\n        &__logout {\r\n            background: var(--v-gray-base);\r\n            border-radius: 7px;\r\n            font-size: 15px;\r\n            letter-spacing: 0;\r\n            @include smartphone-horizontal {\r\n                width: 116px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                width: 100px !important;\r\n                height: 48px !important;\r\n                border-radius: 5px;\r\n                font-size: 14px;\r\n                svg {\r\n                    width: 20px;\r\n                    margin-right: 4px !important;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Twitter.vue?vue&type=template&id=c6e1b51a&scoped=true\"\nimport script from \"./Twitter.vue?vue&type=script&lang=ts\"\nexport * from \"./Twitter.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Twitter.vue?vue&type=style&index=0&id=c6e1b51a&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c6e1b51a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"channels-container channels-container--home\",class:{'channels-container--loading': _vm.is_loading}},[_c('v-tabs-fix',{staticClass:\"channels-tab\",attrs:{\"centered\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned)),function([channels_type,]){return _c('v-tab',{key:channels_type,staticClass:\"channels-tab__item\"},[_vm._v(\" \"+_vm._s(channels_type)+\" \")])}),1),_c('v-tabs-items-fix',{staticClass:\"channels-list\",model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned)),function([channels_type, channels]){return _c('v-tab-item-fix',{key:channels_type,staticClass:\"channels-tabitem\"},[_c('div',{staticClass:\"channels\",class:`channels--tab-${channels_type} channels--length-${channels.length}`},[_vm._l((channels),function(channel){return _c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:channel.id,staticClass:\"channel\",attrs:{\"to\":`/tv/watch2/${channel.display_channel_id}`}},[_c('div',{staticClass:\"channel__broadcaster\"},[_c('img',{staticClass:\"channel__broadcaster-icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${channel.display_channel_id}/logo`}}),_c('div',{staticClass:\"channel__broadcaster-content\"},[_c('span',{staticClass:\"channel__broadcaster-name\"},[_vm._v(\"Ch: \"+_vm._s(channel.channel_number)+\" \"+_vm._s(channel.name))]),_c('div',{staticClass:\"channel__broadcaster-status\"},[_c('div',{staticClass:\"channel__broadcaster-status-force\",class:`channel__broadcaster-status-force--${_vm.ChannelUtils.getChannelForceType(channel.jikkyo_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"12px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"勢い:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(channel.jikkyo_force ?? '--'))]),_c('span',{staticStyle:{\"margin-left\":\"3px\"}},[_vm._v(\" コメ/分\")])],1),_c('div',{staticClass:\"channel__broadcaster-status-viewers ml-4\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:eye\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"視聴数:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(channel.viewer_count))])],1)])]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip\",value:(_vm.isPinnedChannel(channel.display_channel_id) ? 'ピン留めを外す' : 'ピン留めする'),expression:\"isPinnedChannel(channel.display_channel_id) ? 'ピン留めを外す' : 'ピン留めする'\"}],staticClass:\"channel__broadcaster-pin\",class:{'channel__broadcaster-pin--pinned': _vm.isPinnedChannel(channel.display_channel_id)},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.isPinnedChannel(channel.display_channel_id) ? _vm.removePinnedChannel(channel.display_channel_id) : _vm.addPinnedChannel(channel.display_channel_id)},\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();/* 親要素の波紋が広がらないように */}}},[_c('Icon',{attrs:{\"icon\":\"fluent:pin-20-filled\",\"width\":\"24px\"}})],1)]),_c('div',{staticClass:\"channel__program-present\"},[_c('div',{staticClass:\"channel__program-present-title-wrapper\"},[_c('span',{staticClass:\"channel__program-present-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'title'))}}),_c('span',{staticClass:\"channel__program-present-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_present)))])]),_c('span',{staticClass:\"channel__program-present-description\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'description'))}})]),_c('v-spacer'),_c('div',{staticClass:\"channel__program-following\"},[_c('div',{staticClass:\"channel__program-following-title\"},[_c('span',{staticClass:\"channel__program-following-title-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"channel__program-following-title-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}}),_c('span',{staticClass:\"channel__program-following-title-text\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_following, 'title'))}})],1),_c('span',{staticClass:\"channel__program-following-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_following)))])]),_c('div',{staticClass:\"channel__progressbar\"},[_c('div',{staticClass:\"channel__progressbar-progress\",style:(`width:${_vm.ProgramUtils.getProgramProgress(channel.program_present)}%;`)})])],1)}),(channels_type === 'ピン留め' && channels.length === 0)?_c('div',{staticClass:\"pinned-container d-flex justify-center align-center w-100\"},[_c('div',{staticClass:\"d-flex justify-center align-center flex-column\"},[_c('h2',[_vm._v(\"ピン留めされているチャンネルが\"),_c('br'),_vm._v(\"ありません。\")]),_c('div',{staticClass:\"mt-4 text--text text--darken-1\"},[_vm._v(\"各チャンネルの \"),_c('Icon',{staticStyle:{\"position\":\"relative\",\"bottom\":\"-5px\"},attrs:{\"icon\":\"fluent:pin-20-filled\",\"width\":\"22px\"}}),_vm._v(\" アイコンから、よくみる\"),_c('br'),_vm._v(\"チャンネルをこのタブにピン留めできます。\")],1),_c('div',{staticClass:\"mt-2 text--text text--darken-1\"},[_vm._v(\"チャンネルをピン留めすると、\"),_c('br'),_vm._v(\"このタブが最初に表示されます。\")])])]):_vm._e()],2)])}),1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n/** 番組情報を表すインターフェイス */\r\nexport interface IProgram {\r\n    id: string;\r\n    channel_id: string;\r\n    network_id: number;\r\n    service_id: number;\r\n    event_id: number;\r\n    title: string;\r\n    description: string;\r\n    detail: { [key: string]: string };\r\n    start_time: string;\r\n    end_time: string;\r\n    duration: number;\r\n    is_free: boolean;\r\n    genres: { major: string; middle: string; }[];\r\n    video_type: string | null;\r\n    video_codec: string | null;\r\n    video_resolution: string | null;\r\n    primary_audio_type: string;\r\n    primary_audio_language: string;\r\n    primary_audio_sampling_rate: string;\r\n    secondary_audio_type: string | null;\r\n    secondary_audio_language: string | null;\r\n    secondary_audio_sampling_rate: string | null;\r\n}\r\n\r\n/** 番組情報を表すインターフェイスのデフォルト値 */\r\nexport const IProgramDefault: IProgram = {\r\n    id: 'NID0-SID0-EID0',\r\n    channel_id: 'NID0-SID0',\r\n    network_id: 0,\r\n    service_id: 0,\r\n    event_id: 0,\r\n    title: '取得中…',\r\n    description: '取得中…',\r\n    detail: {},\r\n    start_time: '2000-01-01T00:00:00+09:00',\r\n    end_time: '2000-01-01T00:00:00+09:00',\r\n    duration: 0,\r\n    is_free: true,\r\n    genres: [],\r\n    video_type: '映像1080i(1125i)、アスペクト比16:9 パンベクトルなし',\r\n    video_codec: 'MPEG-2',\r\n    video_resolution: '1080i',\r\n    primary_audio_type: '2/0モード(ステレオ)',\r\n    primary_audio_language: '日本語',\r\n    primary_audio_sampling_rate: '48kHz',\r\n    secondary_audio_type: null,\r\n    secondary_audio_language: null,\r\n    secondary_audio_sampling_rate: null,\r\n};\r\n\r\n/** 番組情報を表すインターフェイス (present_or_following: Present なら現在放送中、Following なら次の番組であることを示す) */\r\nexport interface IProgramPF {\r\n    type: 'IProgramPF';\r\n    present_or_following: 'Present' | 'Following';\r\n    program: IProgram;\r\n}\r\n\r\n// TODO: 番組情報 API が開発されたらここに API 定義を書く\r\n","\r\nimport APIClient from '@/services/APIClient';\r\nimport { IProgram, IProgramDefault } from '@/services/Programs';\r\n\r\n\r\n/** チャンネルタイプの型 */\r\nexport type ChannelType = 'GR' | 'BS' | 'CS' | 'CATV' | 'SKY' | 'STARDIGIO';\r\n\r\n// チャンネルタイプの型 (実際のチャンネルリストに表示される表現)\r\nexport type ChannelTypePretty = 'ピン留め' | '地デジ' | 'BS' | 'CS' | 'CATV' | 'SKY' | 'StarDigio';\r\n\r\n/** チャンネル情報を表すインターフェイス */\r\nexport interface IChannel {\r\n    id: string;\r\n    display_channel_id: string;\r\n    network_id: number;\r\n    service_id: number;\r\n    transport_stream_id: number | null;\r\n    remocon_id: number;\r\n    channel_number: string;\r\n    type: ChannelType;\r\n    name: string;\r\n    jikkyo_force: number | null;\r\n    is_subchannel: boolean;\r\n    is_radiochannel: boolean;\r\n    is_watchable: boolean,\r\n}\r\n\r\n/** 現在放送中のチャンネル情報を表すインターフェイス */\r\nexport interface ILiveChannel extends IChannel {\r\n    // 以下はすべて動的に生成される TV ライブストリーミング用の追加カラム\r\n    is_display: boolean;\r\n    viewer_count: number;\r\n    program_present: IProgram | null;\r\n    program_following: IProgram | null;\r\n}\r\n\r\n/** 現在放送中のチャンネル情報を表すインターフェイスのデフォルト値 */\r\nexport const ILiveChannelDefault: ILiveChannel = {\r\n    id: 'NID0-SID0',\r\n    display_channel_id: 'gr000',\r\n    network_id: 0,\r\n    service_id: 0,\r\n    transport_stream_id: null,\r\n    remocon_id: 0,\r\n    channel_number: '---',\r\n    type: 'GR',\r\n    name: '取得中…',\r\n    jikkyo_force: null,\r\n    is_subchannel: false,\r\n    is_radiochannel: false,\r\n    is_watchable: true,\r\n    is_display: true,\r\n    viewer_count: 0,\r\n    program_present: IProgramDefault,\r\n    program_following: IProgramDefault,\r\n};\r\n\r\n/** すべてのチャンネルタイプの現在放送中のチャンネルの情報を表すインターフェイス */\r\nexport interface ILiveChannelsList {\r\n    GR: ILiveChannel[];\r\n    BS: ILiveChannel[];\r\n    CS: ILiveChannel[];\r\n    CATV: ILiveChannel[];\r\n    SKY: ILiveChannel[];\r\n    STARDIGIO: ILiveChannel[];\r\n}\r\n\r\n/** ニコニコ実況のセッション情報を表すインターフェイス */\r\nexport interface IJikkyoSession {\r\n    is_success: boolean;\r\n    audience_token: string | null;\r\n    detail: string;\r\n}\r\n\r\n\r\nclass Channels {\r\n\r\n    /**\r\n     * すべてのチャンネルの情報を取得する\r\n     * @return すべてのチャンネルの情報\r\n     */\r\n    static async fetchAll(): Promise<ILiveChannelsList | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.get<ILiveChannelsList>('/channels');\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'チャンネル情報を取得できませんでした。');\r\n            return null;\r\n        }\r\n\r\n        return response.data;\r\n    }\r\n\r\n\r\n    /**\r\n     * 指定したチャンネルの情報を取得する\r\n     * 現状、処理の見直しにより使用されていない\r\n     * @param display_channel_id チャンネル ID\r\n     * @return 指定したチャンネルの情報\r\n     */\r\n    static async fetch(display_channel_id: string): Promise<ILiveChannel | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.get<ILiveChannel>(`/channels/${display_channel_id}`);\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'チャンネル情報を取得できませんでした。');\r\n            return null;\r\n        }\r\n\r\n        return response.data;\r\n    }\r\n\r\n\r\n    /**\r\n     * 指定したチャンネルに紐づくニコニコ実況のセッション情報を取得する\r\n     * @param display_channel_id チャンネル ID\r\n     * @return 指定したチャンネルに紐づくニコニコ実況のセッション情報\r\n     */\r\n    static async fetchJikkyoSession(display_channel_id: string): Promise<IJikkyoSession | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.get<IJikkyoSession>(`/channels/${display_channel_id}/jikkyo`);\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, 'ニコニコ実況のセッション情報を取得できませんでした。');\r\n            return null;\r\n        }\r\n\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default Channels;\r\n","\r\nimport { defineStore } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport Channels, { ChannelType, ChannelTypePretty, ILiveChannelsList, ILiveChannel, ILiveChannelDefault } from '@/services/Channels';\r\nimport { IProgram, IProgramDefault } from '@/services/Programs';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils, { ChannelUtils } from '@/utils';\r\n\r\n\r\n/**\r\n * TV ホーム画面と TV 視聴画面の両方のページでチャンネル情報を共有するためのストア\r\n * チャンネル情報の API からの取得はかなり重めなので、ページ遷移時に毎回 API リクエストを行うのはパフォーマンスが悪い\r\n * チャンネル情報をストアに格納しておくことで、TV ホーム画面から TV 視聴画面に遷移したときのパフォーマンスが向上する\r\n */\r\nconst useChannelsStore = defineStore('channels', {\r\n    state: () => ({\r\n\r\n        // すべてのチャンネルタイプのチャンネルリスト\r\n        channels_list: {\r\n            GR: [],\r\n            BS: [],\r\n            CS: [],\r\n            CATV: [],\r\n            SKY: [],\r\n            STARDIGIO: [],\r\n        } as ILiveChannelsList,\r\n\r\n        // 初回のチャンネル情報更新が実行された後かどうか\r\n        is_channels_list_initial_updated: false,\r\n\r\n        // 最終更新日時 (UNIX タイムスタンプ、秒単位)\r\n        last_updated_at: 0,\r\n\r\n        // 現在視聴中のチャンネルの ID (ex: gr011)\r\n        // 視聴画面のみ有効で、ホーム画面では利用されない\r\n        // 視聴画面から離れる際は、必ず gr000 (現在視聴画面ではないことを示す特別な値) に戻さなければならない\r\n        // 本来は null あたりにすべきだが、null を入れると UI 側でのエラー処理が大変なので、やむを得ず形式上有効だが絶対にあり得ない値を入れている\r\n        display_channel_id: 'gr000' as string,\r\n\r\n        // 現在放送中の番組情報 (EPG (EIT[p/f]) からリアルタイムに更新される)\r\n        // チャンネル切り替え後、LiveDataBroadcastingManager で EIT[p/f] から取得されるまでは null になる\r\n        // 視聴画面のみ有効で、ホーム画面では利用されない\r\n        current_program_present: null as IProgram | null,\r\n\r\n        // 次に放送される番組情報 (EPG (EIT[p/f]) からリアルタイムに更新される)\r\n        // チャンネル切り替え後、LiveDataBroadcastingManager で EIT[p/f] から取得されるまでは null になる\r\n        // 視聴画面のみ有効で、ホーム画面では利用されない\r\n        current_program_following: null as IProgram | null,\r\n    }),\r\n    getters: {\r\n\r\n        /**\r\n         * ライブ視聴画面を表示中かどうか\r\n         * チャンネル情報がセットされているかどうかで判定できる\r\n         */\r\n        is_showing_live(): boolean {\r\n            return this.display_channel_id !== 'gr000';\r\n        },\r\n\r\n        /**\r\n         * 前・現在・次のチャンネルの情報 (視聴画面用)\r\n         * チャンネル情報はデータ量がかなり多いので、個別に取得するより一気に取得したほうがループ回数が少なくなりパフォーマンスが良い\r\n         */\r\n        channel(): { previous: ILiveChannel; current: ILiveChannel; next: ILiveChannel; } {\r\n\r\n            // チャンネルタイプごとのチャンネル情報リストを取得する (すべてのチャンネルリストから探索するより効率的)\r\n            const channels: ILiveChannel[] | undefined = this.channels_list[ChannelUtils.getChannelType(this.display_channel_id)];\r\n\r\n            // まだチャンネルリストの更新が終わっていないなどの場合で取得できなかった場合、\r\n            // null を返すと UI 側でのエラー処理が大変なので、暫定的なダミーのチャンネル情報を返す\r\n            if (channels === undefined || channels.length === 0) {\r\n                return {\r\n                    previous: ILiveChannelDefault,\r\n                    current: ILiveChannelDefault,\r\n                    next: ILiveChannelDefault,\r\n                };\r\n            }\r\n\r\n            // 起点にするチャンネル情報があるインデックスを取得\r\n            const current_channel_index = channels.findIndex((channel) => channel.display_channel_id === this.display_channel_id);\r\n\r\n            // インデックスが取得できなかった場合も同様に、暫定的なダミーのチャンネル情報を返す\r\n            if (current_channel_index === -1) {\r\n                const IProgramError = {\r\n                    ...IProgramDefault,\r\n                    display_channel_id: 'gr999',\r\n                    title: 'チャンネル情報取得エラー',\r\n                    description: 'このチャンネル ID のチャンネル情報は存在しません。',\r\n                };\r\n                const ILiveChannelError = {\r\n                    ...ILiveChannelDefault,\r\n                    display_channel_id: 'gr999',  // チャンネル情報が存在しないことを示す特殊なチャンネル ID\r\n                    name: 'ERROR',\r\n                    program_present: IProgramError,\r\n                    program_following: IProgramError,\r\n                };\r\n                return {\r\n                    previous: ILiveChannelError as ILiveChannel,\r\n                    current: ILiveChannelError as ILiveChannel,\r\n                    next: ILiveChannelError as ILiveChannel,\r\n                };\r\n            }\r\n\r\n            // 前のインデックスを取得する\r\n            // インデックスがマイナスになった時は、最後のインデックスに巻き戻す\r\n            // channel.is_display が true のチャンネルに到達するまで続ける\r\n            const previous_channel_index = ((): number => {\r\n                let index = current_channel_index - 1;\r\n                while (channels.length) {\r\n                    if (index <= -1) {\r\n                        index = channels.length - 1;  // 最後のインデックス\r\n                    }\r\n                    if (channels[index].is_display) {\r\n                        return index;\r\n                    }\r\n                    index--;\r\n                }\r\n                return 0;\r\n            })();\r\n\r\n            // 次のインデックスを取得する\r\n            // インデックスが配列の長さを超えた時は、最初のインデックスに巻き戻す\r\n            // channel.is_display が true のチャンネルに到達するまで続ける\r\n            const next_channel_index = ((): number => {\r\n                let index = current_channel_index + 1;\r\n                while (channels.length) {\r\n                    if (index >= channels.length) {\r\n                        index = 0;  // 最初のインデックス\r\n                    }\r\n                    if (channels[index].is_display) {\r\n                        return index;\r\n                    }\r\n                    index++;\r\n                }\r\n                return 0;\r\n            })();\r\n\r\n            // もしこの時点で channels[current_channel_index] の network_id / service_id と\r\n            // EPG 由来の current_program_(present/following) の network_id / service_id が一致していない場合、\r\n            // チャンネル切り替えが行われたことで current_program_(present/following) の情報が古くなっているため、ここで null にする\r\n            // チャンネル切り替え後、ストリーミングが開始され EPG から再度最新の番組情報が取得されるまでの間は、\r\n            // channels[current_channel_index] 内の番組情報 (サーバー API 由来) が使われることになる\r\n            if ((this.current_program_present?.network_id !== channels[current_channel_index].network_id) ||\r\n                (this.current_program_present?.service_id !== channels[current_channel_index].service_id)) {\r\n                this.current_program_present = null;\r\n            }\r\n            if ((this.current_program_following?.network_id !== channels[current_channel_index].network_id) ||\r\n                (this.current_program_following?.service_id !== channels[current_channel_index].service_id)) {\r\n                this.current_program_following = null;\r\n            }\r\n\r\n            // 現在のチャンネル情報のみ、EPG から取得した現在/次の番組情報があればそちらを優先して上書き表示する\r\n            // channels[current_channel_index] は channels_list に格納されているチャンネル情報と同一の参照なので、\r\n            // 上書きした番組情報は番組情報タブだけでなく、チャンネルリストにも反映される\r\n            if (this.current_program_present !== null) {\r\n                channels[current_channel_index].program_present = this.current_program_present;\r\n            }\r\n            if (this.current_program_following !== null) {\r\n                channels[current_channel_index].program_following = this.current_program_following;\r\n            }\r\n\r\n            // 前・現在・次のチャンネル情報を返す\r\n            return {\r\n                previous: channels[previous_channel_index],\r\n                current: channels[current_channel_index],\r\n                next: channels[next_channel_index],\r\n            };\r\n        },\r\n\r\n        /**\r\n         * 実際に表示されるチャンネルリストを表すデータ\r\n         * ピン留めチャンネルのタブを追加するほか、放送していないサブチャンネルはピン留めタブを含めて表示から除外される\r\n         * また、チャンネルが1つもないチャンネルタイプのタブも表示から除外される\r\n         * (たとえば SKY (スカパー！プレミアムサービス) のタブは、SKY に属すチャンネルが1つもない（=受信できない）なら表示されない)\r\n         */\r\n        channels_list_with_pinned(): Map<ChannelTypePretty, ILiveChannel[]> {\r\n\r\n            const settings_store = useSettingsStore();\r\n\r\n            // 事前に Map を定義しておく\r\n            // Map にしていたのは、確か連想配列の順序を保証してくれるからだったはず\r\n            const channels_list_with_pinned = new Map<ChannelTypePretty, ILiveChannel[]>();\r\n            channels_list_with_pinned.set('ピン留め', []);\r\n            channels_list_with_pinned.set('地デジ', []);\r\n\r\n            // 初回のチャンネル情報更新がまだ実行されていない or 実行中のときは最低限のこの2つだけで返す\r\n            if (this.is_channels_list_initial_updated === false) {\r\n                return channels_list_with_pinned;\r\n            }\r\n\r\n            channels_list_with_pinned.set('BS', []);\r\n            channels_list_with_pinned.set('CS', []);\r\n            channels_list_with_pinned.set('CATV', []);\r\n            channels_list_with_pinned.set('SKY', []);\r\n            channels_list_with_pinned.set('StarDigio', []);\r\n\r\n            // channels_list に格納されているすべてのチャンネルに対しループを回し、\r\n            // 順次 channels_list_with_pinned に追加していく\r\n            // 1つのチャンネルに対するループ回数が少なくなる分、毎回 filter() や find() するよりも高速になるはず\r\n            for (const [channel_type, channels] of Object.entries(this.channels_list)) {\r\n                for (const channel of channels) {\r\n\r\n                    // 放送していないサブチャンネルは除外\r\n                    if (channel.is_display === false) {\r\n                        continue;\r\n                    }\r\n\r\n                    // ピン留めしているチャンネルの ID (ex: gr011) が入るリストに含まれていたら、ピン留めタブに追加\r\n                    if (settings_store.settings.pinned_channel_ids.includes(channel.display_channel_id)) {\r\n                        channels_list_with_pinned.get('ピン留め')?.push(channel);\r\n                    }\r\n\r\n                    // チャンネルタイプごとに分類\r\n                    switch (channel.type) {\r\n                        case 'GR': {\r\n                            channels_list_with_pinned.get('地デジ')?.push(channel);\r\n                            break;\r\n                        }\r\n                        case 'BS': {\r\n                            channels_list_with_pinned.get('BS')?.push(channel);\r\n                            break;\r\n                        }\r\n                        case 'CS': {\r\n                            channels_list_with_pinned.get('CS')?.push(channel);\r\n                            break;\r\n                        }\r\n                        case 'CATV': {\r\n                            channels_list_with_pinned.get('CATV')?.push(channel);\r\n                            break;\r\n                        }\r\n                        case 'SKY': {\r\n                            channels_list_with_pinned.get('SKY')?.push(channel);\r\n                            break;\r\n                        }\r\n                        case 'STARDIGIO': {\r\n                            channels_list_with_pinned.get('StarDigio')?.push(channel);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // ピン留めチャンネルを追加順に並び替える\r\n            for (const channel of [...channels_list_with_pinned.get('ピン留め')!]) {\r\n                const index = settings_store.settings.pinned_channel_ids.indexOf(channel.display_channel_id);\r\n                channels_list_with_pinned.get('ピン留め')![index] = channel;\r\n            }\r\n\r\n            // 最後に、チャンネルが1つもないチャンネルタイプのタブを除外する (ピン留めタブを除く)\r\n            for (const [channel_type, channels] of channels_list_with_pinned) {\r\n                if (channel_type === 'ピン留め') {\r\n                    continue;\r\n                }\r\n                if (channels.length === 0) {\r\n                    channels_list_with_pinned.delete(channel_type);\r\n                }\r\n            }\r\n\r\n            // ただし、this.channels_list_with_pinned 全体が空でもうピン留めタブしか残っていない場合は、ピン留めタブも削除する\r\n            if (channels_list_with_pinned.size === 1 && channels_list_with_pinned.has('ピン留め')) {\r\n                channels_list_with_pinned.delete('ピン留め');\r\n            }\r\n\r\n            return channels_list_with_pinned;\r\n        },\r\n\r\n        /**\r\n         * 視聴画面向けの channels_list_with_pinned\r\n         * 視聴画面ではピン留めされているチャンネルが1つもないときは、ピン留めタブを表示する必要性がないため削除される\r\n         */\r\n        channels_list_with_pinned_for_watch(): Map<ChannelTypePretty, ILiveChannel[]> {\r\n            const channels_list_with_pinned = new Map([...this.channels_list_with_pinned]);\r\n            if (channels_list_with_pinned.get('ピン留め')?.length === 0) {\r\n                channels_list_with_pinned.delete('ピン留め');\r\n            }\r\n            return channels_list_with_pinned;\r\n        }\r\n    },\r\n    actions: {\r\n\r\n        /**\r\n         * 指定されたチャンネル ID のチャンネル情報を取得する\r\n         * @param display_channel_id 取得するチャンネル ID (ex: gr011)\r\n         * @returns チャンネル情報\r\n         */\r\n        getChannel(display_channel_id: string): ILiveChannel | null {\r\n\r\n            // チャンネルタイプごとのチャンネル情報リストを取得する (すべてのチャンネルリストから探索するより効率的)\r\n            const channels = this.channels_list[ChannelUtils.getChannelType(display_channel_id)];\r\n            if (channels === undefined) {\r\n                return null;\r\n            }\r\n\r\n            // チャンネル ID が一致するチャンネル情報を返す\r\n            return channels.find(channel => channel.display_channel_id === display_channel_id) ?? null;\r\n        },\r\n\r\n        /**\r\n         * チャンネルタイプとリモコン番号からチャンネル情報を取得する\r\n         * @param channel_type チャンネルタイプ\r\n         * @param remocon_id リモコン番号\r\n         * @returns チャンネル情報 (見つからなかった場合は null)\r\n         */\r\n        getChannelByRemoconID(channel_type: ChannelType, remocon_id: number): ILiveChannel | null {\r\n\r\n            // 指定されたチャンネルタイプのチャンネルを取得\r\n            const channels = this.channels_list[channel_type];\r\n\r\n            // リモコン番号が一致するチャンネルを取得\r\n            const channel = channels.find((channel) => channel.remocon_id === remocon_id);\r\n\r\n            // リモコン番号が一致するチャンネルを見つけられなかった場合は null を返す\r\n            return channel ?? null;\r\n        },\r\n\r\n        /**\r\n         * 指定されたチャンネル ID のチャンネル情報を更新する\r\n         * 今のところ viewer_count (視聴者数) を更新する目的でしか使っていない\r\n         * @param display_channel_id 更新するチャンネル ID (ex: gr011)\r\n         * @param channel 更新後のチャンネル情報\r\n         */\r\n        updateChannel(display_channel_id: string, channel: ILiveChannel): void {\r\n\r\n            // チャンネルタイプごとのチャンネル情報リストを取得する (すべてのチャンネルリストから探索するより効率的)\r\n            const channel_type = ChannelUtils.getChannelType(display_channel_id);\r\n            if (this.channels_list[channel_type] === undefined) {\r\n                return;\r\n            }\r\n\r\n            // チャンネル ID が一致するチャンネル情報を更新する\r\n            const index = this.channels_list[channel_type].findIndex(channel => channel.display_channel_id === display_channel_id);\r\n            if (index === -1) {\r\n                return;\r\n            }\r\n            // リアクティブにするために Vue.set を使う\r\n            Vue.set(this.channels_list[channel_type], index, channel);\r\n        },\r\n\r\n        /**\r\n         * チャンネルリストを更新する\r\n         * @param force 強制的に更新するかどうか\r\n         */\r\n        async update(force: boolean = false): Promise<void> {\r\n\r\n            const update = async () => {\r\n\r\n                // 最新のすべてのチャンネルの情報を取得\r\n                const channels_list = await Channels.fetchAll();\r\n                if (channels_list === null) {\r\n                    return;\r\n                }\r\n\r\n                this.channels_list = channels_list;\r\n                this.is_channels_list_initial_updated = true;\r\n                this.last_updated_at = Utils.time();\r\n            };\r\n\r\n            // すでに取得されている場合は更新しない\r\n            if (this.is_channels_list_initial_updated === true && force === false) {\r\n\r\n                // ただし、最終更新日時が1分以上前の場合は非同期で更新する\r\n                if (Utils.time() - this.last_updated_at > 60) {\r\n                    update();\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            // チャンネルリストの更新を行う\r\n            await update();\r\n        }\r\n    }\r\n});\r\n\r\nexport default useChannelsStore;\r\n","<template>\r\n    <div class=\"route-container\">\r\n        <Header/>\r\n        <main>\r\n            <Navigation/>\r\n            <div class=\"channels-container channels-container--home\" :class=\"{'channels-container--loading': is_loading}\">\r\n                <v-tabs-fix centered class=\"channels-tab\" v-model=\"tab\">\r\n                    <v-tab class=\"channels-tab__item\"\r\n                        v-for=\"[channels_type,] in Array.from(channelsStore.channels_list_with_pinned)\" :key=\"channels_type\">\r\n                        {{channels_type}}\r\n                    </v-tab>\r\n                </v-tabs-fix>\r\n                <v-tabs-items-fix class=\"channels-list\" v-model=\"tab\">\r\n                    <v-tab-item-fix class=\"channels-tabitem\"\r\n                        v-for=\"[channels_type, channels] in Array.from(channelsStore.channels_list_with_pinned)\" :key=\"channels_type\">\r\n                        <div class=\"channels\" :class=\"`channels--tab-${channels_type} channels--length-${channels.length}`\">\r\n                            <router-link v-ripple class=\"channel\"\r\n                                v-for=\"channel in channels\" :key=\"channel.id\" :to=\"`/tv/watch2/${channel.display_channel_id}`\">\r\n                                <div class=\"channel__broadcaster\">\r\n                                    <img class=\"channel__broadcaster-icon\" :src=\"`${Utils.api_base_url}/channels/${channel.display_channel_id}/logo`\">\r\n                                    <div class=\"channel__broadcaster-content\">\r\n                                        <span class=\"channel__broadcaster-name\">Ch: {{channel.channel_number}} {{channel.name}}</span>\r\n                                        <div class=\"channel__broadcaster-status\">\r\n                                            <div class=\"channel__broadcaster-status-force\"\r\n                                                :class=\"`channel__broadcaster-status-force--${ChannelUtils.getChannelForceType(channel.jikkyo_force)}`\">\r\n                                                <Icon icon=\"fa-solid:fire-alt\" height=\"12px\" />\r\n                                                <span class=\"ml-1\">勢い:</span>\r\n                                                <span class=\"ml-1\">{{channel.jikkyo_force ?? '--'}}</span>\r\n                                                <span style=\"margin-left: 3px;\"> コメ/分</span>\r\n                                            </div>\r\n                                            <div class=\"channel__broadcaster-status-viewers ml-4\">\r\n                                                <Icon icon=\"fa-solid:eye\" height=\"14px\" />\r\n                                                <span class=\"ml-1\">視聴数:</span>\r\n                                                <span class=\"ml-1\">{{channel.viewer_count}}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div v-ripple class=\"channel__broadcaster-pin\"\r\n                                        v-tooltip=\"isPinnedChannel(channel.display_channel_id) ? 'ピン留めを外す' : 'ピン留めする'\"\r\n                                        :class=\"{'channel__broadcaster-pin--pinned': isPinnedChannel(channel.display_channel_id)}\"\r\n                                        @click.prevent.stop=\"isPinnedChannel(channel.display_channel_id) ? removePinnedChannel(channel.display_channel_id) : addPinnedChannel(channel.display_channel_id)\"\r\n                                        @mousedown.prevent.stop=\"/* 親要素の波紋が広がらないように */\">\r\n                                        <Icon icon=\"fluent:pin-20-filled\" width=\"24px\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"channel__program-present\">\r\n                                    <div class=\"channel__program-present-title-wrapper\">\r\n                                        <span class=\"channel__program-present-title\"\r\n                                            v-html=\"ProgramUtils.decorateProgramInfo(channel.program_present, 'title')\"></span>\r\n                                        <span class=\"channel__program-present-time\">{{ProgramUtils.getProgramTime(channel.program_present)}}</span>\r\n                                    </div>\r\n                                    <span class=\"channel__program-present-description\"\r\n                                          v-html=\"ProgramUtils.decorateProgramInfo(channel.program_present, 'description')\"></span>\r\n                                </div>\r\n                                <v-spacer></v-spacer>\r\n                                <div class=\"channel__program-following\">\r\n                                    <div class=\"channel__program-following-title\">\r\n                                        <span class=\"channel__program-following-title-decorate\">NEXT</span>\r\n                                        <Icon class=\"channel__program-following-title-icon\" icon=\"fluent:fast-forward-20-filled\" width=\"16px\" />\r\n                                        <span class=\"channel__program-following-title-text\"\r\n                                              v-html=\"ProgramUtils.decorateProgramInfo(channel.program_following, 'title')\"></span>\r\n                                    </div>\r\n                                    <span class=\"channel__program-following-time\">{{ProgramUtils.getProgramTime(channel.program_following)}}</span>\r\n                                </div>\r\n                                <div class=\"channel__progressbar\">\r\n                                    <div class=\"channel__progressbar-progress\"\r\n                                         :style=\"`width:${ProgramUtils.getProgramProgress(channel.program_present)}%;`\"></div>\r\n                                </div>\r\n                            </router-link>\r\n                            <div class=\"pinned-container d-flex justify-center align-center w-100\"\r\n                                v-if=\"channels_type === 'ピン留め' && channels.length === 0\">\r\n                                <div class=\"d-flex justify-center align-center flex-column\">\r\n                                    <h2>ピン留めされているチャンネルが<br>ありません。</h2>\r\n                                    <div class=\"mt-4 text--text text--darken-1\">各チャンネルの <Icon style=\"position:relative;bottom:-5px;\" icon=\"fluent:pin-20-filled\" width=\"22px\" /> アイコンから、よくみる<br>チャンネルをこのタブにピン留めできます。</div>\r\n                                    <div class=\"mt-2 text--text text--darken-1\">チャンネルをピン留めすると、<br>このタブが最初に表示されます。</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </v-tab-item-fix>\r\n                </v-tabs-items-fix>\r\n            </div>\r\n        </main>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport Header from '@/components/Header.vue';\r\nimport Navigation from '@/components/Navigation.vue';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\r\n\r\nexport default Vue.extend({\r\n    name: 'TV-Home',\r\n    components: {\r\n        Header,\r\n        Navigation,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // ユーティリティをテンプレートで使えるように\r\n            Utils: Utils,\r\n            ChannelUtils: ChannelUtils,\r\n            ProgramUtils: ProgramUtils,\r\n\r\n            // タブの状態管理\r\n            tab: null as number | null,\r\n\r\n            // ローディング中かどうか\r\n            is_loading: true,\r\n\r\n            // インターバル ID\r\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\r\n            // setInterval(), setTimeout() の返り値を登録する\r\n            interval_ids: [] as number[],\r\n        };\r\n    },\r\n    computed: {\r\n        // ChannelsStore / SettingsStore に this.channelsStore / this.settingsStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useChannelsStore, useSettingsStore),\r\n    },\r\n    // 開始時に実行\r\n    async created() {\r\n\r\n        // ピン留めされているチャンネルの ID が空なら、タブを地デジタブに切り替える\r\n        // ピン留めができる事を示唆するためにピン留めタブ自体は残す\r\n        if (this.settingsStore.settings.pinned_channel_ids.length === 0) {\r\n            this.tab = 1;\r\n        }\r\n\r\n        // 00秒までの残り秒数を取得\r\n        // 現在 16:01:34 なら 26 (秒) になる\r\n        const residue_second = 60 - new Date().getSeconds();\r\n\r\n        // 00秒になるまで待ってから実行するタイマー\r\n        // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと番組情報の反映が遅れてしまう\r\n        this.interval_ids.push(window.setTimeout(() => {\r\n\r\n            // この時点で00秒なので、チャンネル情報を更新\r\n            this.channelsStore.update(true);\r\n\r\n            // 以降、30秒おきにチャンネル情報を更新\r\n            this.interval_ids.push(window.setInterval(() => this.channelsStore.update(true), 30 * 1000));\r\n\r\n        }, residue_second * 1000));\r\n\r\n        // チャンネル情報を更新 (初回)\r\n        await this.channelsStore.update();\r\n\r\n        // 少しだけ待つ\r\n        // v-tabs-slider-wrapper をアニメーションさせないために必要\r\n        await Utils.sleep(0.01);\r\n\r\n        // この時点でピン留めされているチャンネルがないなら、タブを地デジタブに切り替える\r\n        // ピン留めされているチャンネル自体はあるが、現在放送されていないため表示できない場合に備える\r\n        if (this.channelsStore.channels_list_with_pinned.get('ピン留め')?.length === 0) {\r\n            this.tab = 1;\r\n        }\r\n\r\n        // チャンネル情報の更新が終わったタイミングでローディング状態を解除する\r\n        this.is_loading = false;\r\n    },\r\n    // 終了前に実行\r\n    beforeDestroy() {\r\n\r\n        // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\r\n        // clearInterval() と clearTimeout() は中身共通なので問題ない\r\n        for (const interval_id of this.interval_ids) {\r\n            window.clearInterval(interval_id);\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        // チャンネルをピン留めする\r\n        addPinnedChannel(display_channel_id: string) {\r\n\r\n            // ピン留めするチャンネルの ID を追加 (保存は自動で行われる)\r\n            this.settingsStore.settings.pinned_channel_ids.push(display_channel_id);\r\n\r\n            const channel = this.channelsStore.getChannel(display_channel_id);\r\n            if (channel) {\r\n                this.$message.show(`${channel.name}をピン留めしました。`);\r\n            }\r\n        },\r\n\r\n        // チャンネルをピン留めから外す\r\n        removePinnedChannel(display_channel_id: string) {\r\n\r\n            // ピン留めを外すチャンネルの ID を削除 (保存は自動で行われる)\r\n            this.settingsStore.settings.pinned_channel_ids.splice(this.settingsStore.settings.pinned_channel_ids.indexOf(display_channel_id), 1);\r\n\r\n            // この時点でピン留めされているチャンネルがないなら、タブを地デジタブに切り替える\r\n            if (this.channelsStore.channels_list_with_pinned.get('ピン留め')?.length === 0) {\r\n                this.tab = 1;\r\n            }\r\n\r\n            const channel = this.channelsStore.getChannel(display_channel_id);\r\n            if (channel) {\r\n                this.$message.show(`${channel.name}のピン留めを外しました。`);\r\n            }\r\n        },\r\n\r\n        // チャンネルがピン留めされているか\r\n        isPinnedChannel(display_channel_id: string): boolean {\r\n\r\n            // 引数のチャンネルがピン留めリストに存在するかを返す\r\n            return this.settingsStore.settings.pinned_channel_ids.includes(display_channel_id);\r\n        }\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n// 上書きしたいスタイル\r\n.channels-container.channels-container--home {\r\n    .v-tabs-bar {\r\n        height: 54px;\r\n        // 下線を引く\r\n        background: linear-gradient(to bottom, var(--v-background-base) calc(100% - 3px), var(--v-background-lighten1) 3px);\r\n        @include smartphone-horizontal {\r\n            height: 46px;\r\n        }\r\n    }\r\n    .v-tabs-slider-wrapper {\r\n        height: 3px !important;\r\n        transition: left 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\r\n    }\r\n\r\n    .v-window__container {\r\n        // 1px はスクロールバーを表示させるためのもの\r\n        min-height: calc(100vh - 65px - 116px + 1px);\r\n        min-height: calc(100dvh - 65px - 116px + 1px);\r\n        // タッチデバイスではスクロールバーを気にする必要がないので無効化\r\n        @media (hover: none) {\r\n            min-height: auto;\r\n        }\r\n    }\r\n}\r\n.channels-container.channels-container--home.channels-container--loading {\r\n    .v-tabs-slider-wrapper {\r\n        transition: none !important;\r\n    }\r\n}\r\n\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n\r\n.channels-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    margin-left: 21px;\r\n    margin-right: 21px;\r\n    opacity: 1;\r\n    transition: opacity 0.2s;\r\n    @include smartphone-vertical {\r\n        margin-left: 0px;\r\n        margin-right: 0px;\r\n    }\r\n\r\n    &--loading {\r\n        opacity: 0;\r\n    }\r\n\r\n    .channels-tab {\r\n        position: sticky;\r\n        flex: none;\r\n        top: 65px;  // ヘッダーの高さ分\r\n        padding-top: 2px;\r\n        padding-bottom: 12px;\r\n        background:var(--v-background-base);\r\n        z-index: 1;\r\n        @include smartphone-horizontal {\r\n            top: 0px;\r\n            padding-top: 0px;\r\n            padding-bottom: 8px;\r\n        }\r\n        @include smartphone-vertical {\r\n            top: 0px;\r\n            padding-top: 0px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .channels-tab__item {\r\n            width: 98px;\r\n            padding: 0;\r\n            color: var(--v-text-base) !important;\r\n            font-size: 16px;\r\n            text-transform: none;\r\n            @include smartphone-horizontal {\r\n                font-size: 15px;\r\n            }\r\n            @include smartphone-vertical {\r\n                width: auto;\r\n                font-size: 15px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .channels-list {\r\n        padding-bottom: 20px;\r\n        background: transparent !important;\r\n        overflow: inherit;\r\n        @include smartphone-horizontal {\r\n            padding-bottom: 12px;\r\n        }\r\n        @include smartphone-vertical {\r\n            padding-left: 8px;\r\n            padding-right: 8px;\r\n            padding-bottom: 12px;\r\n        }\r\n\r\n        .channels {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(365px, 1fr));\r\n            grid-row-gap: 12px;\r\n            grid-column-gap: 16px;\r\n            justify-content: center;\r\n            // 背後を通過する別のタブのアニメーションが写らないようにするのに必要\r\n            background: var(--v-background-base);\r\n            // will-change を入れておく事で、アニメーションが GPU で処理される\r\n            will-change: transform;\r\n            @include tablet-vertical {\r\n                grid-row-gap: 10px;\r\n                grid-template-columns: 1fr;\r\n            }\r\n            @include smartphone-horizontal {\r\n                grid-row-gap: 8px;\r\n                grid-template-columns: 1fr;\r\n            }\r\n            @include smartphone-vertical {\r\n                grid-row-gap: 10px;\r\n                grid-template-columns: 1fr;\r\n            }\r\n\r\n            // チャンネルリストでの content-visibility: auto; はちょっと描画上の副作用もあるので、\r\n            // パフォーマンス向上が顕著なスマホ・タブレット (タッチデバイス) のみに適用する\r\n            @media (hover: none) {\r\n                content-visibility: auto;\r\n                contain-intrinsic-height: 2000px;  // だいたい 2000px 分の高さを確保\r\n            }\r\n\r\n            // 1630px 以上で幅を 445px に固定\r\n            @media (min-width: 1630px) {\r\n                grid-template-columns: repeat(auto-fit, 445px);\r\n            }\r\n\r\n            // ピン留めされているチャンネルがないとき\r\n            &.channels--length-0.channels--tab-ピン留め {\r\n                display: flex;\r\n                min-height: calc(100vh - 65px - 116px + 1px);\r\n                min-height: calc(100dvh - 65px - 116px + 1px);\r\n                @include smartphone-horizontal {\r\n                    min-height: calc(100vh - 54px - 12px);\r\n                    min-height: calc(100dvh - 54px - 12px);\r\n                }\r\n            }\r\n\r\n            // カードが横いっぱいに表示されてしまうのを回避する\r\n            // チャンネルリストにチャンネルが1つしか表示されていないとき\r\n            &.channels--length-1 {\r\n                // 2列\r\n                @media (min-width: 1008px) {\r\n                    // 16px は余白の幅のこと\r\n                    margin-right: calc((((100% - (16px * 1)) / 2) * 1) + (16px * 1));  // もう1つ分のカード幅を埋める\r\n                }\r\n                // 3列でカード幅が自動\r\n                @media (min-width: 1389px) {\r\n                    margin-right: calc((((100% - (16px * 2)) / 3) * 2) + (16px * 2));  // もう2つ分のカード幅を埋める\r\n                }\r\n                // 3列でカード幅が 445px\r\n                @media (min-width: 1630px) {\r\n                    margin-right: calc((445px * 2) + (16px * 2));  // もう2つ分のカード幅を埋める\r\n                }\r\n                // 4列でカード幅が 445px\r\n                @media (min-width: 2090px) {\r\n                    margin-right: calc((445px * 3) + (16px * 3));  // もう3つ分のカード幅を埋める\r\n                }\r\n            }\r\n            // チャンネルリストにチャンネルが2つしか表示されていないとき\r\n            &.channels--length-2 {\r\n                // 3列でカード幅が自動\r\n                @media (min-width: 1389px) {\r\n                    margin-right: calc((((100% - (16px * 2)) / 3) * 1) + (16px * 1));  // もう1つ分のカード幅を埋める\r\n                }\r\n                // 3列でカード幅が 445px\r\n                @media (min-width: 1630px) {\r\n                    margin-right: calc(445px + 16px);  // もう1つ分のカード幅を埋める\r\n                }\r\n                // 4列でカード幅が 445px\r\n                @media (min-width: 2090px) {\r\n                    margin-right: calc((445px * 2) + (16px * 2));  // もう2つ分のカード幅を埋める\r\n                }\r\n            }\r\n            // チャンネルリストにチャンネルが3つしか表示されていないとき\r\n            &.channels--length-3 {\r\n                // 4列でカード幅が 445px\r\n                @media (min-width: 2090px) {\r\n                    margin-right: calc(445px + 16px);  // もう1つ分のカード幅を埋める\r\n                }\r\n            }\r\n\r\n            .channel {\r\n                display: flex;\r\n                flex-direction: column;\r\n                position: relative;\r\n                height: 270px;\r\n                padding: 18px 20px;\r\n                padding-bottom: 19px;\r\n                border-radius: 14px;\r\n                color: var(--v-text-base);\r\n                background: var(--v-background-lighten1);\r\n                transition: background-color 0.15s;\r\n                overflow: hidden;  // progressbar を切り抜くために必要\r\n                text-decoration: none;\r\n                user-select: none;\r\n                cursor: pointer;\r\n                // content-visibility: auto; を付与するだけでスマホでの描画パフォーマンスが大幅に向上する\r\n                content-visibility: auto;\r\n                contain-intrinsic-height: 233px;\r\n\r\n                // 1列表示\r\n                @media (max-width: 1007.9px) {\r\n                    height: auto;\r\n                }\r\n                @include tablet-vertical {\r\n                    padding: 14px 16px;\r\n                    padding-top: 12px;\r\n                    height: auto;\r\n                    border-radius: 11px;\r\n                    contain-intrinsic-height: 162.25px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    padding: 12px 14px;\r\n                    padding-top: 10px;\r\n                    height: auto;\r\n                    border-radius: 11px;\r\n                    contain-intrinsic-height: 125px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    padding: 12px 14px;\r\n                    padding-top: 10px;\r\n                    height: auto;\r\n                    border-radius: 11px;\r\n                    contain-intrinsic-height: 162.25px;\r\n                }\r\n\r\n                &:hover {\r\n                    background: var(--v-background-lighten2);\r\n                }\r\n                // タッチデバイスで hover を無効にする\r\n                @media (hover: none) {\r\n                    &:hover {\r\n                        background: var(--v-background-lighten1);\r\n                    }\r\n                }\r\n\r\n                .channel__broadcaster {\r\n                    display: flex;\r\n                    height: 44px;\r\n                    @include tablet-vertical {\r\n                        height: 40px;\r\n                    }\r\n                    @include smartphone-horizontal {\r\n                        height: 29px;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        height: 40px;\r\n                    }\r\n\r\n                    &-icon {\r\n                        display: inline-block;\r\n                        flex-shrink: 0;\r\n                        width: 80px;\r\n                        height: 44px;\r\n                        border-radius: 5px;\r\n                        // 読み込まれるまでのアイコンの背景\r\n                        background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n                        object-fit: cover;\r\n                        @include tablet-vertical {\r\n                            width: 69px;\r\n                            height: 40px;\r\n                            border-radius: 4px;\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            width: 54px;\r\n                            height: 29px;\r\n                            border-radius: 4px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            width: 69px;\r\n                            height: 40px;\r\n                            border-radius: 4px;\r\n                        }\r\n                    }\r\n\r\n                    &-content {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        margin-left: 16px;\r\n                        width: 100%;\r\n                        min-width: 0;\r\n                        @include tablet-vertical {\r\n                            margin-left: 14px;\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            align-items: center;\r\n                            flex-direction: row;\r\n                            margin-left: 12px;\r\n                            margin-right: 6px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            margin-left: 14px;\r\n                        }\r\n                    }\r\n\r\n                    &-name {\r\n                        flex-shrink: 0;\r\n                        font-size: 18px;\r\n                        overflow: hidden;\r\n                        white-space: nowrap;\r\n                        text-overflow: ellipsis;\r\n                        @include tablet-vertical {\r\n                            font-size: 15.5px;\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            font-size: 15px;\r\n                            margin-right: 8px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            font-size: 15.5px;\r\n                        }\r\n                    }\r\n\r\n                    &-status {\r\n                        display: flex;\r\n                        position: relative;\r\n                        top: -1.5px;\r\n                        flex-shrink: 0;\r\n                        align-items: center;\r\n                        margin-top: 2px;\r\n                        font-size: 12px;\r\n                        color: var(--v-text-darken1);\r\n                        @include tablet-vertical {\r\n                            margin-top: 2px;\r\n                            font-size: 11px;\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            margin-top: 3px;\r\n                            margin-left: auto;\r\n                            font-size: 12px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            margin-top: 2px;\r\n                            font-size: 11px;\r\n                        }\r\n\r\n                        &-force, &-viewers {\r\n                            display: flex;\r\n                            align-items: center;\r\n                            @include smartphone-horizontal {\r\n                                span:nth-child(2), span:nth-child(4) {\r\n                                    display: none;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        @include smartphone-horizontal {\r\n                            &-viewers {\r\n                                margin-left: 12px !important;\r\n                            }\r\n                        }\r\n\r\n                        &-force--festival {\r\n                            color: #E7556E;\r\n                        }\r\n                        &-force--so-many {\r\n                            color: #E76B55;\r\n                        }\r\n                        &-force--many {\r\n                            color: #E7A355;\r\n                        }\r\n                    }\r\n\r\n                    &-pin {\r\n                        display: flex;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        flex-shrink: 0;\r\n                        position: relative;\r\n                        top: -5px;\r\n                        right: -5px;\r\n                        width: 34px;\r\n                        height: 34px;\r\n                        padding: 4px;\r\n                        color: var(--v-text-darken1);\r\n                        border-radius: 50%;\r\n                        transition: color 0.15s ease, background-color 0.15s ease;\r\n                        user-select: none;\r\n                        @include smartphone-horizontal {\r\n                            top: -1px;\r\n                        }\r\n\r\n                        &:before {\r\n                            content: \"\";\r\n                            position: absolute;\r\n                            top: 0;\r\n                            left: 0;\r\n                            right: 0;\r\n                            bottom: 0;\r\n                            border-radius: inherit;\r\n                            background-color: currentColor;\r\n                            color: inherit;\r\n                            opacity: 0;\r\n                            transition: opacity 0.2s cubic-bezier(0.4, 0, 0.6, 1);\r\n                            pointer-events: none;\r\n                        }\r\n                        &:hover {\r\n                            color: var(--v-text-base);\r\n                            &:before {\r\n                                opacity: 0.15;\r\n                            }\r\n                        }\r\n                        &--pinned {\r\n                            color: var(--v-primary-base);\r\n                            &:hover{\r\n                                color: var(--v-primary-lighten1);\r\n                            }\r\n                            @include smartphone-horizontal {\r\n                                color: var(--v-secondary-lighten2);\r\n                                &:hover{\r\n                                    color: var(--v-secondary-lighten3);\r\n                                }\r\n                            }\r\n                            @include smartphone-vertical {\r\n                                color: var(--v-secondary-lighten2);\r\n                                &:hover{\r\n                                    color: var(--v-secondary-lighten3);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .channel__program-present {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n\r\n                    &-title-wrapper {\r\n                        margin-top: 14px;\r\n\r\n                        @include tablet-vertical {\r\n                            display: flex;\r\n                            flex-direction: column;\r\n                            margin-top: 8px;\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            display: flex;\r\n                            align-items: center;\r\n                            margin-top: 8px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            display: flex;\r\n                            flex-direction: column;\r\n                            margin-top: 8px;\r\n                        }\r\n                    }\r\n\r\n                    &-title {\r\n                        display: -webkit-box;\r\n                        font-size: 16px;\r\n                        font-weight: 700;\r\n                        font-feature-settings: \"palt\" 1;  // 文字詰め\r\n                        letter-spacing: 0.07em;  // 字間を少し空ける\r\n                        overflow: hidden;\r\n                        -webkit-line-clamp: 2;  // 2行までに制限\r\n                        -webkit-box-orient: vertical;\r\n                        @include tablet-vertical {\r\n                            font-size: 14px;\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            font-size: 14px;\r\n                            -webkit-line-clamp: 1;  // 1行までに制限\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            font-size: 14px;\r\n                            -webkit-line-clamp: 1;  // 1行までに制限\r\n                        }\r\n                    }\r\n\r\n                    &-time {\r\n                        margin-top: 4px;\r\n                        color: var(--v-text-darken1);\r\n                        font-size: 13.5px;\r\n                        @include tablet-vertical {\r\n                            flex-shrink: 0;\r\n                            margin-top: 2px;\r\n                            font-size: 13px;\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            flex-shrink: 0;\r\n                            margin-top: 0px;\r\n                            margin-left: auto;\r\n                            padding-left: 10px;\r\n                            font-size: 12px;\r\n                        }\r\n                        @include smartphone-horizontal-short {\r\n                            font-size: 11px;\r\n                            padding-left: 6px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            flex-shrink: 0;\r\n                            margin-top: 1px;\r\n                            font-size: 12px;\r\n                        }\r\n                    }\r\n\r\n                    &-description {\r\n                        display: -webkit-box;\r\n                        margin-top: 6px;\r\n                        color: var(--v-text-darken1);\r\n                        font-size: 10.5px;\r\n                        line-height: 175%;\r\n                        overflow-wrap: break-word;\r\n                        font-feature-settings: \"palt\" 1;  // 文字詰め\r\n                        letter-spacing: 0.07em;  // 字間を少し空ける\r\n                        overflow: hidden;\r\n                        -webkit-line-clamp: 3;  // 3行までに制限\r\n                        -webkit-box-orient: vertical;\r\n                        @include tablet-vertical {\r\n                            margin-top: 4px;\r\n                            font-size: 11px;\r\n                            line-height: 155%;\r\n                            -webkit-line-clamp: 2;  // 2行までに制限\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            margin-top: 3px;\r\n                            font-size: 10px;\r\n                            line-height: 160%;\r\n                            -webkit-line-clamp: 2;  // 2行までに制限\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            margin-top: 4px;\r\n                            font-size: 10px;\r\n                            line-height: 155%;\r\n                            -webkit-line-clamp: 2;  // 2行までに制限\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .channel__program-following {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    color: var(--v-text-base);\r\n                    font-size: 12.5px;\r\n                    // 1列表示\r\n                    @media (max-width: 1007.9px) {\r\n                        margin-top: 6px;\r\n                    }\r\n                    @include smartphone-horizontal {\r\n                        flex-direction: row;\r\n                        margin-top: 4px;\r\n                        font-size: 12px;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        margin-top: 4px;\r\n                        font-size: 12px;\r\n                    }\r\n\r\n                    &-title {\r\n                        display: flex;\r\n                        align-items: center;\r\n                        min-width: 0;  // magic!\r\n\r\n                        &-decorate {\r\n                            flex-shrink: 0;\r\n                            font-weight: bold;\r\n                        }\r\n                        &-icon {\r\n                            flex-shrink: 0;\r\n                            margin-left: 3px;\r\n                        }\r\n                        &-text {\r\n                            margin-left: 2px;\r\n                            white-space: nowrap;\r\n                            text-overflow: ellipsis;  // はみ出た部分を … で省略\r\n                            overflow: hidden;\r\n                        }\r\n                    }\r\n                    &-time {\r\n                        color: var(--v-text-darken1);\r\n                        @include smartphone-horizontal {\r\n                            flex-shrink: 0;\r\n                            margin-left: auto;\r\n                            padding-left: 8px;\r\n                            font-size: 11.5px;\r\n                        }\r\n                        @include smartphone-horizontal-short {\r\n                            font-size: 11px;\r\n                            padding-left: 6px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            flex-shrink: 0;\r\n                            font-size: 11.5px;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .channel__progressbar {\r\n                    position: absolute;\r\n                    left: 0;\r\n                    right: 0;\r\n                    bottom: 0;\r\n                    height: 4px;\r\n                    background: var(--v-gray-base);\r\n\r\n                    &-progress {\r\n                        height: 4px;\r\n                        background: var(--v-primary-base);\r\n                        transition: width 0.3s;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .pinned-container {\r\n        br {\r\n            display: none;\r\n        }\r\n        @include tablet-vertical {\r\n            h2 {\r\n                font-size: 21px !important;\r\n            }\r\n            div {\r\n                font-size: 12.5px !important;\r\n                text-align: center;\r\n            }\r\n        }\r\n        @include smartphone-horizontal {\r\n            padding-top: 12px;\r\n            h2 {\r\n                font-size: 21px !important;\r\n            }\r\n            div {\r\n                font-size: 13px !important;\r\n                text-align: center;\r\n                .mt-4 {\r\n                    margin-top: 12px !important;\r\n                }\r\n                svg {\r\n                    width: 16px;\r\n                }\r\n            }\r\n        }\r\n        @include smartphone-horizontal-short {\r\n            h2 {\r\n                font-size: 16px !important;\r\n            }\r\n            div {\r\n                font-size: 10.5px !important;\r\n                .mt-4 {\r\n                    margin-top: 8px !important;\r\n                }\r\n            }\r\n        }\r\n        @include smartphone-vertical {\r\n            min-height: calc(100vh - 56px - 64px - 12px);\r\n            min-height: calc(100dvh - 56px - 64px - 12px);\r\n            padding-top: 12px;\r\n            br {\r\n                display: inline;\r\n            }\r\n            h2 {\r\n                font-size: 22px !important;\r\n                text-align: center;\r\n            }\r\n            div {\r\n                font-size: 15px !important;\r\n                text-align: center;\r\n                .mt-4 {\r\n                    margin-top: 8px !important;\r\n                }\r\n                svg {\r\n                    width: 20px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=45dc29f5&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=45dc29f5&prod&lang=scss\"\nimport style1 from \"./Home.vue?vue&type=style&index=1&id=45dc29f5&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"45dc29f5\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('main',{staticClass:\"watch-container\",class:{\n            'watch-container--control-display': _vm.is_control_display,\n            'watch-container--panel-display': _vm.Utils.isSmartphoneVertical() || _vm.Utils.isTabletVertical() ? true : _vm.is_panel_display,\n            'watch-container--fullscreen': _vm.is_fullscreen,\n        }},[_c('nav',{staticClass:\"watch-navigation\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-navigation__icon\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"watch-navigation__icon-image\",attrs:{\"src\":\"/assets/images/icon.svg\",\"width\":\"23px\"}})]),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('テレビをみる'),expression:\"'テレビをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('ビデオをみる'),expression:\"'ビデオをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('番組表'),expression:\"'番組表'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('録画予約'),expression:\"'録画予約'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/reserves/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",staticStyle:{\"padding\":\"0.5px\"},attrs:{\"icon\":\"fluent:timer-16-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('マイリスト'),expression:\"'マイリスト'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/mylist/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('キャプチャ'),expression:\"'キャプチャ'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}})],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('設定'),expression:\"'設定'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}})],1)],1),_c('div',{staticClass:\"watch-content\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event, true)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event, true)},\"click\":function($event){return _vm.controlDisplayTimer($event, true)}}},[_c('header',{staticClass:\"watch-header\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-header__back-icon\",attrs:{\"to\":\"/tv/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('img',{staticClass:\"watch-header__broadcaster\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.display_channel_id)}/logo`}}),_c('span',{staticClass:\"watch-header__program-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_present, 'title'))}}),_c('span',{staticClass:\"watch-header__program-time\"},[_vm._v(\" \"+_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channelsStore.channel.current.program_present, true))+\" \")]),_c('v-spacer'),_c('span',{staticClass:\"watch-header__now\"},[_vm._v(_vm._s(_vm.time))])],1),_c('div',{staticClass:\"watch-player\",class:{\n                'watch-player--loading': _vm.is_loading,\n                'watch-player--virtual-keyboard-display': _vm.is_virtual_keyboard_display && _vm.Utils.hasActiveElementClass('dplayer-comment-input'),\n            }},[_c('div',{staticClass:\"watch-player__background-wrapper\"},[_c('div',{staticClass:\"watch-player__background\",class:{'watch-player__background--display': _vm.is_background_display},style:({backgroundImage: `url(${_vm.background_url})`})},[_c('img',{staticClass:\"watch-player__background-logo\",attrs:{\"src\":\"/assets/images/logo.svg\"}})])]),_c('v-progress-circular',{staticClass:\"watch-player__buffering\",class:{'watch-player__buffering--display': _vm.is_video_buffering && (_vm.is_loading || (_vm.player !== null && !_vm.player.video.paused))},attrs:{\"indeterminate\":\"\",\"size\":\"60\",\"width\":\"6\"}}),_c('div',{staticClass:\"watch-player__dplayer\"}),_c('div',{staticClass:\"watch-player__button\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.top\",value:('前のチャンネル'),expression:\"'前のチャンネル'\",modifiers:{\"top\":true}}],staticClass:\"switch-button switch-button-up\",on:{\"click\":function($event){_vm.is_zapping = true; _vm.$router.push({path: `/tv/watch/${_vm.channelsStore.channel.previous.display_channel_id}`})}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-left-24-filled\",\"width\":\"32px\",\"rotate\":\"1\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"switch-button switch-button-panel switch-button-panel--open\",on:{\"click\":function($event){_vm.is_panel_display = !_vm.is_panel_display}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:navigation-16-filled\",\"width\":\"32px\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.bottom\",value:('次のチャンネル'),expression:\"'次のチャンネル'\",modifiers:{\"bottom\":true}}],staticClass:\"switch-button switch-button-down\",on:{\"click\":function($event){_vm.is_zapping = true; _vm.$router.push({path: `/tv/watch/${_vm.channelsStore.channel.next.display_channel_id}`})}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-right-24-filled\",\"width\":\"33px\",\"rotate\":\"1\"}})],1)])],1)]),_c('div',{staticClass:\"watch-panel\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('div',{staticClass:\"watch-panel__header\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-close-button\",on:{\"click\":function($event){_vm.is_panel_display = false}}},[_c('Icon',{staticClass:\"panel-close-button__icon\",attrs:{\"icon\":\"akar-icons:chevron-right\",\"width\":\"25px\"}}),_c('span',{staticClass:\"panel-close-button__text\"},[_vm._v(\"閉じる\")])],1),_c('v-spacer'),_c('div',{staticClass:\"panel-broadcaster\"},[_c('img',{staticClass:\"panel-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.display_channel_id)}/logo`}}),_c('div',{staticClass:\"panel-broadcaster__number\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.channel_number))]),_c('div',{staticClass:\"panel-broadcaster__name\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.name))])])],1),_c('div',{staticClass:\"watch-panel__content-container\"},[_c('Program',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Program'}}),_c('Channel',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Channel'}}),_c('Comment',{ref:\"Comment\",staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Comment'}}),_c('Twitter',{ref:\"Twitter\",staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Twitter'},attrs:{\"playback_mode\":'Live'},on:{\"panel_folding_requested\":function($event){_vm.is_panel_display = false}}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-panel__content-remocon-button elevation-8\",class:{'watch-panel__content-remocon-button--active': _vm.tv_panel_active_tab === 'Program' || _vm.tv_panel_active_tab === 'Channel'},on:{\"click\":function($event){_vm.is_remocon_display = !_vm.is_remocon_display}}},[_c('Icon',{staticClass:\"panel-close-button__icon\",attrs:{\"icon\":\"material-symbols:remote-gen\",\"width\":\"25px\"}})],1),_c('Remocon',{staticClass:\"watch-panel__remocon\",attrs:{\"showing\":(_vm.tv_panel_active_tab === 'Program' || _vm.tv_panel_active_tab === 'Channel') && _vm.is_remocon_display === true},on:{\"close\":function($event){_vm.is_remocon_display = false}}})],1),_c('div',{staticClass:\"watch-panel__navigation\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Program'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Program'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:info-circle\",\"width\":\"33px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"番組情報\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Channel'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Channel'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:broadcast-tower\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"チャンネル\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Comment'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Comment'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"29px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"コメント\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Twitter'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Twitter'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"Twitter\")])],1)])])]),_c('v-dialog',{attrs:{\"max-width\":\"1050\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.shortcut_key_modal),callback:function ($$v) {_vm.shortcut_key_modal=$$v},expression:\"shortcut_key_modal\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"px-5 pt-4 pb-3 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":\"fluent:keyboard-20-filled\",\"height\":\"28px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"キーボードショートカット\")]),_c('v-spacer'),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\",on:{\"click\":function($event){_vm.shortcut_key_modal = false}}},[_c('Icon',{attrs:{\"icon\":\"fluent:dismiss-12-filled\",\"width\":\"23px\",\"height\":\"23px\"}})],1)],1),_c('div',{staticClass:\"px-5 pb-4\"},[_c('v-row',_vm._l((_vm.shortcut_key_list),function(shortcut_key_column,shortcut_key_column_name){return _c('v-col',{key:shortcut_key_column_name,attrs:{\"cols\":\"6\"}},_vm._l((shortcut_key_column),function(shortcut_keys){return _c('div',{key:shortcut_keys.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":shortcut_keys.icon,\"height\":shortcut_keys.icon_height}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(shortcut_keys.name))])],1),_vm._l((shortcut_keys.shortcuts),function(shortcut){return _c('div',{key:shortcut.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-2 mt-2 d-flex align-center font-weight-medium\"},[_c('span',{staticClass:\"mr-2\",domProps:{\"innerHTML\":_vm._s(shortcut.name)}}),_c('div',{staticClass:\"ml-auto d-flex align-center flex-shrink-0\"},_vm._l((shortcut.keys),function(key,index){return _c('div',{key:key.name,staticClass:\"ml-auto d-flex align-center\"},[_c('span',{staticClass:\"shortcut-key\"},[_vm._l((key.name.split(';')),function(key_name){return _c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(key.icon === true),expression:\"key.icon === true\"}],key:key_name,attrs:{\"icon\":key_name,\"height\":\"18px\"}})}),(key.icon === false)?_c('span',{domProps:{\"innerHTML\":_vm._s(key.name)}}):_vm._e()],2),(index < (shortcut.keys.length - 1))?_c('span',{staticClass:\"shortcut-key-plus\"},[_vm._v(\"+\")]):_vm._e()])}),0)])])})],2)}),0)}),1)],1)],1)],1),_c('BottomNavigation')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"channels-container channels-container--watch\"},[_c('v-tabs-fix',{staticClass:\"channels-tab\",attrs:{\"centered\":\"\",\"show-arrows\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned_for_watch)),function([channels_type,]){return _c('v-tab',{key:channels_type,staticClass:\"channels-tab__item\"},[_vm._v(\" \"+_vm._s(channels_type)+\" \")])}),1),_c('div',{staticClass:\"channels-list-container\"},[_c('v-tabs-items-fix',{staticClass:\"channels-list\",model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned_for_watch)),function([channels_type, channels]){return _c('v-tab-item-fix',{key:channels_type,staticClass:\"channels\"},_vm._l((channels),function(channel){return _c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:channel.id,staticClass:\"channel\",attrs:{\"to\":`/tv/watch2/${channel.display_channel_id}`}},[_c('div',{staticClass:\"channel__broadcaster\"},[_c('img',{staticClass:\"channel__broadcaster-icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${channel.display_channel_id}/logo`}}),_c('div',{staticClass:\"channel__broadcaster-content\"},[_c('span',{staticClass:\"channel__broadcaster-name\"},[_vm._v(\"Ch: \"+_vm._s(channel.channel_number)+\" \"+_vm._s(channel.name))]),_c('div',{staticClass:\"channel__broadcaster-force\",class:`channel__broadcaster-force--${_vm.ChannelUtils.getChannelForceType(channel.jikkyo_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(channel.jikkyo_force ?? '--'))])],1)])]),_c('div',{staticClass:\"channel__program-present\"},[_c('span',{staticClass:\"channel__program-present-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'title'))}}),_c('span',{staticClass:\"channel__program-present-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_present)))])]),_c('div',{staticClass:\"channel__program-following\"},[_c('div',{staticClass:\"channel__program-following-title\"},[_c('span',{staticClass:\"channel__program-following-title-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"channel__program-following-title-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}}),_c('span',{staticClass:\"channel__program-following-title-text\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_following, 'title'))}})],1),_c('span',{staticClass:\"channel__program-following-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_following)))])]),_c('div',{staticClass:\"channel__progressbar\"},[_c('div',{staticClass:\"channel__progressbar-progress\",style:(`width:${_vm.ProgramUtils.getProgramProgress(channel.program_present)}%;`)})])])}),1)}),1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"channels-container channels-container--watch\">\r\n        <v-tabs-fix centered show-arrows class=\"channels-tab\" v-model=\"tab\">\r\n            <v-tab class=\"channels-tab__item\"\r\n                v-for=\"[channels_type,] in Array.from(channelsStore.channels_list_with_pinned_for_watch)\" :key=\"channels_type\">\r\n                {{channels_type}}\r\n            </v-tab>\r\n        </v-tabs-fix>\r\n        <div class=\"channels-list-container\">\r\n            <v-tabs-items-fix class=\"channels-list\" v-model=\"tab\">\r\n                <v-tab-item-fix class=\"channels\"\r\n                    v-for=\"[channels_type, channels] in Array.from(channelsStore.channels_list_with_pinned_for_watch)\" :key=\"channels_type\">\r\n                    <router-link v-ripple class=\"channel\" v-for=\"channel in channels\" :key=\"channel.id\" :to=\"`/tv/watch2/${channel.display_channel_id}`\">\r\n                        <div class=\"channel__broadcaster\">\r\n                            <img class=\"channel__broadcaster-icon\" :src=\"`${Utils.api_base_url}/channels/${channel.display_channel_id}/logo`\">\r\n                            <div class=\"channel__broadcaster-content\">\r\n                                <span class=\"channel__broadcaster-name\">Ch: {{channel.channel_number}} {{channel.name}}</span>\r\n                                <div class=\"channel__broadcaster-force\"\r\n                                    :class=\"`channel__broadcaster-force--${ChannelUtils.getChannelForceType(channel.jikkyo_force)}`\">\r\n                                    <Icon icon=\"fa-solid:fire-alt\" height=\"11px\" />\r\n                                    <span class=\"ml-1\">{{channel.jikkyo_force ?? '--'}}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"channel__program-present\">\r\n                            <span class=\"channel__program-present-title\"\r\n                                v-html=\"ProgramUtils.decorateProgramInfo(channel.program_present, 'title')\">\r\n                            </span>\r\n                            <span class=\"channel__program-present-time\">{{ProgramUtils.getProgramTime(channel.program_present)}}</span>\r\n                        </div>\r\n                        <div class=\"channel__program-following\">\r\n                            <div class=\"channel__program-following-title\">\r\n                                <span class=\"channel__program-following-title-decorate\">NEXT</span>\r\n                                <Icon class=\"channel__program-following-title-icon\" icon=\"fluent:fast-forward-20-filled\" width=\"16px\" />\r\n                                <span class=\"channel__program-following-title-text\"\r\n                                    v-html=\"ProgramUtils.decorateProgramInfo(channel.program_following, 'title')\">\r\n                                </span>\r\n                            </div>\r\n                            <span class=\"channel__program-following-time\">{{ProgramUtils.getProgramTime(channel.program_following)}}</span>\r\n                        </div>\r\n                        <div class=\"channel__progressbar\">\r\n                            <div class=\"channel__progressbar-progress\"\r\n                                 :style=\"`width:${ProgramUtils.getProgramProgress(channel.program_present)}%;`\"></div>\r\n                        </div>\r\n                    </router-link>\r\n                </v-tab-item-fix>\r\n            </v-tabs-items-fix>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\r\n\r\nexport default Vue.extend({\r\n    name: 'Panel-ChannelTab',\r\n    data() {\r\n        return {\r\n\r\n            // ユーティリティをテンプレートで使えるように\r\n            Utils: Utils,\r\n            ChannelUtils: ChannelUtils,\r\n            ProgramUtils: ProgramUtils,\r\n\r\n            // タブの状態管理\r\n            tab: null,\r\n        };\r\n    },\r\n    computed: {\r\n        // ChannelsStore に this.channelsStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useChannelsStore),\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n// 上書きしたいスタイル\r\n.channels-container.channels-container--watch {\r\n    .v-tabs-bar {\r\n        // スペースが少ないので高さを抑える\r\n        height: 42px;\r\n        // 下線を引く\r\n        background: linear-gradient(to bottom, var(--v-background-base) calc(100% - 3px), var(--v-background-lighten1) 3px);\r\n        @include tablet-vertical {\r\n            height: 50px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            height: 44px;\r\n        }\r\n        @include smartphone-vertical {\r\n            height: 46px;\r\n        }\r\n\r\n        // 幅を縮める\r\n        .v-slide-group__prev, .v-slide-group__next {\r\n            flex: auto !important;\r\n            min-width: 28px !important;\r\n        }\r\n    }\r\n    .v-tabs-slider-wrapper {\r\n        height: 3px !important;\r\n        transition: left 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\r\n    }\r\n}\r\n\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n\r\n.channels-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .channels-tab {\r\n        position: sticky;\r\n        flex: none;\r\n        top: 0px;\r\n        padding-left: 16px;\r\n        padding-right: 16px;\r\n        padding-bottom: 14px;\r\n        background:var(--v-background-base);\r\n        z-index: 1;\r\n        @include tablet-vertical {\r\n            padding-left: 24px;\r\n            padding-right: 24px;\r\n            padding-bottom: 10px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            padding-bottom: 8px;\r\n            margin-top: 0px;\r\n        }\r\n        @include smartphone-vertical {\r\n            padding-bottom: 8px;\r\n            margin-top: 0px;\r\n        }\r\n\r\n        .channels-tab__item {\r\n            min-width: 72px !important;\r\n            padding: 0 8px;\r\n            color: var(--v-text-base) !important;\r\n            font-size: 15px;\r\n            text-transform: none;\r\n            @include smartphone-horizontal {\r\n                font-size: 14.5px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .channels-list-container {\r\n        overflow-y: auto;\r\n\r\n        .channels-list {\r\n            padding-left: 16px;\r\n            padding-right: 10px;\r\n            padding-bottom: 16px;\r\n            background: transparent !important;\r\n            overflow: visible !important;\r\n            @include tablet-vertical {\r\n                padding-left: 24px;\r\n                padding-right: 24px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                padding-bottom: 12px;\r\n            }\r\n\r\n            .channels {\r\n                display: flex;\r\n                justify-content: center;\r\n                flex-direction: column;\r\n                // will-change を入れておく事で、アニメーションが GPU で処理される\r\n                will-change: transform;\r\n\r\n                // チャンネルリストでの content-visibility: auto; はちょっと描画上の副作用もあるので、\r\n                // パフォーマンス向上が顕著なスマホ・タブレット (タッチデバイス) のみに適用する\r\n                @media (hover: none) {\r\n                    content-visibility: auto;\r\n                    contain-intrinsic-size: 319.3px 2000px;  // だいたい 2000px 分の高さを確保\r\n                    @include smartphone-horizontal {\r\n                        contain-intrinsic-size: 277.3px 2000px;\r\n                    }\r\n                }\r\n\r\n                // 1630px 以上で幅を 445px に固定\r\n                @media (min-width: 1630px) {\r\n                    grid-template-columns: repeat(auto-fit, 445px);\r\n                }\r\n\r\n                .channel {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    position: relative;\r\n                    margin-top: 12px;\r\n                    padding: 10px 12px 14px 12px;\r\n                    border-radius: 10px;\r\n                    color: var(--v-text-base);\r\n                    background: var(--v-background-lighten1);\r\n                    transition: background-color 0.15s;\r\n                    overflow: hidden;  // progressbar を切り抜くために必要\r\n                    text-decoration: none;\r\n                    user-select: none;\r\n                    cursor: pointer;\r\n                    // content-visibility: auto; を付与するだけでスマホでの描画パフォーマンスが大幅に向上する\r\n                    content-visibility: auto;\r\n                    contain-intrinsic-size: 295.3px 137.3px;\r\n\r\n                    &:first-of-type {\r\n                        margin-top: 0px;\r\n                    }\r\n                    @include smartphone-horizontal {\r\n                        margin-top: 8px;\r\n                        padding: 8px 12px 12px 12px;\r\n                        border-radius: 8px;\r\n                        contain-intrinsic-size: 253.3px 107.2px;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        margin-top: 8px;\r\n                        padding: 8px 12px 12px 12px;\r\n                        border-radius: 8px;\r\n                        contain-intrinsic-size: 253.3px 107.2px;\r\n                    }\r\n\r\n                    &:hover {\r\n                        background: var(--v-background-lighten2);\r\n                    }\r\n                    // タッチデバイスで hover を無効にする\r\n                    @media (hover: none) {\r\n                        &:hover {\r\n                            background: var(--v-background-lighten1);\r\n                        }\r\n                    }\r\n\r\n                    .channel__broadcaster {\r\n                        display: flex;\r\n                        height: 28px;\r\n                        @include smartphone-horizontal {\r\n                            height: 24px;\r\n                        }\r\n\r\n                        &-icon {\r\n                            display: inline-block;\r\n                            flex-shrink: 0;\r\n                            width: 48px;\r\n                            height: 100%;\r\n                            border-radius: 4px;\r\n                            background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n                            object-fit: cover;\r\n                            @include smartphone-horizontal {\r\n                                width: 46px;\r\n                            }\r\n                        }\r\n\r\n                        &-content {\r\n                            display: flex;\r\n                            align-items: center;\r\n                            margin-left: 12px;\r\n                            width: 100%;\r\n                            min-width: 0;\r\n                            @include smartphone-horizontal {\r\n                                margin-left: 8px;\r\n                            }\r\n                        }\r\n\r\n                        &-name {\r\n                            font-size: 14.5px;\r\n                            overflow: hidden;\r\n                            white-space: nowrap;\r\n                            text-overflow: ellipsis;\r\n                            @include smartphone-horizontal {\r\n                                font-size: 13.5px;\r\n                            }\r\n                            @include smartphone-vertical {\r\n                                font-size: 13.5px;\r\n                            }\r\n                        }\r\n\r\n                        &-force {\r\n                            display: flex;\r\n                            align-items: center;\r\n                            flex-shrink: 0;\r\n                            margin-top: 2px;\r\n                            margin-left: auto;\r\n                            padding-left: 6px;\r\n                            font-size: 12px;\r\n                            color: var(--v-text-darken1);\r\n\r\n                            &--festival {\r\n                                color: #E7556E;\r\n                            }\r\n                            &--so-many {\r\n                                color: #E76B55;\r\n                            }\r\n                            &--many {\r\n                                color: #E7A355;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    .channel__program-present {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n\r\n                        &-title {\r\n                            display: -webkit-box;\r\n                            margin-top: 8px;\r\n                            font-size: 13.5px;\r\n                            font-weight: 700;\r\n                            font-feature-settings: \"palt\" 1;  // 文字詰め\r\n                            letter-spacing: 0.07em;  // 字間を少し空ける\r\n                            overflow: hidden;\r\n                            -webkit-line-clamp: 2;  // 2行までに制限\r\n                            -webkit-box-orient: vertical;\r\n                            @include smartphone-horizontal {\r\n                                margin-top: 5px;\r\n                                font-size: 12.5px;\r\n                                -webkit-line-clamp: 1;  // 1行までに制限\r\n                            }\r\n                            @include smartphone-vertical {\r\n                                margin-top: 5px;\r\n                                font-size: 12.5px;\r\n                                -webkit-line-clamp: 1;  // 1行までに制限\r\n                            }\r\n                        }\r\n\r\n                        &-time {\r\n                            margin-top: 4px;\r\n                            color: var(--v-text-darken1);\r\n                            font-size: 11.5px;\r\n                            @include smartphone-horizontal {\r\n                                margin-top: 1px;\r\n                                font-size: 10px;\r\n                            }\r\n                            @include smartphone-vertical {\r\n                                margin-top: 1px;\r\n                                font-size: 10px;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    .channel__program-following {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        margin-top: 4px;\r\n                        color: var(--v-text-darken1);\r\n                        font-size: 11.5px;\r\n                        @include smartphone-horizontal {\r\n                            margin-top: 2px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            margin-top: 2px;\r\n                        }\r\n\r\n                        &-title {\r\n                            display: flex;\r\n                            align-items: center;\r\n\r\n                            &-decorate {\r\n                                flex-shrink: 0;\r\n                            }\r\n                            &-icon {\r\n                                flex-shrink: 0;\r\n                                margin-left: 3px;\r\n                            }\r\n                            &-text {\r\n                                margin-left: 2px;\r\n                                overflow: hidden;\r\n                                white-space: nowrap;\r\n                                text-overflow: ellipsis;  // はみ出た部分を … で省略\r\n                            }\r\n                        }\r\n\r\n                        &-time {\r\n                            margin-top: 1px;\r\n                            @include smartphone-horizontal {\r\n                                font-size: 10px;\r\n                            }\r\n                            @include smartphone-vertical {\r\n                                font-size: 10px;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    .channel__progressbar {\r\n                        position: absolute;\r\n                        left: 0;\r\n                        right: 0;\r\n                        bottom: 0;\r\n                        height: 4px;\r\n                        background: var(--v-gray-base);\r\n\r\n                        &-progress {\r\n                            height: 4px;\r\n                            background: var(--v-primary-base);\r\n                            transition: width 0.3s;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Channel.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Channel.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Channel.vue?vue&type=template&id=1bcdf818&scoped=true\"\nimport script from \"./Channel.vue?vue&type=script&lang=ts\"\nexport * from \"./Channel.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Channel.vue?vue&type=style&index=0&id=1bcdf818&prod&lang=scss\"\nimport style1 from \"./Channel.vue?vue&type=style&index=1&id=1bcdf818&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1bcdf818\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-container\"},[_c('section',{staticClass:\"comment-header\"},[_c('h2',{staticClass:\"comment-header__title\"},[_c('Icon',{staticClass:\"comment-header__title-icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"height\":\"18.5px\"}}),_c('span',{staticClass:\"comment-header__title-text\"},[_vm._v(\"コメント\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-header__button ml-auto\",on:{\"click\":function($event){_vm.comment_mute_settings_modal = !_vm.comment_mute_settings_modal}}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ミュート設定\")])],1)]),_c('section',{ref:\"comment_list_wrapper\",staticClass:\"comment-list-wrapper\"},[_c('div',{staticClass:\"comment-list-dropdown\",class:{'comment-list-dropdown--display': _vm.is_comment_list_dropdown_display},style:({'--comment-list-dropdown-top': `${_vm.comment_list_dropdown_top}px`})},[_c('v-list',{staticStyle:{\"background\":\"var(--v-background-lighten1)\"}},[_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){return _vm.copyTextToClipboard()}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:clipboard-paste-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"クリップボードにコピー\")])],1)],1),_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){return _vm.addMutedKeywords()}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:comment-dismiss-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"このコメントをミュート\")])],1)],1),_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){return _vm.addMutedNiconicoUserIds()}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-prohibited-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"このコメントの投稿者をミュート\")])],1)],1)],1)],1),_c('div',{staticClass:\"comment-list-cover\",class:{'comment-list-cover--display': _vm.is_comment_list_dropdown_display},on:{\"click\":function($event){return _vm.hideCommentListDropdown()}}}),_c('DynamicScroller',{staticClass:\"comment-list\",attrs:{\"direction\":'vertical',\"items\":_vm.comment_list,\"min-item-size\":34},scopedSlots:_vm._u([{key:\"default\",fn:function({item, active}){return [_c('DynamicScrollerItem',{attrs:{\"item\":item,\"active\":active,\"size-dependencies\":[item.text]}},[_c('div',{staticClass:\"comment\",class:{'comment--my-post': item.my_post}},[_c('span',{staticClass:\"comment__text\"},[_vm._v(_vm._s(item.text))]),_c('span',{staticClass:\"comment__time\"},[_vm._v(_vm._s(item.time))]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\",value:(!_vm.Utils.isTouchDevice()),expression:\"!Utils.isTouchDevice()\"}],staticClass:\"comment__icon\",on:{\"mouseup\":function($event){return _vm.showCommentListDropdown($event, item)},\"touchend\":function($event){return _vm.showCommentListDropdown($event, item)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:more-vertical-20-filled\",\"width\":\"20px\"}})],1)])])]}}])}),(_vm.initialize_failed_message === null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"まだコメントがありません。\")]),_vm._m(0)]):_vm._e(),(_vm.initialize_failed_message !== null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"コメントがありません。\")]),_c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(_vm._s(_vm.initialize_failed_message))])])]):_vm._e()],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-scroll-button elevation-5\",class:{'comment-scroll-button--display': _vm.is_manual_scroll},on:{\"click\":function($event){_vm.is_manual_scroll = false; _vm.scrollCommentList(true);}}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-down-12-filled\",\"height\":\"29px\"}})],1),_c('CommentMuteSettings',{model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\"このチャンネルに対応するニコニコ実況のコメントが、リアルタイムで表示されます。\")])])\n}]\n\nexport { render, staticRenderFns }","\r\nimport DPlayer, { DPlayerType } from 'dplayer';\r\n\r\nimport Channels from '@/services/Channels';\r\nimport Utils, { dayjs, CommentUtils } from '@/utils';\r\n\r\n\r\nexport interface ICommentData {\r\n    id: number;\r\n    text: string;\r\n    time: string;\r\n    user_id: string;\r\n    my_post: boolean;\r\n}\r\n\r\ninterface IWatchSessionResult {\r\n    is_success: boolean;\r\n    detail: string;\r\n    message_server_url?: string;\r\n    thread_id?: string;\r\n    your_post_key?: string;\r\n}\r\n\r\n\r\nclass LiveCommentManager {\r\n\r\n    // 視聴セッションの WebSocket のインスタンス\r\n    private watch_session: WebSocket | null = null;\r\n    // コメントセッションの WebSocket のインスタンス\r\n    private comment_session: WebSocket | null = null;\r\n    // vpos を計算する基準となる時刻のタイムスタンプ\r\n    private vpos_base_timestamp: number = 0;\r\n    // 座席維持用のタイマーのインターバル ID\r\n    private keep_seat_interval_id: number | null = null;\r\n    // destroy() 時に EventListener を全解除するための AbortController\r\n    private abort_controller: AbortController = new AbortController();\r\n\r\n    private player: DPlayer;\r\n    private display_channel_id: string;\r\n    private on_initial_comments_received: (initial_comments: ICommentData[]) => void;\r\n    private on_comment_received: (comment: ICommentData) => void;\r\n\r\n    constructor(options: {\r\n        player: DPlayer;\r\n        display_channel_id: string;\r\n        on_initial_comments_received: (initial_comments: ICommentData[]) => void;\r\n        on_comment_received: (comment: ICommentData) => void;\r\n    }) {\r\n        this.player = options.player;\r\n        this.display_channel_id = options.display_channel_id;\r\n        this.on_initial_comments_received = options.on_initial_comments_received;\r\n        this.on_comment_received = options.on_comment_received;\r\n    }\r\n\r\n\r\n    /**\r\n     * ニコニコ実況に接続し、セッションを初期化する\r\n     * 初期化に成功した場合は、随時コールバックにニコニコ実況から受信したコメントが渡される\r\n     * @returns セッションの初期化に成功したかどうか\r\n     */\r\n    public async initSession(): Promise<{\r\n        is_success: boolean;\r\n        detail: string;\r\n    }> {\r\n\r\n        // 視聴セッションを初期化\r\n        const watch_session_result = await this.initWatchSession();\r\n        if (watch_session_result.is_success === false) {\r\n            return {\r\n                is_success: false,\r\n                detail: watch_session_result.detail,\r\n            };\r\n        }\r\n\r\n        // 視聴セッションを初期化できた場合のみ、\r\n        // 取得したコメントサーバーへの接続情報を使い、非同期でコメントセッションを初期化\r\n        this.initCommentSession(watch_session_result);\r\n\r\n        return {\r\n            is_success: true,\r\n            detail: '視聴セッションを初期化しました。',\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * 視聴セッションを初期化する\r\n     * @returns コメントサーバーへの接続情報 or エラー情報\r\n     */\r\n    private async initWatchSession(): Promise<IWatchSessionResult> {\r\n\r\n        // サーバーから disconnect メッセージが送られてきた際のフラグ\r\n        let is_disconnect_message_received = false;\r\n\r\n        // セッション情報を取得\r\n        const watch_session_info = await Channels.fetchJikkyoSession(this.display_channel_id);\r\n        if (watch_session_info === null) {\r\n            return {\r\n                is_success: false,\r\n                detail: 'ニコニコ実況のセッション情報を取得できませんでした。',\r\n            };\r\n        }\r\n        if (watch_session_info.is_success === false) {\r\n            console.error(`[LiveCommentManager][WatchSession] Error: ${watch_session_info.detail}`);\r\n            // 通常発生しないエラーメッセージ (サーバーエラーなど) はプレイヤー側にも通知する\r\n            if ((watch_session_info.detail !== 'このチャンネルはニコニコ実況に対応していません。') &&\r\n                (watch_session_info.detail !== '現在放送中のニコニコ実況がありません。')) {\r\n                this.player.notice(watch_session_info.detail, undefined, undefined, '#FF6F6A');\r\n            }\r\n            return {\r\n                is_success: false,\r\n                detail: watch_session_info.detail,\r\n            };\r\n        }\r\n\r\n        // 視聴セッション WebSocket を開く\r\n        this.watch_session = new WebSocket(watch_session_info.audience_token!);\r\n\r\n        // 視聴セッションの接続が開かれたとき\r\n        this.watch_session.addEventListener('open', () => {\r\n\r\n            // 視聴セッションをリクエスト\r\n            // 公式ドキュメントいわく、stream フィールドは Optional らしい\r\n            // サーバー負荷軽減のため、映像が不要な場合は必ず省略してくださいとのこと\r\n            this.watch_session?.send(JSON.stringify({\r\n                type: 'startWatching',\r\n                data: {\r\n                    'reconnect': false,\r\n                },\r\n            }));\r\n\r\n        }, { signal: this.abort_controller.signal });\r\n\r\n        // 視聴セッションの接続が閉じられたとき（ネットワークが切断された場合など）\r\n        this.watch_session.addEventListener('close', async (event) => {\r\n\r\n            // すでに disconnect メッセージが送られてきている場合は何もしない\r\n            if (is_disconnect_message_received === true) {\r\n                return;\r\n            }\r\n\r\n            // 接続切断の理由を表示\r\n            console.error(`[LiveCommentManager][WatchSession] Connection closed. (Code: ${event.code})`);\r\n            this.player.notice(`ニコニコ実況との接続が切断されました。(Code: ${event.code})`, undefined, undefined, '#FF6F6A');\r\n\r\n            // 10 秒ほど待ってから再接続する\r\n            // ニコ生側から切断された場合と異なりネットワークが切断された可能性が高いので、間を多めに取る\r\n            await Utils.sleep(10);\r\n            await this.reconnect();\r\n\r\n        }, { signal: this.abort_controller.signal });\r\n\r\n        // 視聴セッション WebSocket からメッセージを受信したとき\r\n        // 視聴セッションはコメント送信時のために維持し続ける必要がある\r\n        // 以下はいずれも視聴セッションを維持し続けたり、エラーが発生した際に再接続するための処理\r\n        this.watch_session.addEventListener('message', async (event) => {\r\n            if (this.watch_session === null) return;\r\n\r\n            // 各メッセージタイプに対応する処理を実行\r\n            const message = JSON.parse(event.data);\r\n            switch (message.type) {\r\n\r\n                // 座席情報\r\n                case 'seat': {\r\n                    // すでにタイマーが設定されている場合は何もしない\r\n                    if (this.keep_seat_interval_id !== null) {\r\n                        break;\r\n                    }\r\n                    // keepIntervalSec の秒数ごとに keepSeat を送信して座席を維持する\r\n                    this.keep_seat_interval_id = window.setInterval(() => {\r\n                        if (this.watch_session && this.watch_session.readyState === WebSocket.OPEN) {\r\n                            // セッションがまだ開いていれば、座席を維持する\r\n                            this.watch_session.send(JSON.stringify({type: 'keepSeat'}));\r\n                        } else {\r\n                            // セッションが閉じられている場合は、タイマーを停止する\r\n                            window.clearInterval(this.keep_seat_interval_id ?? 0);\r\n                        }\r\n                    }, message.data.keepIntervalSec * 1000);\r\n                    break;\r\n                }\r\n\r\n                // ping-pong\r\n                case 'ping': {\r\n                    // pong を返してセッションを維持する\r\n                    // 送り返さなかった場合、勝手にセッションが閉じられてしまう\r\n                    this.watch_session.send(JSON.stringify({type: 'pong'}));\r\n                    break;\r\n                }\r\n\r\n                // エラー情報\r\n                case 'error': {\r\n                    // COMMENT_POST_NOT_ALLOWED と INVALID_MESSAGE に関しては sendComment() の方で処理するので、ここでは何もしない\r\n                    if (message.data.code === 'COMMENT_POST_NOT_ALLOWED' || message.data.code === 'INVALID_MESSAGE') {\r\n                        break;\r\n                    }\r\n\r\n                    let error = `ニコニコ実況でエラーが発生しています。(Code: ${message.data.code})`;\r\n                    switch (message.data.code) {\r\n                        case 'CONNECT_ERROR':\r\n                            error = 'ニコニコ実況のコメントサーバーに接続できません。';\r\n                            break;\r\n                        case 'CONTENT_NOT_READY':\r\n                            error = 'ニコニコ実況が配信できない状態です。';\r\n                            break;\r\n                        case 'NO_THREAD_AVAILABLE':\r\n                            error = 'ニコニコ実況のコメントスレッドを取得できません。';\r\n                            break;\r\n                        case 'NO_ROOM_AVAILABLE':\r\n                            error = 'ニコニコ実況のコメント部屋を取得できません。';\r\n                            break;\r\n                        case 'NO_PERMISSION':\r\n                            error = 'ニコニコ実況の API にアクセスする権限がありません。';\r\n                            break;\r\n                        case 'NOT_ON_AIR':\r\n                            error = 'ニコニコ実況が放送中ではありません。';\r\n                            break;\r\n                        case 'BROADCAST_NOT_FOUND':\r\n                            error = 'ニコニコ実況の配信情報を取得できません。';\r\n                            break;\r\n                        case 'INTERNAL_SERVERERROR':\r\n                            error = 'ニコニコ実況でサーバーエラーが発生しています。';\r\n                            break;\r\n                    }\r\n\r\n                    // エラー情報を表示\r\n                    console.error(`[LiveCommentManager][WatchSession] Error occurred. (Code: ${message.data.code})`);\r\n                    this.player.notice(error, undefined, undefined, '#FF6F6A');\r\n\r\n                    // 5 秒ほど待ってから再接続する\r\n                    await Utils.sleep(5);\r\n                    await this.reconnect();\r\n                    break;\r\n                }\r\n\r\n                // 再接続を求められた\r\n                case 'reconnect': {\r\n                    // waitTimeSec に記載の秒数だけ待ってから再接続する\r\n                    // 公式ドキュメントには reconnect で送られてくる audienceToken で再接続しろと書いてあるんだけど、\r\n                    // 確実性的な面で実装が面倒なので当面このままにしておく\r\n                    await this.reconnect();\r\n                    break;\r\n                }\r\n\r\n                // 視聴セッションが閉じられた（4時のリセットなど）\r\n                case 'disconnect': {\r\n                    // 実際に接続が閉じられる前に disconnect メッセージが送られてきたので、\r\n                    // WebSocket の close メッセージを実行させないようにする\r\n                    is_disconnect_message_received = true;\r\n\r\n                    // 接続切断の理由\r\n                    let disconnect_reason = `ニコニコ実況との接続が切断されました。(${message.data.reason})`;\r\n                    switch (message.data.reason) {\r\n                        case 'TAKEOVER':\r\n                            disconnect_reason = 'ニコニコ実況の番組から追い出されました。';\r\n                            break;\r\n                        case 'NO_PERMISSION':\r\n                            disconnect_reason = 'ニコニコ実況の番組の座席を取得できませんでした。';\r\n                            break;\r\n                        case 'END_PROGRAM':\r\n                            disconnect_reason = 'ニコニコ実況がリセットされたか、コミュニティの番組が終了しました。';\r\n                            break;\r\n                        case 'PING_TIMEOUT':\r\n                            disconnect_reason = 'コメントサーバーとの接続生存確認に失敗しました。';\r\n                            break;\r\n                        case 'TOO_MANY_CONNECTIONS':\r\n                            disconnect_reason = 'ニコニコ実況の同一ユーザからの接続数上限を越えています。';\r\n                            break;\r\n                        case 'TOO_MANY_WATCHINGS':\r\n                            disconnect_reason = 'ニコニコ実況の同一ユーザからの視聴番組数上限を越えています。';\r\n                            break;\r\n                        case 'CROWDED':\r\n                            disconnect_reason = 'ニコニコ実況の番組が満席です。';\r\n                            break;\r\n                        case 'MAINTENANCE_IN':\r\n                            disconnect_reason = 'ニコニコ実況はメンテナンス中です。';\r\n                            break;\r\n                        case 'SERVICE_TEMPORARILY_UNAVAILABLE':\r\n                            disconnect_reason = 'ニコニコ実況で一時的にサーバーエラーが発生しています。';\r\n                            break;\r\n                    }\r\n\r\n                    // 接続切断の理由を表示\r\n                    console.error(`[LiveCommentManager][WatchSession] Disconnected. (Reason: ${message.data.reason})`);\r\n                    this.player.notice(disconnect_reason);\r\n\r\n                    // 5 秒ほど待ってから再接続する\r\n                    await Utils.sleep(5);\r\n                    await this.reconnect();\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }, { signal: this.abort_controller.signal });\r\n\r\n        // コメントサーバーへの接続情報を返す\r\n        // イベント内で値を返すため、Promise で包む\r\n        return new Promise((resolve) => {\r\n            this.watch_session!.addEventListener('message', async (event) => {\r\n                const message = JSON.parse(event.data);\r\n                if (message.type === 'room') {\r\n\r\n                    // vpos の基準時刻のタイムスタンプを取得 (ミリ秒単位)\r\n                    // vpos は番組開始時間からの累計秒数\r\n                    this.vpos_base_timestamp = dayjs(message.data.vposBaseTime).valueOf();\r\n\r\n                    // コメントサーバーへの接続情報を返す\r\n                    console.log(`[LiveCommentManager][WatchSession] Connected.\\nThread ID: ${message.data.threadId}\\n`);\r\n                    return resolve({\r\n                        is_success: true,\r\n                        detail: '視聴セッションを取得しました。',\r\n                        // コメントサーバーへの接続情報\r\n                        message_server_url: message.data.messageServer.uri,\r\n                        // コメントサーバー上のスレッド ID\r\n                        thread_id: message.data.threadId,\r\n                        // メッセージサーバーから受信するコメント (chat メッセージ) に yourpost フラグを付けるためのキー\r\n                        your_post_key: (message.data.yourPostKey ? message.data.yourPostKey : null),\r\n                    });\r\n                }\r\n            }, { signal: this.abort_controller.signal });\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * コメントセッションを初期化する\r\n     * @param comment_session_info コメントサーバーへの接続情報\r\n     */\r\n    private initCommentSession(comment_session_info: IWatchSessionResult): void {\r\n\r\n        // 初回にドカッと送信されてくる過去コメントを受信し終えるまで格納するバッファ\r\n        const initial_comments_buffer: ICommentData[] = [];\r\n\r\n        // 初回にドカッと送信されてくる過去コメントを受信し終えたかどうかのフラグ\r\n        let initial_comments_received = false;\r\n\r\n        // コメントセッション WebSocket を開く\r\n        this.comment_session = new WebSocket(comment_session_info.message_server_url!);\r\n\r\n        // コメントセッション WebSocket を開いたとき\r\n        this.comment_session.addEventListener('open', () => {\r\n            if (this.comment_session === null) return;\r\n\r\n            // コメント送信をリクエスト\r\n            // このコマンドを送らないとコメントが送信されてこない\r\n            this.comment_session.send(JSON.stringify([\r\n                {ping: {content: 'rs:0'}},\r\n                {ping: {content: 'ps:0'}},\r\n                {\r\n                    thread: {\r\n                        version: '20061206',  // 設定必須\r\n                        thread: comment_session_info.thread_id,  // スレッド ID\r\n                        threadkey: comment_session_info.your_post_key,  // スレッドキー\r\n                        user_id: '',  // ユーザー ID（設定不要らしい）\r\n                        res_from: -50,  // 最初にコメントを 50 個送信する\r\n                    }\r\n                },\r\n                {ping: {content: 'pf:0'}},\r\n                {ping: {content: 'rf:0'}},\r\n            ]));\r\n\r\n        }, { signal: this.abort_controller.signal });\r\n\r\n        // コメントセッション WebSocket からメッセージを受信したとき\r\n        this.comment_session.addEventListener('message', async (event) => {\r\n\r\n            // メッセージを取得\r\n            const message = JSON.parse(event.data);\r\n\r\n            // 接続失敗\r\n            if (message.thread !== undefined) {\r\n                if (message.thread.resultcode !== 0) {\r\n                    console.error(`[LiveCommentManager][CommentSession] Connection failed. (Code: ${message.thread.resultcode})`);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // ping メッセージのみ\r\n            // rf:0 が送られてきたら初回にドカッと送信されてくる過去コメントの受信は完了\r\n            // この時点で初回コメントを一気にコールバックに送る\r\n            if (message.ping !== undefined && message.ping.content === 'rf:0') {\r\n                initial_comments_received = true;\r\n                this.on_initial_comments_received(initial_comments_buffer);\r\n                return;\r\n            }\r\n\r\n            // コメントデータを取得\r\n            const comment = message.chat;\r\n\r\n            // コメントデータが不正な場合 or 自分のコメントの場合は弾く\r\n            if ((comment === undefined || comment.content === undefined || comment.content === '') ||\r\n                (comment.yourpost && comment.yourpost === 1)) {\r\n                return;\r\n            }\r\n\r\n            // コメントコマンドをパース\r\n            const { color, position, size } = CommentUtils.parseCommentCommand(comment.mail);\r\n\r\n            // ミュート対象のコメントかどうかを判定し、もしそうならここで弾く\r\n            if (CommentUtils.isMutedComment(comment.content, comment.user_id, color, position, size)) {\r\n                return;\r\n            }\r\n\r\n            // コメントリストへ追加するオブジェクト\r\n            const comment_data: ICommentData = {\r\n                id: comment.no,\r\n                text: comment.content,\r\n                time: dayjs(comment.date * 1000).format('HH:mm:ss'),\r\n                user_id: comment.user_id,\r\n                my_post: false,\r\n            };\r\n\r\n            // もしまだ初回コメントを受信し終えていないなら、バッファに格納して終了\r\n            // 初回コメントはプレイヤーには描画しないため問題ない\r\n            if (initial_comments_received === false) {\r\n                initial_comments_buffer.push(comment_data);\r\n                return;\r\n            }\r\n\r\n            // 配信で発生する遅延分待ってから\r\n            // おおよその遅延時間は video.buffered.end(0) - video.currentTime で取得できる\r\n            let buffered_end = 0;\r\n            if (this.player.video.buffered.length >= 1) {\r\n                buffered_end = this.player.video.buffered.end(0);\r\n            }\r\n            const comment_delay_time = buffered_end - this.player.video.currentTime;\r\n            // console.log(`[LiveCommentManager][CommentSession] Delay: ${comment_delay_time} sec.`)\r\n            await Utils.sleep(comment_delay_time);\r\n\r\n            // コールバック関数を実行\r\n            this.on_comment_received(comment_data);\r\n\r\n            // プレイヤーにコメントを描画する (映像再生時のみ)\r\n            if (this.player.video.paused === false) {\r\n                this.player.danmaku!.draw({\r\n                    text: comment.content,\r\n                    color: color,\r\n                    type: position,\r\n                    size: size,\r\n                });\r\n            }\r\n\r\n        }, { signal: this.abort_controller.signal });\r\n    }\r\n\r\n\r\n    /**\r\n     * ニコニコ実況にコメントを送信する\r\n     * @param options DPlayer のコメントオプション\r\n     */\r\n    public sendComment(options: DPlayerType.APIBackendSendOptions): void {\r\n\r\n        // DPlayer 上のコメント色（カラーコード）とニコニコの色コマンド定義のマッピング\r\n        const color_table = {\r\n            '#FFEAEA': 'white',\r\n            '#F02840': 'red',\r\n            '#FD7E80': 'pink',\r\n            '#FDA708': 'orange',\r\n            '#FFE133': 'yellow',\r\n            '#64DD17': 'green',\r\n            '#00D4F5': 'cyan',\r\n            '#4763FF': 'blue',\r\n        };\r\n\r\n        // DPlayer 上のコメント位置を表す値とニコニコの位置コマンド定義のマッピング\r\n        const position_table = {\r\n            'top': 'ue',\r\n            'right': 'naka',\r\n            'bottom': 'shita',\r\n        };\r\n\r\n        // vpos を計算 (10ミリ秒単位)\r\n        // 番組開始時間からの累計秒らしいけど、なぜ指定しないといけないのかは不明\r\n        // 小数点以下は丸めないとコメントサーバー側で投稿エラーになる\r\n        const vpos = Math.round((dayjs().valueOf() - this.vpos_base_timestamp) / 10);\r\n\r\n        // 視聴セッションが null か、接続が切れている場合は弾く\r\n        if (this.watch_session === null || this.watch_session.readyState !== WebSocket.OPEN) {\r\n            console.error('[LiveCommentManager][WatchSession] Comment sending failed. (Connection is not established.)');\r\n            options.error('コメントの送信に失敗しました。WebSocket 接続が確立されていません。');\r\n            return;\r\n        }\r\n\r\n        // コメントを送信\r\n        this.watch_session.send(JSON.stringify({\r\n            'type': 'postComment',\r\n            'data': {\r\n                // コメント本文\r\n                'text': options.data.text,\r\n                // コメントの色\r\n                'color': color_table[options.data.color.toUpperCase()],\r\n                // コメント位置\r\n                'position': position_table[options.data.type],\r\n                // コメントサイズ (DPlayer とニコニコで表現が共通なため、変換不要)\r\n                'size': options.data.size,\r\n                // 番組開始時間からの累計秒 (10ミリ秒単位)\r\n                'vpos': vpos,\r\n                // 匿名コメント (184) にするかどうか\r\n                'isAnonymous': true,\r\n            }\r\n        }));\r\n\r\n        // コメント送信のレスポンスを取得\r\n        const abort_controller = new AbortController();\r\n        this.watch_session.addEventListener('message', (event) => {\r\n            const message = JSON.parse(event.data);\r\n            switch (message.type) {\r\n\r\n                // postCommentResult が送られてきた → コメント送信に成功している\r\n                case 'postCommentResult': {\r\n                    // コメント成功を DPlayer にコールバックで通知\r\n                    options.success();\r\n\r\n                    // イベントリスナーを削除\r\n                    abort_controller.abort();\r\n                    break;\r\n                }\r\n\r\n                // コメント送信直後に error が送られてきた → コメント送信に失敗している\r\n                case 'error': {\r\n                    // コメント失敗を DPlayer にコールバックで通知\r\n                    let error = `コメントの送信に失敗しました。(${message.data.code})`;\r\n                    switch (message.data.code) {\r\n                        case 'COMMENT_POST_NOT_ALLOWED':\r\n                            error = 'コメントが許可されていません。';\r\n                            break;\r\n                        case 'INVALID_MESSAGE':\r\n                            error = 'コメント内容が無効です。';\r\n                            break;\r\n                    }\r\n                    console.error(`[LiveCommentManager][WatchSession] Comment sending failed. (Code: ${message.data.code})`);\r\n                    options.error(error);\r\n\r\n                    // イベントリスナーを解除\r\n                    abort_controller.abort();\r\n                    break;\r\n                }\r\n            }\r\n        }, { signal: abort_controller.signal });\r\n    }\r\n\r\n\r\n    /**\r\n     * 同じ設定でニコニコ実況に再接続する\r\n     */\r\n    private async reconnect(): Promise<void> {\r\n        console.warn('[LiveCommentManager][WatchSession] Reconnecting...');\r\n        this.player.notice('ニコニコ実況に再接続しています…');\r\n\r\n        // 前のセッションを破棄\r\n        this.destroy();\r\n\r\n        // セッションを再初期化\r\n        const result = await this.initSession();\r\n        if (result.is_success === false) {\r\n            console.error('[LiveCommentManager][WatchSession] Reconnection failed.');\r\n            this.player.notice(result.detail, undefined, undefined, '#FF6F6A');\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 視聴セッションとコメントセッションをそれぞれ閉じる\r\n     */\r\n    public destroy(): void {\r\n\r\n        // セッションに紐いているすべての EventListener を解除\r\n        // 再接続する場合に備えて AbortController を作り直す\r\n        this.abort_controller.abort();\r\n        this.abort_controller = new AbortController();\r\n\r\n        // 視聴セッションを閉じる\r\n        if (this.watch_session !== null) {\r\n            this.watch_session.close();  // WebSocket を閉じる\r\n            this.watch_session = null;  // null に戻す\r\n        }\r\n\r\n        // コメントセッションを閉じる\r\n        if (this.comment_session !== null) {\r\n            this.comment_session.close();  // WebSocket を閉じる\r\n            this.comment_session = null;  // null に戻す\r\n        }\r\n\r\n        // 座席保持用のタイマーをクリア\r\n        if (this.keep_seat_interval_id !== null) {\r\n            window.clearInterval(this.keep_seat_interval_id);\r\n            this.keep_seat_interval_id = null;\r\n        }\r\n        this.vpos_base_timestamp = 0;\r\n\r\n        console.log('[LiveCommentManager][WatchSession] Destroyed.');\r\n    }\r\n}\r\n\r\nexport default LiveCommentManager;\r\n","<template>\r\n    <div class=\"comment-container\">\r\n        <section class=\"comment-header\">\r\n            <h2 class=\"comment-header__title\">\r\n                <Icon class=\"comment-header__title-icon\" icon=\"bi:chat-left-text-fill\" height=\"18.5px\" />\r\n                <span class=\"comment-header__title-text\">コメント</span>\r\n            </h2>\r\n            <button v-ripple class=\"comment-header__button ml-auto\" @click=\"comment_mute_settings_modal = !comment_mute_settings_modal\">\r\n                <Icon icon=\"heroicons-solid:filter\" height=\"11px\" />\r\n                <span class=\"ml-1\">ミュート設定</span>\r\n            </button>\r\n        </section>\r\n        <section class=\"comment-list-wrapper\" ref=\"comment_list_wrapper\">\r\n            <div class=\"comment-list-dropdown\" :class=\"{'comment-list-dropdown--display': is_comment_list_dropdown_display}\"\r\n                :style=\"{'--comment-list-dropdown-top': `${comment_list_dropdown_top}px`}\">\r\n                <v-list style=\"background: var(--v-background-lighten1)\">\r\n                    <v-list-item dense style=\"min-height: 30px\" @click=\"copyTextToClipboard()\">\r\n                        <v-list-item-title class=\"d-flex align-center\">\r\n                            <Icon icon=\"fluent:clipboard-paste-20-filled\" width=\"20px\" />\r\n                            <span class=\"ml-2\">クリップボードにコピー</span>\r\n                        </v-list-item-title>\r\n                    </v-list-item>\r\n                    <v-list-item dense style=\"min-height: 30px\" @click=\"addMutedKeywords()\">\r\n                        <v-list-item-title class=\"d-flex align-center\">\r\n                            <Icon icon=\"fluent:comment-dismiss-20-filled\" width=\"20px\" />\r\n                            <span class=\"ml-2\">このコメントをミュート</span>\r\n                        </v-list-item-title>\r\n                    </v-list-item>\r\n                    <v-list-item dense style=\"min-height: 30px\" @click=\"addMutedNiconicoUserIds()\">\r\n                        <v-list-item-title class=\"d-flex align-center\" >\r\n                            <Icon icon=\"fluent:person-prohibited-20-filled\" width=\"20px\" />\r\n                            <span class=\"ml-2\">このコメントの投稿者をミュート</span>\r\n                        </v-list-item-title>\r\n                    </v-list-item>\r\n                </v-list>\r\n            </div>\r\n            <div class=\"comment-list-cover\" :class=\"{'comment-list-cover--display': is_comment_list_dropdown_display}\"\r\n                @click=\"hideCommentListDropdown()\"></div>\r\n            <DynamicScroller class=\"comment-list\" :direction=\"'vertical'\" :items=\"comment_list\" :min-item-size=\"34\">\r\n                <template v-slot=\"{item, active}\">\r\n                <DynamicScrollerItem :item=\"item\" :active=\"active\" :size-dependencies=\"[item.text]\">\r\n                    <div class=\"comment\" :class=\"{'comment--my-post': item.my_post}\">\r\n                        <span class=\"comment__text\">{{item.text}}</span>\r\n                        <span class=\"comment__time\">{{item.time}}</span>\r\n                        <!-- なぜか @click だとスマホで発火しないので @touchend にしている -->\r\n                        <div class=\"comment__icon\" v-ripple=\"!Utils.isTouchDevice()\"\r\n                            @mouseup=\"showCommentListDropdown($event, item)\"\r\n                            @touchend=\"showCommentListDropdown($event, item)\">\r\n                            <Icon icon=\"fluent:more-vertical-20-filled\" width=\"20px\" />\r\n                        </div>\r\n                    </div>\r\n                </DynamicScrollerItem>\r\n                </template>\r\n            </DynamicScroller>\r\n            <div class=\"comment-announce\" v-if=\"initialize_failed_message === null && comment_list.length === 0\">\r\n                <div class=\"comment-announce__heading\">まだコメントがありません。</div>\r\n                <div class=\"comment-announce__text\">\r\n                    <p class=\"mt-0 mb-0\">このチャンネルに対応するニコニコ実況のコメントが、リアルタイムで表示されます。</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"comment-announce\" v-if=\"initialize_failed_message !== null && comment_list.length === 0\">\r\n                <div class=\"comment-announce__heading\">コメントがありません。</div>\r\n                <div class=\"comment-announce__text\">\r\n                    <p class=\"mt-0 mb-0\">{{initialize_failed_message}}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        <div v-ripple class=\"comment-scroll-button elevation-5\" @click=\"is_manual_scroll = false; scrollCommentList(true);\"\r\n             :class=\"{'comment-scroll-button--display': is_manual_scroll}\">\r\n            <Icon icon=\"fluent:arrow-down-12-filled\" height=\"29px\" />\r\n        </div>\r\n        <CommentMuteSettings v-model=\"comment_mute_settings_modal\" />\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport DPlayer, { DPlayerType } from 'dplayer';\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport CommentMuteSettings from '@/components/Settings/CommentMuteSettings.vue';\r\nimport LiveCommentManager, { ICommentData } from '@/services/player/managers/LiveCommentManager';\r\nimport useUserStore from '@/stores/UserStore';\r\nimport Utils, { dayjs, CommentUtils } from '@/utils';\r\n\r\nexport default Vue.extend({\r\n    name: 'Panel-CommentTab',\r\n    components: {\r\n        CommentMuteSettings,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // ユーティリティをテンプレートで使えるように\r\n            Utils: Utils,\r\n\r\n            // 手動スクロール状態かどうか\r\n            is_manual_scroll: false,\r\n\r\n            // 自動スクロール中かどうか\r\n            // 自動スクロール中の場合、scroll イベントが発火しても無視する\r\n            is_auto_scrolling: false,\r\n\r\n            // コメントリストの配列\r\n            comment_list: [] as ICommentData[],\r\n\r\n            // コメントリストの要素\r\n            comment_list_element: null as HTMLElement | null,\r\n\r\n            // コメントリストのドロップダウン関連\r\n            is_comment_list_dropdown_display: false as boolean,\r\n            comment_list_dropdown_top: 0 as number,\r\n            comment_list_dropdown_comment: null as ICommentData | null,\r\n\r\n            // LiveCommentManager のインスタンス\r\n            live_comment_manager: null as LiveCommentManager | null,\r\n\r\n            // ニコニコ実況セッションの初期化に失敗した際のエラーメッセージ\r\n            // 視聴中チャンネルのニコニコ実況がないときなどに発生する\r\n            initialize_failed_message: null as string | null,\r\n\r\n            // visibilitychange イベントのリスナー\r\n            visibilitychange_listener: null as (() => void) | null,\r\n\r\n            // ResizeObserver のインスタンス\r\n            resize_observer: null as ResizeObserver | null,\r\n\r\n            // コメントのミュート設定のモーダルを表示するか\r\n            comment_mute_settings_modal: false,\r\n\r\n            player: null as DPlayer | null,\r\n        };\r\n    },\r\n    computed: {\r\n        // UserStore に this.userStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useUserStore),\r\n    },\r\n    created() {\r\n\r\n        // アカウント情報を更新\r\n        this.userStore.fetchUser();\r\n    },\r\n    mounted() {\r\n\r\n        // コメントリストの要素を取得\r\n        if (this.comment_list_element === null) {\r\n            this.comment_list_element = this.$el.querySelector('.comment-list')!;\r\n        }\r\n\r\n        // 現在コメントリストがユーザーイベントでスクロールされているかどうか\r\n        let is_user_scrolling = false;\r\n\r\n        // mousedown → mouseup 中: スクロールバーをマウスでドラッグ\r\n        // 残念ながらスクロールバーのドラッグ中は mousemove のイベントが発火しないため、直接 is_user_scrolling を設定する\r\n        this.comment_list_element.onmousedown = (event: MouseEvent) => {\r\n            // コメントリストの要素の左上を起点としたカーソルのX座標を求める\r\n            if (this.comment_list_element === null) return;\r\n            const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\r\n            // 座標が clientWidth 以上であれば、スクロールバー上で mousedown されたものとする\r\n            if (x > this.comment_list_element.clientWidth) is_user_scrolling = true;\r\n        };\r\n        this.comment_list_element.onmouseup = (event: MouseEvent) => {\r\n            // コメントリストの要素の左上を起点としたカーソルのX座標を求める\r\n            if (this.comment_list_element === null) return;\r\n            const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\r\n            // 座標が clientWidth 以上であれば、スクロールバー上で mouseup されたものとする\r\n            if (x > this.comment_list_element.clientWidth) is_user_scrolling = false;\r\n        };\r\n\r\n        // ユーザーによるスクロールイベントで is_user_scrolling を true にする\r\n        // 0.1 秒後に false にする（継続してイベントが発火すれば再び true になる）\r\n        const on_user_scrolling = () => {\r\n            is_user_scrolling = true;\r\n            window.setTimeout(() => is_user_scrolling = false, 100);\r\n        };\r\n\r\n        // 現在コメントリストがドラッグされているかどうか\r\n        let is_dragging = false;\r\n        // touchstart → touchend 中: スクロールバーをタップでドラッグ\r\n        this.comment_list_element.ontouchstart = () => is_dragging = true;\r\n        this.comment_list_element.ontouchend = () => is_dragging = false;\r\n        // touchmove + is_dragging 中: コメントリストをタップでドラッグしてスクロール\r\n        this.comment_list_element.ontouchmove = () => is_dragging === true ? on_user_scrolling(): '';\r\n\r\n        // wheel 中: マウスホイールの回転\r\n        this.comment_list_element.onwheel = on_user_scrolling;\r\n\r\n        // コメントリストがスクロールされた際、自動スクロール中でない&ユーザーイベントで操作されていれば、手動スクロールモードに設定\r\n        // 手動スクロールモードでは自動スクロールを行わず、ユーザーがコメントリストをスクロールできるようにする\r\n        this.comment_list_element.onscroll = async () => {\r\n            if (this.comment_list_element === null) return;\r\n\r\n            // scroll イベントは自動スクロールでも発火してしまうので、ユーザーイベントによるスクロールかを確認しないといけない\r\n            // 自動スクロール中かどうかは is_auto_scrolling が true のときで判定できるはずだが、\r\n            // コメントが多くなると is_auto_scrolling が false なのに scroll イベントが遅れて発火してしまうことがある\r\n            if (this.is_auto_scrolling === false && is_user_scrolling === true) {\r\n\r\n                // 手動スクロールを有効化\r\n                this.is_manual_scroll = true;\r\n\r\n                // イベント発火時点では scrollTop の値が完全に下にスクロールされていない場合があるため、0.1秒だけ待つ\r\n                await Utils.sleep(0.1);\r\n\r\n                // 一番下までスクロールされていたら自動スクロールに戻す\r\n                if ((this.comment_list_element.scrollTop + this.comment_list_element.offsetHeight) >\r\n                    (this.comment_list_element.scrollHeight - 10)) {  // 一番下から 10px 以内\r\n                    this.is_manual_scroll = false;  // 手動スクロールを無効化\r\n                }\r\n            }\r\n        };\r\n    },\r\n    // 終了前に実行\r\n    beforeDestroy() {\r\n\r\n        // ニコニコ実況セッションを破棄\r\n        this.destroy();\r\n\r\n        // ResizeObserver を終了\r\n        if (this.resize_observer !== null) {\r\n            this.resize_observer.disconnect();\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        // ドロップダウンメニューを表示する\r\n        showCommentListDropdown(event: Event, comment: ICommentData) {\r\n            const comment_list_wrapper_rect = (this.$refs.comment_list_wrapper as HTMLDivElement).getBoundingClientRect();\r\n            const comment_list_dropdown_height = 106;  // 106px はドロップダウンメニューの高さ\r\n            const comment_button_rect = (event.currentTarget as HTMLElement).getBoundingClientRect();\r\n            // メニューの表示位置をクリックされたコメントに合わせる\r\n            this.comment_list_dropdown_top = comment_button_rect.top - comment_list_wrapper_rect.top;\r\n            // メニューがコメントリストからはみ出るときだけ、表示位置を上側に調整\r\n            if ((this.comment_list_dropdown_top + comment_list_dropdown_height) > comment_list_wrapper_rect.height) {\r\n                this.comment_list_dropdown_top = this.comment_list_dropdown_top - comment_list_dropdown_height + comment_button_rect.height;\r\n            }\r\n            // 表示位置を調整できたので、メニューを表示\r\n            this.comment_list_dropdown_comment = comment;\r\n            this.is_comment_list_dropdown_display = true;\r\n        },\r\n\r\n        // ドロップダウンメニューを非表示にする\r\n        hideCommentListDropdown() {\r\n            this.is_comment_list_dropdown_display = false;\r\n            this.comment_list = this.comment_list.filter((comment) => {\r\n                return CommentUtils.isMutedComment(comment.text, comment.user_id) === false;\r\n            });\r\n        },\r\n\r\n        // コメントのテキストをクリップボードにコピーする\r\n        copyTextToClipboard() {\r\n            if (this.comment_list_dropdown_comment === null) return;\r\n            navigator.clipboard.writeText(this.comment_list_dropdown_comment.text);\r\n            this.hideCommentListDropdown();\r\n        },\r\n\r\n        // ミュートするキーワードを追加する\r\n        addMutedKeywords() {\r\n            if (this.comment_list_dropdown_comment === null) return;\r\n            CommentUtils.addMutedKeywords(this.comment_list_dropdown_comment.text);\r\n            this.hideCommentListDropdown();\r\n        },\r\n\r\n        // ミュートするニコニコユーザー ID を追加する\r\n        addMutedNiconicoUserIds() {\r\n            if (this.comment_list_dropdown_comment === null) return;\r\n            CommentUtils.addMutedNiconicoUserIDs(this.comment_list_dropdown_comment.user_id);\r\n            this.hideCommentListDropdown();\r\n        },\r\n\r\n        // コメントリストを一番下までスクロールする\r\n        async scrollCommentList(smooth: boolean = false) {\r\n            if (this.comment_list_element === null) return;\r\n\r\n            // ドロップダウンメニュー表示中なら手動スクロールモードに設定\r\n            if (this.is_comment_list_dropdown_display === true) {\r\n                this.is_manual_scroll = true;\r\n            }\r\n\r\n            // 手動スクロールモードの時は実行しない\r\n            if (this.is_manual_scroll === true) return;\r\n\r\n            // 自動スクロール中のフラグを立てる\r\n            this.is_auto_scrolling = true;\r\n\r\n            // 0.01 秒待って実行し、念押しで2回実行しないと完全に最下部までスクロールされない…（ブラウザの描画バグ？）\r\n            // this.$nextTick() は効かなかった\r\n            for (let index = 0; index < 3; index++) {\r\n                await Utils.sleep(0.01);\r\n                if (smooth === true) {  // スムーズスクロール\r\n                    this.comment_list_element.scrollTo({top: this.comment_list_element.scrollHeight, left: 0, behavior: 'smooth'});\r\n                } else {\r\n                    this.comment_list_element.scrollTo(0, this.comment_list_element.scrollHeight);\r\n                }\r\n            }\r\n\r\n            // 0.1 秒待つ（重要）\r\n            await Utils.sleep(0.1);\r\n\r\n            // 自動スクロール中のフラグを降ろす\r\n            this.is_auto_scrolling = false;\r\n        },\r\n\r\n        // リサイズ時のイベントを初期化\r\n        // プレイヤーが初期化される毎に実行する必要がある\r\n        initReserveObserver() {\r\n\r\n            // 以前に初期化された ResizeObserver を終了\r\n            if (this.resize_observer !== null) {\r\n                this.resize_observer.disconnect();\r\n            }\r\n\r\n            // 監視対象の要素\r\n            const resize_observer_element = document.querySelector('.watch-player')!;\r\n\r\n            // プレイヤーの要素がリサイズされた際に発火するイベント\r\n            const on_resize = () => {\r\n\r\n                // コメント描画領域の要素\r\n                const comment_area_element = this.player?.template.danmaku!;\r\n\r\n                // コメント描画領域の幅から算出した、映像の要素の幅/高さ (px)\r\n                // 実際の映像の要素は BML ブラウザ内に入ることがあり正確な算出ができないため、代わりに使っている\r\n                const video_element_width = comment_area_element.clientWidth;\r\n                const video_element_height = comment_area_element.clientWidth * (9 / 16);\r\n\r\n                // プレイヤー全体と映像の高さの差（レターボックス）から、コメント描画領域の高さを狭める必要があるかを判定する\r\n                // 2で割っているのは単体の差を測るため\r\n                if (resize_observer_element === null || resize_observer_element.clientHeight === null) return;\r\n                const letter_box_height = (resize_observer_element.clientHeight - video_element_height) / 2;\r\n\r\n                // コメント描画領域の高さがしきい値より小さい場合、コメント描画領域のアスペクト比を狭める\r\n                // しきい値はデバイスの画面サイズや向きによって異なる\r\n                // スマホ縦画面ではコメント描画領域を狭める必要がある上部のヘッダーがないため、しきい値を 0 にする\r\n                const threshold = Utils.isSmartphoneVertical() ? 0 : Utils.isSmartphoneHorizontal() ? 50 : 66;\r\n                if (letter_box_height < threshold) {\r\n\r\n                    // コメント描画領域に必要な上下マージン\r\n                    const comment_area_vertical_margin = (threshold - letter_box_height) * 2;\r\n\r\n                    // 狭めるコメント描画領域の幅\r\n                    // 映像の要素の幅をそのまま利用する\r\n                    const comment_area_width = video_element_width;\r\n\r\n                    // 狭めるコメント描画領域の高さ\r\n                    const comment_area_height = video_element_height - comment_area_vertical_margin;\r\n\r\n                    // 狭めるコメント描画領域のアスペクト比を求める\r\n                    // https://tech.arc-one.jp/asepct-ratio/\r\n                    const gcd = (x: number, y: number) => {  // 最大公約数を求める関数\r\n                        if (y === 0) return x;\r\n                        return gcd(y, x % y);\r\n                    };\r\n                    // 幅と高さの最大公約数を求める\r\n                    const gcd_result = gcd(comment_area_width, comment_area_height);\r\n                    // 幅と高さをそれぞれ最大公約数で割ってアスペクト比を算出\r\n                    const comment_area_height_aspect = `${comment_area_width / gcd_result} / ${comment_area_height / gcd_result}`;\r\n\r\n                    // 一時的に transition を無効化する\r\n                    // アスペクト比の設定は連続して行われるが、その際に transition が適用されるとワンテンポ遅れたアニメーションになってしまう\r\n                    comment_area_element.style.transition = 'none';\r\n\r\n                    // コメント描画領域に算出したアスペクト比を設定する\r\n                    comment_area_element.style.setProperty('--comment-area-aspect-ratio', comment_area_height_aspect);\r\n\r\n                    // コメント描画領域に必要な上下マージンを設定する\r\n                    comment_area_element.style.setProperty('--comment-area-vertical-margin', `${comment_area_vertical_margin}px`);\r\n\r\n                    // 0.2秒後に実行する\r\n                    // 0.2秒より前にもう一度リサイズイベントが来た場合はタイマーがクリアされるため実行されない\r\n                    window.setTimeout(() => {\r\n\r\n                        // 再び transition を有効化する\r\n                        comment_area_element.style.transition = '';\r\n\r\n                    }, 0.2 * 1000);\r\n\r\n                } else {\r\n\r\n                    // コメント描画領域に設定したアスペクト比・上下マージンを削除する\r\n                    comment_area_element.style.removeProperty('--comment-area-aspect-ratio');\r\n                    comment_area_element.style.removeProperty('--comment-area-vertical-margin');\r\n                }\r\n            };\r\n\r\n            // 要素の監視を開始\r\n            this.resize_observer = new ResizeObserver(on_resize);\r\n            this.resize_observer.observe(resize_observer_element);\r\n\r\n            // 0.6 秒待ってから初回実行\r\n            // チャンネル切り替え後、再初期化されたプレイヤーに適用するため（早いと再初期化前のプレイヤーに適用されてしまう）\r\n            window.setTimeout(on_resize, 0.6 * 1000);\r\n        },\r\n\r\n        // ニコニコ実況に接続し、セッションを初期化する\r\n        async initSession(player: DPlayer, display_channel_id: string) {\r\n            this.player = player;\r\n\r\n            // リサイズ時のイベントを初期化\r\n            // イベントはプレイヤーの DOM に紐づいているため、プレイヤーが破棄→再初期化される毎に実行する必要がある\r\n            this.initReserveObserver();\r\n\r\n            // タブが非表示状態のときにコメントを格納する配列\r\n            // タブが表示状態になったらコメントリストにのみ表示する（遅れているのでプレイヤーには表示しない）\r\n            const comment_list_buffer: ICommentData[] = [];\r\n\r\n            // コメントの最大保持数\r\n            const max_comment_count = 500;\r\n\r\n            // LiveCommentManager を初期化\r\n            this.live_comment_manager = new LiveCommentManager({\r\n                player: player,\r\n                display_channel_id: display_channel_id,\r\n                // 初回の過去コメント (最大50件) を受信したときのコールバック\r\n                on_initial_comments_received: async (initial_comments) => {\r\n\r\n                    // コメントリストに一括で追加\r\n                    this.comment_list.push(...initial_comments);\r\n\r\n                    // コメントリストを一番下までスクロール\r\n                    this.scrollCommentList();\r\n                },\r\n                // コメントを受信したときのコールバック\r\n                // プレイヤーへの描画は LiveCommentManager が行う\r\n                on_comment_received: async (comment) => {\r\n\r\n                    // タブが非表示状態のときは、バッファにコメントを追加するだけで終了する\r\n                    // ここで追加すると、タブが表示状態になったときに一斉に描画されて大変なことになる\r\n                    if (document.visibilityState === 'hidden') {\r\n                        comment_list_buffer.push(comment);\r\n                        return;\r\n                    }\r\n\r\n                    // コメントリストのコメント数が max_comment_count 件を超えたら、古いものから順に削除する\r\n                    // 仮想スクロールとはいえ、さすがに max_comment_count 件を超えると重くなりそう\r\n                    // 手動スクロール時は実行しない\r\n                    if (this.comment_list.length >= max_comment_count && this.is_manual_scroll === false) {\r\n                        this.comment_list.splice(0, Math.max(0, this.comment_list.length - max_comment_count));\r\n                    }\r\n\r\n                    // コメントリストに追加\r\n                    this.comment_list.push(comment);\r\n\r\n                    // コメントリストを一番下までスクロール\r\n                    this.scrollCommentList();\r\n                }\r\n            });\r\n\r\n            // タブが表示状態になったときのイベント\r\n            this.visibilitychange_listener = () => {\r\n                if (document.visibilityState === 'visible') {\r\n\r\n                    // コメントリスト + バッファの合計コメント数が max_comment_count 件を超えたら、\r\n                    // コメントリスト内のコメントを古いものから順に削除し、max_comment_count 件になるようにする\r\n                    const comment_list_and_buffer_length = this.comment_list.length + comment_list_buffer.length;\r\n                    if (comment_list_and_buffer_length >= max_comment_count && this.is_manual_scroll === false) {\r\n                        this.comment_list.splice(0, Math.max(0, comment_list_and_buffer_length - max_comment_count));\r\n                    }\r\n\r\n                    // バッファ内のコメントをコメントリストに一括で追加する\r\n                    this.comment_list.push(...comment_list_buffer);\r\n                    comment_list_buffer.length = 0;  // バッファを空にする\r\n\r\n                    // コメントリストを一番下までスクロール\r\n                    this.scrollCommentList();\r\n                }\r\n            };\r\n            document.addEventListener('visibilitychange', this.visibilitychange_listener);\r\n\r\n            // ニコニコ実況セッションを初期化する\r\n            const result = await this.live_comment_manager.initSession();\r\n\r\n            // ニコニコ実況セッションの初期化に失敗した\r\n            // 初期化に失敗した際のエラーメッセージを保存しておく (エラー表示などで利用する)\r\n            // プレイヤーへのエラー表示はすでに LiveCommentManager の方で行われているので、ここでは何もしない\r\n            if (result.is_success === false) {\r\n                this.initialize_failed_message = result.detail;\r\n            }\r\n        },\r\n\r\n        // コメントを送信する\r\n        sendComment(options: DPlayerType.APIBackendSendOptions) {\r\n\r\n            // 初期化に失敗しているときは実行せず、保存しておいたエラーメッセージを表示する\r\n            if (this.initialize_failed_message !== null) {\r\n                options.error(this.initialize_failed_message);\r\n                return;\r\n            }\r\n\r\n            // バリデーション\r\n            if (this.userStore.user === null) {\r\n                options.error('コメントするには、KonomiTV アカウントにログインしてください。');\r\n                return;\r\n            }\r\n            if (this.userStore.user.niconico_user_id === null) {\r\n                options.error('コメントするには、ニコニコアカウントと連携してください。');\r\n                return;\r\n            }\r\n            if (this.userStore.user.niconico_user_premium === false && (options.data.type === 'top' || options.data.type === 'bottom')) {\r\n                options.error('コメントを上下に固定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\r\n                return;\r\n            }\r\n            if (this.userStore.user.niconico_user_premium === false && options.data.size === 'big') {\r\n                options.error('コメントサイズを大きめに設定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\r\n                return;\r\n            }\r\n\r\n            // ニコニコ実況のコメントサーバーにコメントを送信\r\n            this.live_comment_manager?.sendComment(options);\r\n\r\n            // 自分のコメントをコメントリストに追加\r\n            this.comment_list.push({\r\n                id: Date.now(),  // ID は取得できないので現在の時間をユニークな ID として利用する\r\n                text: options.data.text,\r\n                time: dayjs().format('HH:mm:ss'),  // 現在時刻\r\n                user_id: this.userStore.user.niconico_user_id.toString(),\r\n                my_post: true,  // 自分のコメントであることを示す\r\n            });\r\n\r\n            // コメントリストを一番下までスクロール\r\n            this.scrollCommentList();\r\n        },\r\n\r\n        // ニコニコ実況セッションを破棄する\r\n        destroy() {\r\n\r\n            // タブの表示/非表示の状態が切り替わったときのイベントを削除\r\n            if (this.visibilitychange_listener !== null) {\r\n                document.removeEventListener('visibilitychange', this.visibilitychange_listener);\r\n                this.visibilitychange_listener = null;\r\n            }\r\n\r\n            // LiveCommentManager を破棄\r\n            if (this.live_comment_manager !== null) {\r\n                this.live_comment_manager.destroy();\r\n                this.live_comment_manager = null;\r\n            }\r\n\r\n            this.initialize_failed_message = null;\r\n            this.comment_list = [];\r\n        }\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.comment-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .comment-header {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-shrink: 0;\r\n        width: 100%;\r\n        height: 26px;\r\n        padding-left: 16px;\r\n        padding-right: 16px;\r\n        @include tablet-vertical {\r\n            margin-top: 20px;\r\n            padding-left: 24px;\r\n            padding-right: 24px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            margin-top: 12px;\r\n        }\r\n        @include smartphone-vertical {\r\n            margin-top: 14px;\r\n        }\r\n\r\n        &__title {\r\n            display: flex;\r\n            align-items: center;\r\n            font-size: 18.5px;\r\n            font-weight: bold;\r\n            line-height: 145%;\r\n            @include tablet-vertical {\r\n                font-size: 19px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                font-size: 16.5px;\r\n            }\r\n            @include smartphone-vertical {\r\n                font-size: 17px;\r\n            }\r\n\r\n            &-icon {\r\n                margin-bottom: -3px;  // 高さ調整\r\n                @include tablet-vertical {\r\n                    width: 24px;\r\n                    height: 24px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    height: 17.5px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    height: 18px;\r\n                }\r\n            }\r\n            &-text {\r\n                margin-left: 12px;\r\n                @include tablet-vertical {\r\n                    margin-left: 16px;\r\n                }\r\n            }\r\n        }\r\n\r\n        &__button {\r\n            display: flex;\r\n            align-items: center;\r\n            height: 26px;\r\n            padding: 0 9px;\r\n            border-radius: 4px;\r\n            background: var(--v-background-lighten3);\r\n            font-size: 11px;\r\n            line-height: 1.8;\r\n            letter-spacing: 0;\r\n        }\r\n    }\r\n\r\n    .comment-list-wrapper {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        min-height: 0;\r\n        margin-top: 16px;\r\n        @include tablet-vertical {\r\n            margin-top: 20px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            margin-top: 12px;\r\n        }\r\n        @include smartphone-vertical {\r\n            margin-top: 14px;\r\n        }\r\n\r\n        .comment-list-dropdown {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: var(--comment-list-dropdown-top, 0px);\r\n            right: 16px;\r\n            border-radius: 4px;\r\n            overflow-x: hidden;\r\n            overflow-y: auto;\r\n            box-shadow: 0px 5px 5px -3px rgb(0 0 0 / 20%),\r\n                        0px 8px 10px 1px rgb(0 0 0 / 14%),\r\n                        0px 3px 14px 2px rgb(0 0 0 / 12%);\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            transition: opacity 0.15s ease, visibility 0.15s ease;\r\n            z-index: 8;\r\n            &--display {\r\n                opacity: 1;\r\n                visibility: visible;\r\n            }\r\n        }\r\n\r\n        .comment-list-cover {\r\n            display: none;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            z-index: 7;\r\n            &--display {\r\n                display: block;\r\n            }\r\n        }\r\n\r\n        .comment-list {\r\n            width: 100%;\r\n            height: 100%;\r\n            padding-left: 16px;\r\n            padding-right: 10px;\r\n            padding-bottom: 12px;\r\n            overflow-y: scroll !important;\r\n            @include tablet-vertical {\r\n                padding-left: 24px;\r\n                padding-right: 18px;\r\n                padding-bottom: 0px;\r\n            }\r\n            @include smartphone-vertical {\r\n                padding-bottom: 0px;\r\n            }\r\n\r\n            .comment {\r\n                display: flex;\r\n                position: relative;\r\n                align-items: center;\r\n                min-height: 28px;\r\n                padding-top: 6px;\r\n                word-break: break-all;\r\n                &--my-post {\r\n                    color: var(--v-secondary-lighten2);\r\n                }\r\n\r\n                &__text {\r\n                    font-size: 13px;\r\n                }\r\n\r\n                &__time {\r\n                    flex-shrink: 0;\r\n                    margin-left: auto;\r\n                    padding-left: 8px;\r\n                    color: var(--v-text-darken1);\r\n                    font-size: 13px;\r\n                }\r\n\r\n                &__icon {\r\n                    width: 20px;\r\n                    height: 20px;\r\n                    margin-left: 8px;\r\n                    border-radius: 5px;\r\n                    color: var(--v-text-base);\r\n                    cursor: pointer;\r\n                }\r\n            }\r\n        }\r\n\r\n        .comment-announce {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            flex-direction: column;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            padding-left: 12px;\r\n            padding-right: 12px;\r\n\r\n            &__heading {\r\n                font-size: 20px;\r\n                font-weight: bold;\r\n                @include smartphone-horizontal {\r\n                    font-size: 16px;\r\n                }\r\n            }\r\n            &__text {\r\n                margin-top: 12px;\r\n                color: var(--v-text-darken1);\r\n                font-size: 13.5px;\r\n                text-align: center;\r\n                @include smartphone-horizontal {\r\n                    font-size: 12px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .comment-scroll-button {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        position: absolute;\r\n        left: 0px;\r\n        right: 0px;\r\n        bottom: 22px;\r\n        width: 42px;\r\n        height: 42px;\r\n        margin: 0 auto;\r\n        border-radius: 50%;\r\n        background: var(--v-primary-base);\r\n        transition: background-color 0.15s, opacity 0.3s, visibility 0.3s;\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        user-select: none;\r\n        cursor: pointer;\r\n\r\n        &--display {\r\n            opacity: 1;\r\n            visibility: visible;\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Comment.vue?vue&type=template&id=1b6729f4&scoped=true\"\nimport script from \"./Comment.vue?vue&type=script&lang=ts\"\nexport * from \"./Comment.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Comment.vue?vue&type=style&index=0&id=1b6729f4&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1b6729f4\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"program-container\"},[_c('section',{staticClass:\"program-broadcaster\"},[_c('img',{staticClass:\"program-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.display_channel_id)}/logo`}}),_c('div',{staticClass:\"program-broadcaster__number\"},[_vm._v(\"Ch: \"+_vm._s(_vm.channelsStore.channel.current.channel_number))]),_c('div',{staticClass:\"program-broadcaster__name\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.name))])]),_c('section',{staticClass:\"program-info\"},[_c('h1',{staticClass:\"program-info__title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_present, 'title'))}}),_c('div',{staticClass:\"program-info__time\"},[_vm._v(\" \"+_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channelsStore.channel.current.program_present))+\" \")]),_c('div',{staticClass:\"program-info__description\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_present, 'description'))}}),_c('div',{staticClass:\"program-info__genre-container\"},_vm._l((_vm.channelsStore.channel.current.program_present?.genres ?? []),function(genre,genre_index){return _c('div',{key:genre_index,staticClass:\"program-info__genre\"},[_vm._v(\" \"+_vm._s(genre.major)+\" / \"+_vm._s(genre.middle)+\" \")])}),0),_c('div',{staticClass:\"program-info__next\"},[_c('span',{staticClass:\"program-info__next-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"program-info__next-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}})],1),_c('span',{staticClass:\"program-info__next-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_following, 'title'))}}),_c('div',{staticClass:\"program-info__next-time\"},[_vm._v(\" \"+_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channelsStore.channel.current.program_following))+\" \")]),_c('div',{staticClass:\"program-info__status\"},[_c('div',{staticClass:\"program-info__status-force\",class:`program-info__status-force--${_vm.ChannelUtils.getChannelForceType(_vm.channelsStore.channel.current.jikkyo_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"勢い:\")]),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.jikkyo_force ?? '--')+\" コメ/分\")])],1),_c('div',{staticClass:\"program-info__status-viewers ml-5\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:eye\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"視聴数:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.viewer_count))])],1)])]),_c('section',{staticClass:\"program-detail-container\"},_vm._l((_vm.channelsStore.channel.current.program_present?.detail ?? {}),function(detail_text,detail_heading){return _c('div',{key:detail_heading,staticClass:\"program-detail\"},[_c('h2',{staticClass:\"program-detail__heading\"},[_vm._v(_vm._s(detail_heading))]),_c('div',{staticClass:\"program-detail__text\",domProps:{\"innerHTML\":_vm._s(_vm.Utils.URLtoLink(detail_text))}})])}),0)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"program-container\">\r\n        <section class=\"program-broadcaster\">\r\n            <img class=\"program-broadcaster__icon\" :src=\"`${Utils.api_base_url}/channels/${(channelsStore.display_channel_id)}/logo`\">\r\n            <div class=\"program-broadcaster__number\">Ch: {{channelsStore.channel.current.channel_number}}</div>\r\n            <div class=\"program-broadcaster__name\">{{channelsStore.channel.current.name}}</div>\r\n        </section>\r\n        <section class=\"program-info\">\r\n            <h1 class=\"program-info__title\"\r\n                v-html=\"ProgramUtils.decorateProgramInfo(channelsStore.channel.current.program_present, 'title')\">\r\n            </h1>\r\n            <div class=\"program-info__time\">\r\n                {{ProgramUtils.getProgramTime(channelsStore.channel.current.program_present)}}\r\n            </div>\r\n            <div class=\"program-info__description\"\r\n                v-html=\"ProgramUtils.decorateProgramInfo(channelsStore.channel.current.program_present, 'description')\">\r\n            </div>\r\n            <div class=\"program-info__genre-container\">\r\n                <div class=\"program-info__genre\" :key=\"genre_index\"\r\n                    v-for=\"(genre, genre_index) in channelsStore.channel.current.program_present?.genres ?? []\">\r\n                    {{genre.major}} / {{genre.middle}}\r\n                </div>\r\n            </div>\r\n            <div class=\"program-info__next\">\r\n                <span class=\"program-info__next-decorate\">NEXT</span>\r\n                <Icon class=\"program-info__next-icon\" icon=\"fluent:fast-forward-20-filled\" width=\"16px\" />\r\n            </div>\r\n            <span class=\"program-info__next-title\"\r\n                v-html=\"ProgramUtils.decorateProgramInfo(channelsStore.channel.current.program_following, 'title')\">\r\n            </span>\r\n            <div class=\"program-info__next-time\">\r\n                {{ProgramUtils.getProgramTime(channelsStore.channel.current.program_following)}}\r\n            </div>\r\n            <div class=\"program-info__status\">\r\n                <div class=\"program-info__status-force\"\r\n                    :class=\"`program-info__status-force--${ChannelUtils.getChannelForceType(channelsStore.channel.current.jikkyo_force)}`\">\r\n                    <Icon icon=\"fa-solid:fire-alt\" height=\"14px\" />\r\n                    <span class=\"ml-2\">勢い:</span>\r\n                    <span class=\"ml-2\">{{channelsStore.channel.current.jikkyo_force ?? '--'}} コメ/分</span>\r\n                </div>\r\n                <div class=\"program-info__status-viewers ml-5\">\r\n                    <Icon icon=\"fa-solid:eye\" height=\"14px\" />\r\n                    <span class=\"ml-2\">視聴数:</span>\r\n                    <span class=\"ml-1\">{{channelsStore.channel.current.viewer_count}}</span>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        <section class=\"program-detail-container\">\r\n            <div class=\"program-detail\" :key=\"detail_heading\"\r\n                v-for=\"(detail_text, detail_heading) in channelsStore.channel.current.program_present?.detail ?? {}\">\r\n                <h2 class=\"program-detail__heading\">{{detail_heading}}</h2>\r\n                <div class=\"program-detail__text\" v-html=\"Utils.URLtoLink(detail_text)\"></div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\r\n\r\nexport default Vue.extend({\r\n    name: 'Panel-ProgramTab',\r\n    data() {\r\n        return {\r\n            // ユーティリティをテンプレートで使えるように\r\n            Utils: Utils,\r\n            ChannelUtils: ChannelUtils,\r\n            ProgramUtils: ProgramUtils,\r\n        };\r\n    },\r\n    computed: {\r\n        // ChannelsStore に this.channelsStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useChannelsStore),\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.program-container {\r\n    padding-left: 16px;\r\n    padding-right: 16px;\r\n    overflow-y: auto;\r\n    @include tablet-vertical {\r\n        padding-left: 24px;\r\n        padding-right: 24px;\r\n    }\r\n\r\n    .program-broadcaster {\r\n        display: none;\r\n        align-items: center;\r\n        min-width: 0;\r\n        @include tablet-vertical {\r\n            display: flex;\r\n            margin-top: 20px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            display: flex;\r\n            margin-top: 16px;\r\n        }\r\n        @include smartphone-vertical {\r\n            display: flex;\r\n            margin-top: 16px;\r\n        }\r\n\r\n        &__icon {\r\n            display: inline-block;\r\n            flex-shrink: 0;\r\n            width: 43px;\r\n            height: 24px;\r\n            border-radius: 3px;\r\n            background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n            object-fit: cover;\r\n            user-select: none;\r\n            @include tablet-vertical {\r\n                width: 58px;\r\n                height: 32px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                width: 42px;\r\n                height: 23.5px;\r\n            }\r\n            @include smartphone-vertical {\r\n                width: 58px;\r\n                height: 32px;\r\n            }\r\n        }\r\n\r\n        &__number {\r\n            flex-shrink: 0;\r\n            margin-left: 12px;\r\n            font-size: 16.5px;\r\n            @include tablet-vertical {\r\n                margin-left: 16px;\r\n                font-size: 19px;\r\n            }\r\n        }\r\n\r\n        &__name {\r\n            margin-left: 5px;\r\n            font-size: 16.5px;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            text-overflow: ellipsis;\r\n            @include tablet-vertical {\r\n                margin-left: 8px;\r\n                font-size: 19px;\r\n            }\r\n            @include smartphone-vertical {\r\n                font-size: 18px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .program-info {\r\n        .program-info__title {\r\n            font-size: 22px;\r\n            font-weight: bold;\r\n            line-height: 145%;\r\n            font-feature-settings: \"palt\" 1;  // 文字詰め\r\n            letter-spacing: 0.05em;  // 字間を少し空ける\r\n            @include tablet-vertical {\r\n                margin-top: 16px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                margin-top: 10px;\r\n                font-size: 18px;\r\n            }\r\n            @include smartphone-vertical {\r\n                margin-top: 16px;\r\n                font-size: 19px;\r\n            }\r\n        }\r\n        .program-info__time {\r\n            margin-top: 8px;\r\n            color: var(--v-text-darken1);\r\n            font-size: 14px;\r\n            @include smartphone-horizontal {\r\n                font-size: 13px;\r\n            }\r\n        }\r\n        .program-info__description {\r\n            margin-top: 12px;\r\n            color: var(--v-text-darken1);\r\n            font-size: 12px;\r\n            line-height: 168%;\r\n            overflow-wrap: break-word;\r\n            font-feature-settings: \"palt\" 1;  // 文字詰め\r\n            letter-spacing: 0.08em;  // 字間を少し空ける\r\n            @include smartphone-horizontal {\r\n                margin-top: 8px;\r\n                font-size: 11px;\r\n            }\r\n        }\r\n        .program-info__genre-container {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            margin-top: 10px;\r\n\r\n            .program-info__genre {\r\n                display: inline-block;\r\n                font-size: 10.5px;\r\n                padding: 3px;\r\n                margin-top: 4px;\r\n                margin-right: 4px;\r\n                border-radius: 4px;\r\n                background: var(--v-background-lighten2);\r\n                @include smartphone-horizontal {\r\n                    font-size: 9px;\r\n                }\r\n            }\r\n        }\r\n        .program-info__next {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-top: 18px;\r\n            color: var(--v-text-base);\r\n            font-size: 14px;\r\n            font-weight: bold;\r\n            user-select: none;\r\n            @include smartphone-horizontal {\r\n                margin-top: 14px;\r\n                font-size: 13px;\r\n            }\r\n            &-decorate {\r\n                flex-shrink: 0;\r\n            }\r\n            &-icon {\r\n                flex-shrink: 0;\r\n                margin-left: 3px;\r\n                font-size: 15px;\r\n            }\r\n        }\r\n        .program-info__next-title {\r\n            display: -webkit-box;\r\n            margin-top: 2px;\r\n            color: var(--v-text-base);\r\n            font-size: 14px;\r\n            font-weight: bold;\r\n            overflow: hidden;\r\n            -webkit-line-clamp: 2;  // 2行までに制限\r\n            -webkit-box-orient: vertical;\r\n            @include smartphone-horizontal {\r\n                font-size: 13px;\r\n            }\r\n        }\r\n        .program-info__next-time {\r\n            margin-top: 3px;\r\n            color: var(--v-text-darken1);\r\n            font-size: 13.5px;\r\n        }\r\n\r\n        .program-info__status {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-top: 16px;\r\n            font-size: 14px;\r\n            color: var(--v-text-darken1);\r\n            @include smartphone-horizontal {\r\n                margin-top: 10px;\r\n                font-size: 12px;\r\n            }\r\n\r\n            &-force, &-viewers {\r\n                display: flex;\r\n                align-items: center;\r\n            }\r\n\r\n            &-force--festival {\r\n                color: #E7556E;\r\n            }\r\n            &-force--so-many {\r\n                color: #E76B55;\r\n            }\r\n            &-force--many {\r\n                color: #E7A355;\r\n            }\r\n        }\r\n    }\r\n\r\n    .program-detail-container {\r\n        margin-top: 24px;\r\n        margin-bottom: 24px;\r\n        @include tablet-vertical {\r\n            margin-top: 20px;\r\n            margin-bottom: 20px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            margin-top: 20px;\r\n            margin-bottom: 16px;\r\n        }\r\n\r\n        .program-detail {\r\n            margin-top: 16px;\r\n\r\n            .program-detail__heading {\r\n                font-size: 18px;\r\n                @include smartphone-horizontal {\r\n                    font-size: 16px;\r\n                }\r\n            }\r\n            .program-detail__text {\r\n                margin-top: 8px;\r\n                color: var(--v-text-darken1);\r\n                font-size: 12px;\r\n                line-height: 168%;\r\n                overflow-wrap: break-word;\r\n                white-space: pre-wrap;  // \\n で改行する\r\n                font-feature-settings: \"palt\" 1;  // 文字詰め\r\n                letter-spacing: 0.08em;  // 字間を少し空ける\r\n                @include smartphone-horizontal {\r\n                    font-size: 11px;\r\n                }\r\n\r\n                // リンクの色\r\n                :deep(a:link), :deep(a:visited) {\r\n                    color: var(--v-primary-lighten1);\r\n                    text-underline-offset: 3px;  // 下線と字の間隔を空ける\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Program.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Program.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Program.vue?vue&type=template&id=6b2bec40&scoped=true\"\nimport script from \"./Program.vue?vue&type=script&lang=ts\"\nexport * from \"./Program.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Program.vue?vue&type=style&index=0&id=6b2bec40&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b2bec40\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"remote-control-container\",class:{'remote-control-container--showing': _vm.showing},on:{\"click\":function($event){return _vm.$emit('close')}}},[_c('div',{staticClass:\"remote-control elevation-6\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control__close d-flex align-center rounded-circle cursor-pointer px-2 py-2\",on:{\"click\":function($event){return _vm.$emit('close')}}},[_c('Icon',{attrs:{\"icon\":\"fluent:dismiss-12-filled\",\"width\":\"23px\",\"height\":\"23px\"}})],1),_c('div',{staticClass:\"remote-control-data-broadcasting remote-control-data-broadcasting--disabled\"},[_c('v-progress-circular',{staticClass:\"remote-control__loading\",attrs:{\"indeterminate\":\"\",\"size\":\"60\",\"width\":\"6\"}}),_c('div',{staticClass:\"remote-control__directional-key\"},[_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-up\",attrs:{\"data-arib-key-code\":\"1\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:chevron-up-12-filled\",\"width\":\"26px\",\"height\":\"26px\"}})],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-left\",attrs:{\"data-arib-key-code\":\"3\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:chevron-left-12-filled\",\"width\":\"26px\",\"height\":\"26px\"}})],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-select\",attrs:{\"data-arib-key-code\":\"18\"}},[_vm._v(\" 決定 \")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-right\",attrs:{\"data-arib-key-code\":\"4\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:chevron-right-12-filled\",\"width\":\"26px\",\"height\":\"26px\"}})],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-down\",attrs:{\"data-arib-key-code\":\"2\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:chevron-down-12-filled\",\"width\":\"26px\",\"height\":\"26px\"}})],1)]),_c('div',{staticClass:\"remote-control__control-key\"},[_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-data\",attrs:{\"data-arib-key-code\":\"20\"}},[_c('svg',{attrs:{\"width\":\"20px\",\"height\":\"20px\",\"viewBox\":\"0 0 512 512\"}},[_c('path',{attrs:{\"fill\":\"currentColor\",\"d\":\"M248.039 381.326L355.039 67.8258C367.539 28.3257 395.039 34.3258 406.539 34.3258C431.039 34.3258 453.376 61.3258 441.039 96.8258C362.639 322.426 343.539 375.326 340.539 384.826C338.486 391.326 342.039 391.326 345.539 391.326C377.039 391.326 386.539 418.326 386.539 435.326C386.539 458.826 371.539 477.326 350.039 477.326H214.539C179.039 477.326 85.8269 431.3 88.0387 335.826C91.0387 206.326 192.039 183.326 243.539 183.326H296.539L265.539 272.326H243.539C185.539 272.326 174.113 314.826 176.039 334.326C180.039 374.826 215.039 389.814 237.039 390.326C244.539 390.5 246.039 386.826 248.039 381.326Z\"}})]),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"データ\")])]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-back\",attrs:{\"data-arib-key-code\":\"19\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"戻る\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-blue blue darken-3\",attrs:{\"data-arib-key-code\":\"21\"}},[_vm._v(\"青\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-red red darken-3\",attrs:{\"data-arib-key-code\":\"22\"}},[_vm._v(\"赤\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-green green darken-3\",attrs:{\"data-arib-key-code\":\"23\"}},[_vm._v(\"緑\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"remote-control-button-yellow yellow darken-3\",attrs:{\"data-arib-key-code\":\"24\"}},[_vm._v(\"黄\")])])],1),_c('div',{staticClass:\"remote-control__number-key\"},[_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"1\",\"data-arib-key-code\":\"6\"}},[_vm._v(\"1\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"2\",\"data-arib-key-code\":\"7\"}},[_vm._v(\"2\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"3\",\"data-arib-key-code\":\"8\"}},[_vm._v(\"3\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"4\",\"data-arib-key-code\":\"9\"}},[_vm._v(\"4\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"5\",\"data-arib-key-code\":\"10\"}},[_vm._v(\"5\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"6\",\"data-arib-key-code\":\"11\"}},[_vm._v(\"6\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"7\",\"data-arib-key-code\":\"12\"}},[_vm._v(\"7\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"8\",\"data-arib-key-code\":\"13\"}},[_vm._v(\"8\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"9\",\"data-arib-key-code\":\"14\"}},[_vm._v(\"9\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"10\",\"data-arib-key-code\":\"15\"}},[_vm._v(\"10\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"11\",\"data-arib-key-code\":\"16\"}},[_vm._v(\"11\")]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"data-remocon-id\":\"12\",\"data-arib-key-code\":\"17\"}},[_vm._v(\"12\")])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"remote-control-container\" :class=\"{'remote-control-container--showing': showing}\"\r\n        @click=\"$emit('close')\">\r\n        <div class=\"remote-control elevation-6\" @click.stop>\r\n            <div v-ripple class=\"remote-control__close d-flex align-center rounded-circle cursor-pointer px-2 py-2\"\r\n                @click=\"$emit('close')\">\r\n                <Icon icon=\"fluent:dismiss-12-filled\" width=\"23px\" height=\"23px\" />\r\n            </div>\r\n            <div class=\"remote-control-data-broadcasting remote-control-data-broadcasting--disabled\">\r\n                <v-progress-circular indeterminate size=\"60\" width=\"6\" class=\"remote-control__loading\"></v-progress-circular>\r\n                <div class=\"remote-control__directional-key\">\r\n                    <button v-ripple class=\"remote-control-button-up\" data-arib-key-code=\"1\">\r\n                        <Icon icon=\"fluent:chevron-up-12-filled\" width=\"26px\" height=\"26px\"></Icon>\r\n                    </button>\r\n                    <button v-ripple class=\"remote-control-button-left\" data-arib-key-code=\"3\">\r\n                        <Icon icon=\"fluent:chevron-left-12-filled\" width=\"26px\" height=\"26px\"></Icon>\r\n                    </button>\r\n                    <button v-ripple class=\"remote-control-button-select\" data-arib-key-code=\"18\">\r\n                        決定\r\n                    </button>\r\n                    <button v-ripple class=\"remote-control-button-right\" data-arib-key-code=\"4\">\r\n                        <Icon icon=\"fluent:chevron-right-12-filled\" width=\"26px\" height=\"26px\"></Icon>\r\n                    </button>\r\n                    <button v-ripple class=\"remote-control-button-down\" data-arib-key-code=\"2\">\r\n                        <Icon icon=\"fluent:chevron-down-12-filled\" width=\"26px\" height=\"26px\"></Icon>\r\n                    </button>\r\n                </div>\r\n                <div class=\"remote-control__control-key\">\r\n                    <button v-ripple class=\"remote-control-button-data\" data-arib-key-code=\"20\">\r\n                        <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 512 512\">\r\n                            <path fill=\"currentColor\" d=\"M248.039 381.326L355.039 67.8258C367.539 28.3257 395.039 34.3258 406.539 34.3258C431.039 34.3258 453.376 61.3258 441.039 96.8258C362.639 322.426 343.539 375.326 340.539 384.826C338.486 391.326 342.039 391.326 345.539 391.326C377.039 391.326 386.539 418.326 386.539 435.326C386.539 458.826 371.539 477.326 350.039 477.326H214.539C179.039 477.326 85.8269 431.3 88.0387 335.826C91.0387 206.326 192.039 183.326 243.539 183.326H296.539L265.539 272.326H243.539C185.539 272.326 174.113 314.826 176.039 334.326C180.039 374.826 215.039 389.814 237.039 390.326C244.539 390.5 246.039 386.826 248.039 381.326Z\" />\r\n                        </svg>\r\n                        <span class=\"ml-1\">データ</span>\r\n                    </button>\r\n                    <button v-ripple class=\"remote-control-button-back\" data-arib-key-code=\"19\">\r\n                        <Icon icon=\"fluent:arrow-left-12-filled\" width=\"20px\" />\r\n                        <span class=\"ml-1\">戻る</span>\r\n                    </button>\r\n                    <button v-ripple class=\"remote-control-button-blue blue darken-3\" data-arib-key-code=\"21\">青</button>\r\n                    <button v-ripple class=\"remote-control-button-red red darken-3\" data-arib-key-code=\"22\">赤</button>\r\n                    <button v-ripple class=\"remote-control-button-green green darken-3\" data-arib-key-code=\"23\">緑</button>\r\n                    <button v-ripple class=\"remote-control-button-yellow yellow darken-3\" data-arib-key-code=\"24\">黄</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"remote-control__number-key\">\r\n                <button v-ripple data-remocon-id=\"1\" data-arib-key-code=\"6\">1</button>\r\n                <button v-ripple data-remocon-id=\"2\" data-arib-key-code=\"7\">2</button>\r\n                <button v-ripple data-remocon-id=\"3\" data-arib-key-code=\"8\">3</button>\r\n                <button v-ripple data-remocon-id=\"4\" data-arib-key-code=\"9\">4</button>\r\n                <button v-ripple data-remocon-id=\"5\" data-arib-key-code=\"10\">5</button>\r\n                <button v-ripple data-remocon-id=\"6\" data-arib-key-code=\"11\">6</button>\r\n                <button v-ripple data-remocon-id=\"7\" data-arib-key-code=\"12\">7</button>\r\n                <button v-ripple data-remocon-id=\"8\" data-arib-key-code=\"13\">8</button>\r\n                <button v-ripple data-remocon-id=\"9\" data-arib-key-code=\"14\">9</button>\r\n                <button v-ripple data-remocon-id=\"10\" data-arib-key-code=\"15\">10</button>\r\n                <button v-ripple data-remocon-id=\"11\" data-arib-key-code=\"16\">11</button>\r\n                <button v-ripple data-remocon-id=\"12\" data-arib-key-code=\"17\">12</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport Vue, { PropType } from 'vue';\r\n\r\nexport default Vue.extend({\r\n    name: 'Panel-Remocon',\r\n    props: {\r\n        // リモコンのモーダルを表示するか\r\n        showing: {\r\n            type: Boolean as PropType<Boolean>,\r\n            required: true,\r\n        }\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.remote-control-container {\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(30, 19, 16, 50%);\r\n    transition: opacity 0.2s, visibility 0.2s;\r\n    overflow-y: scroll;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    z-index: 5;\r\n    &--showing {\r\n        opacity: 1;\r\n        visibility: visible;\r\n    }\r\n\r\n    .remote-control {\r\n        position: relative;\r\n        width: 234px;\r\n        height: 514px;\r\n        padding: 24px 16px;\r\n        margin: 0 auto;\r\n        border-radius: 8px;\r\n        background: var(--v-background-base);\r\n        user-select: none;\r\n\r\n        .remote-control__close {\r\n            position: absolute !important;\r\n            top: 10px;\r\n            right: 10px;\r\n            width: 36px;\r\n            height: 36px;\r\n            z-index: 2;\r\n        }\r\n\r\n        .remote-control-data-broadcasting {\r\n            position: relative;\r\n            opacity: 1;\r\n            transition: opacity 0.2s ease;\r\n\r\n            &--disabled {\r\n                opacity: 0.4;\r\n                pointer-events: none;\r\n            }\r\n            &--loading {\r\n                opacity: 0.4;\r\n                pointer-events: none;\r\n                .remote-control__loading {\r\n                    opacity: 1 !important;\r\n                    visibility: visible !important;\r\n                }\r\n            }\r\n\r\n            .remote-control__loading {\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n                color: var(--v-gray-base);\r\n                filter: drop-shadow(0px 0px 3px rgba(0, 0, 0, 0.3));\r\n                opacity: 0;\r\n                visibility: hidden;\r\n                transition: opacity 0.2s cubic-bezier(0.4, 0.38, 0.49, 0.94), visibility 0.2s cubic-bezier(0.4, 0.38, 0.49, 0.94);\r\n                will-change: opacity;\r\n                z-index: 3;\r\n            }\r\n\r\n            .remote-control__directional-key {\r\n                display: grid;\r\n                grid-template-columns: 1fr 90px 1fr;\r\n                grid-template-rows: 1fr 90px 1fr;\r\n                width: 160px;\r\n                height: 160px;\r\n                margin-left: auto;\r\n                margin-right: auto;\r\n                border-radius: 50%;\r\n                background: var(--v-background-lighten1);\r\n                overflow: hidden;\r\n\r\n                button {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    border-radius: 8px;\r\n                    background: var(--v-background-lighten1);\r\n                    color: var(--v-text-base);\r\n                    font-size: 14px;\r\n                    font-weight: bold;\r\n                    outline: none;\r\n                    &.remote-control-button-up {\r\n                        grid-column: 2;\r\n                        grid-row: 1;\r\n                        padding-top: 4px;\r\n                    }\r\n                    &.remote-control-button-left {\r\n                        grid-column: 1;\r\n                        grid-row: 2;\r\n                        padding-left: 4px;\r\n                    }\r\n                    &.remote-control-button-select {\r\n                        grid-column: 2;\r\n                        grid-row: 2;\r\n                        border-radius: 50%;\r\n                        background: var(--v-background-base);\r\n                    }\r\n                    &.remote-control-button-right {\r\n                        grid-column: 3;\r\n                        grid-row: 2;\r\n                        padding-right: 4px;\r\n                    }\r\n                    &.remote-control-button-down {\r\n                        grid-column: 2;\r\n                        grid-row: 3;\r\n                        padding-bottom: 4px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .remote-control__control-key {\r\n                display: grid;\r\n                grid-template-columns: 1fr 1fr 1fr 1fr;\r\n                grid-template-rows: 35px 35px;\r\n                gap: 8px;\r\n                width: 200px;\r\n                margin-top: 12px;\r\n                margin-left: auto;\r\n                margin-right: auto;\r\n                button {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    border-radius: 5px;\r\n                    background: var(--v-background-lighten1);\r\n                    color: var(--v-text-base);\r\n                    font-size: 15px;\r\n                    font-weight: bold;\r\n                    outline: none;\r\n                    &.remote-control-button-data {\r\n                        grid-column: 1 / 3;\r\n                        grid-row: 1;\r\n                    }\r\n                    &.remote-control-button-back {\r\n                        grid-column: 3 / 5;\r\n                        grid-row: 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .remote-control__number-key {\r\n            display: grid;\r\n            grid-template-columns: 1fr 1fr 1fr;\r\n            grid-template-rows: 44px 44px 44px 44px;\r\n            gap: 8px;\r\n            width: 200px;\r\n            margin-top: 16px;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n            button {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                border-radius: 5px;\r\n                background: var(--v-background-lighten1);\r\n                color: var(--v-text-base);\r\n                font-size: 26px;\r\n                font-weight: bold;\r\n                outline: none;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Remocon.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Remocon.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Remocon.vue?vue&type=template&id=b659b524&scoped=true\"\nimport script from \"./Remocon.vue?vue&type=script&lang=ts\"\nexport * from \"./Remocon.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Remocon.vue?vue&type=style&index=0&id=b659b524&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b659b524\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"twitter-container\"},[_c('v-dialog',{attrs:{\"content-class\":\"zoom-capture-modal-container\",\"max-width\":\"980\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.zoom_capture_modal),callback:function ($$v) {_vm.zoom_capture_modal=$$v},expression:\"zoom_capture_modal\"}},[_c('div',{staticClass:\"zoom-capture-modal\"},[_c('img',{staticClass:\"zoom-capture-modal__image\",attrs:{\"src\":_vm.zoom_capture ? _vm.zoom_capture.image_url: ''}}),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"zoom-capture-modal__download\",attrs:{\"href\":_vm.zoom_capture ? _vm.zoom_capture.image_url : '',\"download\":_vm.zoom_capture ? _vm.zoom_capture.filename : ''}},[_c('Icon',{attrs:{\"icon\":\"fa6-solid:download\",\"width\":\"45px\"}})],1)])]),_c('div',{staticClass:\"tab-container\"},[_c('div',{staticClass:\"tab-content tab-content--search\",class:{'tab-content--active': _vm.twitter_active_tab === 'Search'}},[_c('div',{staticClass:\"search px-4\"},[_vm._v(\" リアルタイム検索機能は鋭意開発中です。 \")])]),_c('div',{staticClass:\"tab-content tab-content--timeline\",class:{'tab-content--active': _vm.twitter_active_tab === 'Timeline'}},[_c('div',{staticClass:\"search px-4\"},[_vm._v(\" タイムライン機能は鋭意開発中です。 \")])]),_c('div',{staticClass:\"tab-content tab-content--capture\",class:{'tab-content--active': _vm.twitter_active_tab === 'Capture'}},[_c('div',{staticClass:\"captures\"},_vm._l((_vm.captures),function(capture){return _c('div',{key:capture.image_url,staticClass:\"capture\",class:{\n                        'capture--selected': capture.selected,\n                        'capture--focused': capture.focused,\n                        'capture--disabled': !capture.selected && _vm.tweet_captures.length >= 4,\n                    },on:{\"click\":function($event){return _vm.clickCapture(capture)}}},[_c('img',{staticClass:\"capture__image\",attrs:{\"src\":capture.image_url}}),_c('div',{staticClass:\"capture__disabled-cover\"}),_c('div',{staticClass:\"capture__selected-number\"},[_vm._v(_vm._s(_vm.tweet_captures.findIndex(blob => blob === capture.blob) + 1))]),_c('Icon',{staticClass:\"capture__selected-checkmark\",attrs:{\"icon\":\"fluent:checkmark-circle-16-filled\"}}),_c('div',{staticClass:\"capture__selected-border\"}),_c('div',{staticClass:\"capture__focused-border\"}),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"capture__zoom\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.zoom_capture_modal = true; _vm.zoom_capture = capture},\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();/* 親要素の波紋が広がらないように */}}},[_c('Icon',{attrs:{\"icon\":\"fluent:zoom-in-16-regular\",\"width\":\"32px\"}})],1)],1)}),0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.captures.length === 0),expression:\"captures.length === 0\"}],staticClass:\"capture-announce\"},[_c('div',{staticClass:\"capture-announce__heading\"},[_vm._v(\"まだキャプチャがありません。\")]),_vm._m(0)])])]),_c('div',{staticClass:\"tab-button-container\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Search'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Search'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:search-16-filled\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"ツイート検索\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Timeline'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Timeline'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:home-16-regular\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"タイムライン\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Capture'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Capture'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:image-copy-20-regular\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"キャプチャ\")])],1)]),_c('div',{staticClass:\"tweet-form\",class:{\n        'tweet-form--focused': _vm.is_tweet_hashtag_form_focused || _vm.is_tweet_text_form_focused,\n        'tweet-form--virtual-keyboard-display': _vm.playerStore.is_virtual_keyboard_display &&\n            (_vm.Utils.hasActiveElementClass('tweet-form__hashtag-form') || _vm.Utils.hasActiveElementClass('tweet-form__textarea')) &&\n            (() => {_vm.is_hashtag_list_display = false; return true;})(),\n    }},[_c('div',{staticClass:\"tweet-form__hashtag\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tweet_hashtag),expression:\"tweet_hashtag\"}],staticClass:\"tweet-form__hashtag-form\",attrs:{\"type\":\"search\",\"placeholder\":\"#ハッシュタグ\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.tweet_hashtag)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.tweet_hashtag=$event.target.value},function($event){return _vm.updateTweetLetterCount()}],\"focus\":function($event){_vm.is_tweet_hashtag_form_focused = true},\"blur\":function($event){_vm.is_tweet_hashtag_form_focused = false},\"change\":function($event){_vm.tweet_hashtag = _vm.formatHashtag(_vm.tweet_hashtag); _vm.updateTweetLetterCount()}}}),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tweet-form__hashtag-list-button\",on:{\"click\":function($event){return _vm.clickHashtagListButton()}}},[_c('Icon',{attrs:{\"icon\":\"fluent:clipboard-text-ltr-32-regular\",\"height\":\"22px\"}})],1)]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tweet_text),expression:\"tweet_text\"}],ref:\"tweet_text\",staticClass:\"tweet-form__textarea\",attrs:{\"placeholder\":\"ツイート\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.tweet_text)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.tweet_text=$event.target.value},function($event){return _vm.updateTweetLetterCount()}],\"paste\":function($event){return _vm.pasteClipboardData($event)},\"focus\":function($event){_vm.is_tweet_text_form_focused = true},\"blur\":function($event){_vm.is_tweet_text_form_focused = false}}}),_c('div',{staticClass:\"tweet-form__control\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"account-button\",class:{'account-button--no-login': !_vm.is_logged_in_twitter},on:{\"click\":function($event){return _vm.clickAccountButton()}}},[_c('img',{staticClass:\"account-button__icon\",attrs:{\"src\":_vm.is_logged_in_twitter ? _vm.selected_twitter_account?.icon_url : '/assets/images/account-icon-default.png'}}),_c('span',{staticClass:\"account-button__screen-name\"},[_vm._v(\" \"+_vm._s(_vm.is_logged_in_twitter ? `@${_vm.selected_twitter_account?.screen_name}` : '連携されていません')+\" \")]),_c('Icon',{staticClass:\"account-button__menu\",attrs:{\"icon\":\"fluent:more-circle-20-regular\",\"width\":\"22px\"}})],1),_c('div',{staticClass:\"limit-meter\"},[_c('div',{staticClass:\"limit-meter__content\",class:{\n                    'limit-meter__content--yellow': _vm.tweet_letter_count <= 20,\n                    'limit-meter__content--red': _vm.tweet_letter_count <= 0,\n                }},[_c('Icon',{staticStyle:{\"margin-right\":\"-2px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"12px\"}}),_c('span',[_vm._v(_vm._s(_vm.tweet_letter_count))])],1),_c('div',{staticClass:\"limit-meter__content\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-16-filled\",\"width\":\"14px\"}}),_c('span',[_vm._v(_vm._s(_vm.tweet_captures.length)+\"/4\")])],1)]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tweet-button\",attrs:{\"disabled\":!_vm.is_logged_in_twitter || _vm.tweet_letter_count < 0 ||\n                    (_vm.tweet_letter_count === 140 && _vm.tweet_captures.length === 0)},on:{\"click\":function($event){return _vm.sendTweet()},\"touchstart\":function($event){return _vm.sendTweet()}}},[_c('Icon',{attrs:{\"icon\":\"fa-brands:twitter\",\"height\":\"16px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ツイート\")])],1)])]),_c('div',{staticClass:\"hashtag-list\",class:{\n        'hashtag-list--display': _vm.is_hashtag_list_display,\n        'hashtag-list--virtual-keyboard-display': _vm.playerStore.is_virtual_keyboard_display && _vm.Utils.hasActiveElementClass('hashtag__input'),\n    }},[_c('div',{staticClass:\"hashtag-heading\"},[_c('div',{staticClass:\"hashtag-heading__text\"},[_c('Icon',{attrs:{\"icon\":\"charm:hash\",\"width\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ハッシュタグリスト\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag-heading__add-button\",on:{\"click\":function($event){_vm.saved_twitter_hashtags.push({id: _vm.Utils.time(), text: '#ここにハッシュタグを入力', editing: false})}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"width\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)]),_c('draggable',{staticClass:\"hashtag-container\",attrs:{\"handle\":\".hashtag__sort-handle\"},model:{value:(_vm.saved_twitter_hashtags),callback:function ($$v) {_vm.saved_twitter_hashtags=$$v},expression:\"saved_twitter_hashtags\"}},_vm._l((_vm.saved_twitter_hashtags),function(hashtag){return _c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\",value:(!hashtag.editing),expression:\"!hashtag.editing\"}],key:hashtag.id,staticClass:\"hashtag\",class:{'hashtag--editing': hashtag.editing},on:{\"click\":function($event){return _vm.clickHashtag(hashtag)}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(hashtag.text),expression:\"hashtag.text\"}],staticClass:\"hashtag__input\",attrs:{\"type\":\"search\",\"spellcheck\":\"false\",\"disabled\":!hashtag.editing},domProps:{\"value\":(hashtag.text)},on:{\"click\":function($event){$event.stopPropagation();},\"input\":function($event){if($event.target.composing)return;_vm.$set(hashtag, \"text\", $event.target.value)}}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag__edit-button\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();hashtag.editing = !hashtag.editing;\n                        hashtag.text = _vm.formatHashtag(hashtag.text, true); _vm.updateTweetLetterCount()}}},[_c('Icon',{attrs:{\"icon\":hashtag.editing ? 'fluent:checkmark-16-filled': 'fluent:edit-16-filled',\"width\":\"17px\"}})],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag__delete-button\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.saved_twitter_hashtags.splice(_vm.saved_twitter_hashtags.indexOf(hashtag), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"17px\"}})],1),_c('div',{staticClass:\"hashtag__sort-handle\"},[_c('Icon',{attrs:{\"icon\":\"material-symbols:drag-handle-rounded\",\"width\":\"17px\"}})],1)])}),0)],1),_c('div',{staticClass:\"twitter-account-list\",class:{'twitter-account-list--display': _vm.is_twitter_account_list_display}},_vm._l((_vm.userStore.user ? _vm.userStore.user.twitter_accounts : []),function(twitter_account){return _c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:twitter_account.id,staticClass:\"twitter-account\",on:{\"click\":function($event){return _vm.updateSelectedTwitterAccount(twitter_account)}}},[_c('img',{staticClass:\"twitter-account__icon\",attrs:{\"src\":twitter_account.icon_url}}),_c('div',{staticClass:\"twitter-account__info\"},[_c('div',{staticClass:\"twitter-account__name\"},[_vm._v(_vm._s(twitter_account.name))]),_c('div',{staticClass:\"twitter-account__screen-name\"},[_vm._v(\"@\"+_vm._s(twitter_account.screen_name))])]),_c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(twitter_account.id === _vm.settingsStore.settings.selected_twitter_account_id),expression:\"twitter_account.id === settingsStore.settings.selected_twitter_account_id\"}],staticClass:\"twitter-account__check\",attrs:{\"icon\":\"fluent:checkmark-16-filled\",\"width\":\"24px\"}})],1)}),0)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"capture-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\"プレイヤーのキャプチャボタンやショートカットキーでキャプチャを撮ると、ここに表示されます。\")]),_c('p',{staticClass:\"mt-2 mb-0\"},[_vm._v(\"表示されたキャプチャを選択してからツイートすると、キャプチャを付けてツイートできます。\")])])\n}]\n\nexport { render, staticRenderFns }","\r\nimport APIClient from  '@/services/APIClient';\r\nimport { IChannel } from '@/services/Channels';\r\n\r\n\r\n/** 録画ファイル情報を表すインターフェース */\r\nexport interface IRecordedVideo {\r\n    id: number;\r\n    file_path: string;\r\n    file_hash: string;\r\n    file_size: number;\r\n    recording_start_time: string | null;\r\n    recording_end_time: string | null;\r\n    duration: number;\r\n    container_format: 'MPEG-TS';\r\n    video_codec: 'MPEG-2' | 'H.264' | 'H.265';\r\n    video_codec_profile: 'High' | 'High 10' | 'Main' | 'Main 10' | 'Baseline';\r\n    video_scan_type: 'Interlaced' | 'Progressive';\r\n    video_frame_rate: number;\r\n    video_resolution_width: number;\r\n    video_resolution_height: number;\r\n    primary_audio_codec: 'AAC-LC' | 'HE-AAC' | 'MP2';\r\n    primary_audio_channel: 'Monaural' | 'Stereo' | '5.1ch';\r\n    primary_audio_sampling_rate: number;\r\n    secondary_audio_codec: 'AAC-LC' | 'HE-AAC' | 'MP2' | null;\r\n    secondary_audio_channel: 'Monaural' | 'Stereo' | '5.1ch' | null;\r\n    secondary_audio_sampling_rate: number | null;\r\n    cm_sections: { start_time: number; end_time: number; }[];\r\n}\r\n\r\n/** 録画ファイル情報を表すインターフェースのデフォルト値 */\r\nexport const IRecordedVideoDefault: IRecordedVideo = {\r\n    id: -1,\r\n    file_path: '',\r\n    file_hash: '',\r\n    file_size: 0,\r\n    recording_start_time: null,\r\n    recording_end_time: null,\r\n    duration: 0,\r\n    container_format: 'MPEG-TS',\r\n    video_codec: 'MPEG-2',\r\n    video_codec_profile: 'High',\r\n    video_scan_type: 'Interlaced',\r\n    video_frame_rate: 29.97,\r\n    video_resolution_width: 1440,\r\n    video_resolution_height: 1080,\r\n    primary_audio_codec: 'AAC-LC',\r\n    primary_audio_channel: 'Stereo',\r\n    primary_audio_sampling_rate: 48000,\r\n    secondary_audio_codec: null,\r\n    secondary_audio_channel: null,\r\n    secondary_audio_sampling_rate: null,\r\n    cm_sections: [],\r\n};\r\n\r\n/** 録画番組情報を表すインターフェース */\r\nexport interface IRecordedProgram {\r\n    id: number;\r\n    recorded_video: IRecordedVideo;\r\n    recording_start_margin: number;\r\n    recording_end_margin: number;\r\n    is_partially_recorded: boolean;\r\n    channel: IChannel | null;\r\n    network_id: number | null;\r\n    service_id: number | null;\r\n    event_id: number | null;\r\n    series_id: number | null;\r\n    series_broadcast_period_id: number | null;\r\n    title: string;\r\n    series_title: string | null;\r\n    episode_number: string | null;\r\n    subtitle: string | null;\r\n    description: string;\r\n    detail: { [key: string]: string };\r\n    start_time: string;\r\n    end_time: string;\r\n    duration: number;\r\n    is_free: boolean;\r\n    genres: { major: string; middle: string; }[];\r\n    primary_audio_type: string;\r\n    primary_audio_language: string;\r\n    secondary_audio_type: string | null;\r\n    secondary_audio_language: string | null;\r\n}\r\n\r\n/** 録画番組情報を表すインターフェースのデフォルト値 */\r\nexport const IRecordedProgramDefault: IRecordedProgram = {\r\n    id: -1,\r\n    recorded_video: IRecordedVideoDefault,\r\n    recording_start_margin: 0,\r\n    recording_end_margin: 0,\r\n    is_partially_recorded: false,\r\n    channel: null,\r\n    network_id: null,\r\n    service_id: null,\r\n    event_id: null,\r\n    series_id: null,\r\n    series_broadcast_period_id: null,\r\n    title: '取得中…',\r\n    series_title: null,\r\n    episode_number: null,\r\n    subtitle: null,\r\n    description: '取得中…',\r\n    detail: {},\r\n    start_time: '2000-01-01T00:00:00+09:00',\r\n    end_time: '2000-01-01T00:00:00+09:00',\r\n    duration: 0,\r\n    is_free: true,\r\n    genres: [],\r\n    primary_audio_type: '2/0モード(ステレオ)',\r\n    primary_audio_language: '日本語',\r\n    secondary_audio_type: null,\r\n    secondary_audio_language: null,\r\n};\r\n\r\n/** 録画番組情報リストを表すインターフェース */\r\nexport interface IRecordedPrograms {\r\n    total: number;\r\n    recorded_programs: IRecordedProgram[];\r\n}\r\n\r\n\r\nclass Videos {\r\n\r\n    /**\r\n     * 録画番組情報を取得する\r\n     * @param video_id 録画番組の ID\r\n     * @returns 録画番組情報 or 録画番組情報の取得に失敗した場合は null\r\n     */\r\n    static async fetchVideo(video_id: number): Promise<IRecordedProgram | null> {\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.get<IRecordedProgram>(`/videos/${video_id}`);\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            APIClient.showGenericError(response, '録画番組情報を取得できませんでした。');\r\n            return null;\r\n        }\r\n\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default Videos;\r\n","\r\nimport mitt from 'mitt';\r\nimport { defineStore } from 'pinia';\r\n\r\nimport { ICommentData } from '@/services/player/managers/LiveCommentManager2';\r\nimport { IRecordedProgram, IRecordedProgramDefault } from '@/services/Videos';\r\n\r\n\r\n/**\r\n * プレイヤーに関連するイベントの型\r\n * PlayerManager 側からのイベントも UI 側からのイベントも PlayerEvents を通じて行う\r\n */\r\nexport type PlayerEvents = {\r\n    // UI コンポーネントからプレイヤーに通知メッセージの送信を要求する\r\n    // DPlayer.notice() の引数と同じで、そのまま DPlayer.notice() に渡される\r\n    SendNotification: {\r\n        message: string;  // 通知メッセージの内容\r\n        duration?: number;  // 通知メッセージの表示時間 (ミリ秒)\r\n        opacity?: number;  // 通知メッセージの透明度\r\n        color?: string;  // 通知メッセージの文字色\r\n    }\r\n    // PlayerManager からプレイヤーロジックの再起動が必要になったことを通知する\r\n    PlayerRestartRequired: {\r\n        message: string;  // プレイヤーに通知するメッセージ\r\n    };\r\n    // CaptureManager からキャプチャの撮影が完了したことを通知する\r\n    CaptureCompleted: {\r\n        capture: Blob;  // キャプチャの Blob\r\n        filename: string;  // キャプチャのファイル名 (UI からの手動ダウンロード時に使う)\r\n    };\r\n    // ライブ視聴: LiveCommentManager からコメントを受信したことを通知する\r\n    LiveCommentReceived: {\r\n        is_initial_comments: boolean;  // 初期コメントかどうか\r\n        comments: ICommentData[];  // コメントデータのリスト\r\n    }\r\n    // ライブ視聴: LiveCommentManager からコメントを送信したことを通知する\r\n    LiveCommentSendCompleted: {\r\n        comment: ICommentData;  // 送信したコメントデータ (を整形したもの)\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * プレイヤー側の再生ロジックと UI 表示側で共有される状態を管理するストア\r\n * 主に PlayerWrapper や PlayerManager から状態変化に合わせて変更された値を UI に反映するためのもの\r\n */\r\nconst usePlayerStore = defineStore('player', {\r\n    state: () => ({\r\n\r\n        // プレイヤーに関連するイベントを発行する EventEmitter\r\n        event_emitter: mitt<PlayerEvents>(),\r\n\r\n        // 現在視聴中の録画番組の情報\r\n        // 視聴中の録画番組がない場合は IRecordedProgramDefault を設定すべき (初期値も IRecordedProgramDefault にしている)\r\n        recorded_program: IRecordedProgramDefault as IRecordedProgram,\r\n\r\n        // コントロールを表示するか (既定で表示する)\r\n        is_control_display: true,\r\n\r\n        // フルスクリーン状態かどうか\r\n        is_fullscreen: false,\r\n\r\n        // 仮想キーボードが表示されているか\r\n        // 既定で表示されていない想定\r\n        is_virtual_keyboard_display: false,\r\n\r\n        // プレイヤーのローディング状態\r\n        // 既定でローディングとする\r\n        is_loading: true,\r\n\r\n        // プレイヤーが映像の再生をバッファリングしているか\r\n        // 視聴開始時以外にも、ネットワークが遅くて再生が一時的に途切れたときなどで表示される\r\n        // 既定でバッファリング中とする\r\n        is_video_buffering: true,\r\n\r\n        // プレイヤーの再生が停止しているか\r\n        // 既定で再生中とする\r\n        is_video_paused: false,\r\n\r\n        // プレイヤーの背景を表示するか\r\n        // 既定で表示しない\r\n        is_background_display: false,\r\n\r\n        // プレイヤーの背景の URL\r\n        background_url: '',\r\n\r\n        // キーボードショートカットの一覧のモーダルを表示するか\r\n        shortcut_key_modal: false,\r\n\r\n        // ライブ視聴: 現在のライブストリームのステータス\r\n        // 既定で null (未視聴) とする\r\n        live_stream_status: null as 'Offline' | 'Standby' | 'ONAir' | 'Idling' | 'Restart' | null,\r\n\r\n        // ライブ視聴: ニコニコ実況への接続に失敗した際のエラーメッセージ\r\n        // null のとき、エラーは発生していないとみなす\r\n        live_comment_init_failed_message: null as string | null,\r\n    }),\r\n});\r\n\r\nexport default usePlayerStore;\r\n","<template>\r\n    <div class=\"twitter-container\">\r\n        <v-dialog content-class=\"zoom-capture-modal-container\" max-width=\"980\" transition=\"slide-y-transition\" v-model=\"zoom_capture_modal\">\r\n            <div class=\"zoom-capture-modal\">\r\n                <img class=\"zoom-capture-modal__image\" :src=\"zoom_capture ? zoom_capture.image_url: ''\">\r\n                <a v-ripple class=\"zoom-capture-modal__download\"\r\n                    :href=\"zoom_capture ? zoom_capture.image_url : ''\" :download=\"zoom_capture ? zoom_capture.filename : ''\">\r\n                    <Icon icon=\"fa6-solid:download\" width=\"45px\" />\r\n                </a>\r\n            </div>\r\n        </v-dialog>\r\n        <div class=\"tab-container\">\r\n            <div class=\"tab-content tab-content--search\" :class=\"{'tab-content--active': twitter_active_tab === 'Search'}\">\r\n                <div class=\"search px-4\">\r\n                    リアルタイム検索機能は鋭意開発中です。\r\n                </div>\r\n            </div>\r\n            <div class=\"tab-content tab-content--timeline\" :class=\"{'tab-content--active': twitter_active_tab === 'Timeline'}\">\r\n                <div class=\"search px-4\">\r\n                    タイムライン機能は鋭意開発中です。\r\n                </div>\r\n            </div>\r\n            <div class=\"tab-content tab-content--capture\" :class=\"{'tab-content--active': twitter_active_tab === 'Capture'}\">\r\n                <div class=\"captures\">\r\n                    <div class=\"capture\" :class=\"{\r\n                            'capture--selected': capture.selected,\r\n                            'capture--focused': capture.focused,\r\n                            'capture--disabled': !capture.selected && tweet_captures.length >= 4,\r\n                        }\"\r\n                        v-for=\"capture in captures\" :key=\"capture.image_url\"\r\n                        @click=\"clickCapture(capture)\">\r\n                        <img class=\"capture__image\" :src=\"capture.image_url\">\r\n                        <div class=\"capture__disabled-cover\"></div>\r\n                        <div class=\"capture__selected-number\">{{tweet_captures.findIndex(blob => blob === capture.blob) + 1}}</div>\r\n                        <Icon class=\"capture__selected-checkmark\" icon=\"fluent:checkmark-circle-16-filled\" />\r\n                        <div class=\"capture__selected-border\"></div>\r\n                        <div class=\"capture__focused-border\"></div>\r\n                        <div v-ripple class=\"capture__zoom\"\r\n                            @click.prevent.stop=\"zoom_capture_modal = true; zoom_capture = capture\"\r\n                            @mousedown.prevent.stop=\"/* 親要素の波紋が広がらないように */\">\r\n                            <Icon icon=\"fluent:zoom-in-16-regular\" width=\"32px\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"capture-announce\" v-show=\"captures.length === 0\">\r\n                    <div class=\"capture-announce__heading\">まだキャプチャがありません。</div>\r\n                    <div class=\"capture-announce__text\">\r\n                        <p class=\"mt-0 mb-0\">プレイヤーのキャプチャボタンやショートカットキーでキャプチャを撮ると、ここに表示されます。</p>\r\n                        <p class=\"mt-2 mb-0\">表示されたキャプチャを選択してからツイートすると、キャプチャを付けてツイートできます。</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"tab-button-container\">\r\n            <div v-ripple class=\"tab-button\" :class=\"{'tab-button--active': twitter_active_tab === 'Search'}\"\r\n                @click=\"twitter_active_tab = 'Search'\">\r\n                <Icon icon=\"fluent:search-16-filled\" height=\"18px\" />\r\n                <span class=\"tab-button__text\">ツイート検索</span>\r\n            </div>\r\n            <div v-ripple class=\"tab-button\" :class=\"{'tab-button--active': twitter_active_tab === 'Timeline'}\"\r\n                @click=\"twitter_active_tab = 'Timeline'\">\r\n                <Icon icon=\"fluent:home-16-regular\" height=\"18px\" />\r\n                <span class=\"tab-button__text\">タイムライン</span>\r\n            </div>\r\n            <div v-ripple class=\"tab-button\" :class=\"{'tab-button--active': twitter_active_tab === 'Capture'}\"\r\n                @click=\"twitter_active_tab = 'Capture'\">\r\n                <Icon icon=\"fluent:image-copy-20-regular\" height=\"18px\" />\r\n                <span class=\"tab-button__text\">キャプチャ</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"tweet-form\" :class=\"{\r\n            'tweet-form--focused': is_tweet_hashtag_form_focused || is_tweet_text_form_focused,\r\n            'tweet-form--virtual-keyboard-display': playerStore.is_virtual_keyboard_display &&\r\n                (Utils.hasActiveElementClass('tweet-form__hashtag-form') || Utils.hasActiveElementClass('tweet-form__textarea')) &&\r\n                (() => {is_hashtag_list_display = false; return true;})(),\r\n        }\">\r\n            <div class=\"tweet-form__hashtag\">\r\n                <input class=\"tweet-form__hashtag-form\" type=\"search\" placeholder=\"#ハッシュタグ\" spellcheck=\"false\"\r\n                    v-model=\"tweet_hashtag\" @input=\"updateTweetLetterCount()\"\r\n                    @focus=\"is_tweet_hashtag_form_focused = true\" @blur=\"is_tweet_hashtag_form_focused = false\"\r\n                    @change=\"tweet_hashtag = formatHashtag(tweet_hashtag); updateTweetLetterCount()\">\r\n                <div v-ripple class=\"tweet-form__hashtag-list-button\" @click=\"clickHashtagListButton()\">\r\n                    <Icon icon=\"fluent:clipboard-text-ltr-32-regular\" height=\"22px\" />\r\n                </div>\r\n            </div>\r\n            <textarea class=\"tweet-form__textarea\" placeholder=\"ツイート\" spellcheck=\"false\" v-model=\"tweet_text\" ref=\"tweet_text\"\r\n                @input=\"updateTweetLetterCount()\"\r\n                @paste=\"pasteClipboardData($event)\"\r\n                @focus=\"is_tweet_text_form_focused = true\"\r\n                @blur=\"is_tweet_text_form_focused = false\">\r\n            </textarea>\r\n            <div class=\"tweet-form__control\">\r\n                <div v-ripple class=\"account-button\" :class=\"{'account-button--no-login': !is_logged_in_twitter}\"\r\n                    @click=\"clickAccountButton()\">\r\n                    <img class=\"account-button__icon\"\r\n                        :src=\"is_logged_in_twitter ? selected_twitter_account?.icon_url : '/assets/images/account-icon-default.png'\">\r\n                    <span class=\"account-button__screen-name\">\r\n                        {{is_logged_in_twitter ? `@${selected_twitter_account?.screen_name}` : '連携されていません'}}\r\n                    </span>\r\n                    <Icon class=\"account-button__menu\" icon=\"fluent:more-circle-20-regular\" width=\"22px\" />\r\n                </div>\r\n                <div class=\"limit-meter\">\r\n                    <div class=\"limit-meter__content\" :class=\"{\r\n                        'limit-meter__content--yellow': tweet_letter_count <= 20,\r\n                        'limit-meter__content--red': tweet_letter_count <= 0,\r\n                    }\">\r\n                        <Icon icon=\"fa-brands:twitter\" width=\"12px\" style=\"margin-right: -2px;\" />\r\n                        <span>{{tweet_letter_count}}</span>\r\n                    </div>\r\n                    <div class=\"limit-meter__content\">\r\n                        <Icon icon=\"fluent:image-16-filled\" width=\"14px\" />\r\n                        <span>{{tweet_captures.length}}/4</span>\r\n                    </div>\r\n                </div>\r\n                <button v-ripple class=\"tweet-button\"\r\n                    :disabled=\"!is_logged_in_twitter || tweet_letter_count < 0 ||\r\n                        (tweet_letter_count === 140 && tweet_captures.length === 0)\"\r\n                    @click=\"sendTweet()\" @touchstart=\"sendTweet()\">\r\n                    <Icon icon=\"fa-brands:twitter\" height=\"16px\" />\r\n                    <span class=\"ml-1\">ツイート</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"hashtag-list\" :class=\"{\r\n            'hashtag-list--display': is_hashtag_list_display,\r\n            'hashtag-list--virtual-keyboard-display': playerStore.is_virtual_keyboard_display && Utils.hasActiveElementClass('hashtag__input'),\r\n        }\">\r\n            <div class=\"hashtag-heading\">\r\n                <div class=\"hashtag-heading__text\">\r\n                    <Icon icon=\"charm:hash\" width=\"17px\" />\r\n                    <span class=\"ml-1\">ハッシュタグリスト</span>\r\n                </div>\r\n                <button v-ripple class=\"hashtag-heading__add-button\"\r\n                    @click=\"saved_twitter_hashtags.push({id: Utils.time(), text: '#ここにハッシュタグを入力', editing: false})\">\r\n                    <Icon icon=\"fluent:add-12-filled\" width=\"17px\" />\r\n                    <span class=\"ml-1\">追加</span>\r\n                </button>\r\n            </div>\r\n            <draggable class=\"hashtag-container\" v-model=\"saved_twitter_hashtags\" handle=\".hashtag__sort-handle\">\r\n                <div v-ripple=\"!hashtag.editing\" class=\"hashtag\" :class=\"{'hashtag--editing': hashtag.editing}\"\r\n                    v-for=\"hashtag in saved_twitter_hashtags\" :key=\"hashtag.id\"\r\n                    @click=\"clickHashtag(hashtag)\">\r\n                    <input type=\"search\" class=\"hashtag__input\" spellcheck=\"false\" v-model=\"hashtag.text\" :disabled=\"!hashtag.editing\" @click.stop=\"\">\r\n                    <button v-ripple class=\"hashtag__edit-button\"\r\n                        @click.prevent.stop=\"hashtag.editing = !hashtag.editing;\r\n                            hashtag.text = formatHashtag(hashtag.text, true); updateTweetLetterCount()\">\r\n                        <Icon :icon=\"hashtag.editing ? 'fluent:checkmark-16-filled': 'fluent:edit-16-filled'\" width=\"17px\" />\r\n                    </button>\r\n                    <button v-ripple class=\"hashtag__delete-button\"\r\n                        @click.prevent.stop=\"saved_twitter_hashtags.splice(saved_twitter_hashtags.indexOf(hashtag), 1)\">\r\n                        <Icon  icon=\"fluent:delete-16-filled\" width=\"17px\" />\r\n                    </button>\r\n                    <div class=\"hashtag__sort-handle\">\r\n                        <Icon icon=\"material-symbols:drag-handle-rounded\" width=\"17px\" />\r\n                    </div>\r\n                </div>\r\n            </draggable>\r\n        </div>\r\n        <div class=\"twitter-account-list\" :class=\"{'twitter-account-list--display': is_twitter_account_list_display}\">\r\n            <div v-ripple class=\"twitter-account\" v-for=\"twitter_account in userStore.user ? userStore.user.twitter_accounts : []\"\r\n                :key=\"twitter_account.id\" @click=\"updateSelectedTwitterAccount(twitter_account)\">\r\n                <img class=\"twitter-account__icon\" :src=\"twitter_account.icon_url\">\r\n                <div class=\"twitter-account__info\">\r\n                    <div class=\"twitter-account__name\">{{twitter_account.name}}</div>\r\n                    <div class=\"twitter-account__screen-name\">@{{twitter_account.screen_name}}</div>\r\n                </div>\r\n                <Icon class=\"twitter-account__check\" icon=\"fluent:checkmark-16-filled\" width=\"24px\"\r\n                    v-show=\"twitter_account.id === settingsStore.settings.selected_twitter_account_id\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue, { PropType } from 'vue';\r\nimport draggable from 'vuedraggable';\r\n\r\nimport { IProgram } from '@/services/Programs';\r\nimport Twitter from '@/services/Twitter';\r\nimport { ITwitterAccount } from '@/services/Users';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport usePlayerStore from '@/stores/PlayerStore';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport useUserStore from '@/stores/UserStore';\r\nimport Utils from '@/utils';\r\n\r\n// このコンポーネント内でのキャプチャのインターフェイス\r\ninterface ITweetCapture {\r\n    blob: Blob;\r\n    filename: string;\r\n    image_url: string;\r\n    selected: boolean;\r\n    focused: boolean;\r\n}\r\n\r\n// このコンポーネント内でのハッシュタグのインターフェイス\r\ninterface IHashtag {\r\n    id: number;\r\n    text: string;\r\n    editing: boolean;\r\n}\r\n\r\nexport default Vue.extend({\r\n    name: 'Panel-TwitterTab',\r\n    components: {\r\n        draggable,\r\n    },\r\n    props: {\r\n        playback_mode: {\r\n            type: String as PropType<'Live' | 'Video'>,\r\n            required: true,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // ユーティリティをテンプレートで使えるように\r\n            Utils: Utils,\r\n\r\n            // Twitter アカウントを1つでも連携しているかどうか\r\n            is_logged_in_twitter: false,\r\n\r\n            // 現在ツイート対象として選択されている Twitter アカウント\r\n            selected_twitter_account: null as ITwitterAccount | null,\r\n\r\n            // 連携している Twitter アカウントリストを表示しているか\r\n            is_twitter_account_list_display: false,\r\n\r\n            // 保存している Twitter のハッシュタグが入るリスト\r\n            saved_twitter_hashtags: useSettingsStore().settings.saved_twitter_hashtags.map((hashtag, index) => {\r\n                // id プロパティは :key=\"\" に指定するためにつける ID (ミリ秒単位のタイムスタンプ + index で適当に一意になるように)\r\n                return {id: Utils.time() + index, text: hashtag, editing: false} as IHashtag;\r\n            }),\r\n\r\n            // ハッシュタグリストを表示しているか\r\n            is_hashtag_list_display: false,\r\n\r\n            // デフォルトで表示される Twitter タブ内のタブ\r\n            twitter_active_tab: useSettingsStore().settings.twitter_active_tab,\r\n\r\n            // キャプチャを拡大表示するモーダルの表示状態\r\n            zoom_capture_modal: false,\r\n\r\n            // 現在モーダルで拡大表示中のキャプチャのオブジェクト\r\n            zoom_capture: null as ITweetCapture | null,\r\n\r\n            // キャプチャリスト\r\n            captures: [] as ITweetCapture[],\r\n\r\n            // キャプチャリストの要素\r\n            captures_element: null as HTMLDivElement | null,\r\n\r\n            // ツイートハッシュタグフォームにフォーカスしているか\r\n            is_tweet_hashtag_form_focused: false,\r\n\r\n            // ツイート本文フォームにフォーカスしているか\r\n            is_tweet_text_form_focused: false,\r\n\r\n            // ツイートのハッシュタグ\r\n            tweet_hashtag: '',\r\n\r\n            // ツイート本文\r\n            tweet_text: '',\r\n\r\n            // ツイートに添付するキャプチャの Blob のリスト\r\n            tweet_captures: [] as Blob[],\r\n\r\n            // 文字数カウント\r\n            tweet_letter_count: 140,\r\n\r\n            // ツイートを送信中か (API リクエストを実行するまで)\r\n            is_tweet_sending: false,\r\n        };\r\n    },\r\n    computed: {\r\n        // ChannelsStore / PlayerStore / SettingsStore / UserStore にアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useChannelsStore, usePlayerStore, useSettingsStore, useUserStore),\r\n    },\r\n    async created() {\r\n\r\n        // アカウント情報を更新\r\n        await this.userStore.fetchUser();\r\n\r\n        // ログイン時のみ\r\n        if (this.userStore.is_logged_in === true) {\r\n\r\n            // 連携している Twitter アカウントがあれば true に設定\r\n            if (this.userStore.user && this.userStore.user.twitter_accounts.length > 0) {\r\n                this.is_logged_in_twitter = true;\r\n\r\n                // 現在ツイート対象として選択されている Twitter アカウントの ID が設定されていない or ID に紐づく Twitter アカウントがない\r\n                // 連携している Twitter アカウントのうち、一番最初のものを自動選択する\r\n                // ここで言う Twitter アカウントの ID は DB 上で連番で振られるもので、Twitter アカウントそのものの固有 ID ではない\r\n                if (this.settingsStore.settings.selected_twitter_account_id === null ||\r\n                    !this.userStore.user.twitter_accounts.some((twitter_account) => {\r\n                        return twitter_account.id === this.settingsStore.settings.selected_twitter_account_id;\r\n                    })) {\r\n                    this.settingsStore.settings.selected_twitter_account_id = this.userStore.user.twitter_accounts[0].id;\r\n                }\r\n\r\n                // 現在ツイート対象として選択されている Twitter アカウントを取得・設定\r\n                const twitter_account_index = this.userStore.user.twitter_accounts.findIndex((twitter_account) => {\r\n                    // Twitter アカウントの ID が選択されているものと一致する\r\n                    return twitter_account.id === this.settingsStore.settings.selected_twitter_account_id;\r\n                });\r\n                this.selected_twitter_account = this.userStore.user.twitter_accounts[twitter_account_index];\r\n            }\r\n        }\r\n\r\n        // 局タグ追加処理を走らせる (ハッシュタグフォームのフォーマット処理も同時に行われるが、元々空なので無意味)\r\n        this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\r\n        this.updateTweetLetterCount();\r\n\r\n        // CaptureManager からキャプチャを受け取るイベントハンドラーを登録\r\n        // 非同期関数で登録することで、CaptureManager でキャプチャの登録完了を待たずに処理を続行できるはず\r\n        this.playerStore.event_emitter.on('CaptureCompleted', async (event) => {\r\n            this.addCaptureList(event.capture, event.filename);\r\n        });\r\n    },\r\n    beforeDestroy() {\r\n\r\n        // 終了前にすべてのキャプチャの Blob URL を revoke してリソースを解放する\r\n        for (const capture of this.captures) {\r\n            URL.revokeObjectURL(capture.image_url);\r\n        }\r\n\r\n        // CaptureManager からキャプチャを受け取るイベントハンドラーを削除\r\n        this.playerStore.event_emitter.off('CaptureCompleted');  // CaptureCompleted イベントの全てのイベントハンドラーを削除\r\n    },\r\n    watch: {\r\n\r\n        // ライブ視聴のみ: ChannelsStore の channel.current.name の変更を監視する\r\n        // 現在視聴中のチャンネルが変更されたときに局タグを自動で更新する\r\n        'channelsStore.channel.current.name': {\r\n            handler(new_channel_name: string, old_channel_name: string) {\r\n                if (this.playback_mode === 'Live') {\r\n                    const old_channel_hashtag = this.getChannelHashtag(old_channel_name) ?? '';\r\n                    this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag.replaceAll(old_channel_hashtag, ''));\r\n                    this.updateTweetLetterCount();\r\n                    // 「番組が切り替わったときにハッシュタグフォームをリセットする」がオンなら、ハッシュタグフォームを空にする\r\n                    if (this.settingsStore.settings.reset_hashtag_when_program_switches === true) {\r\n                        this.tweet_hashtag = this.formatHashtag('');\r\n                        this.updateTweetLetterCount();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // ライブ視聴のみ: ChannelsStore の channel.current.program_present の変更を監視する\r\n        // 現在視聴中の番組が変更されたときに局タグを自動で更新する\r\n        'channelsStore.channel.current.program_present': {\r\n            deep: true,  // ネストされたプロパティの変更も監視する\r\n            handler(new_program: IProgram | null, old_program: IProgram | null) {\r\n                if (this.playback_mode === 'Live') {\r\n                    // NID-SID-EID の組が変わったときのみ更新する\r\n                    if (new_program?.id !== old_program?.id) {\r\n                        // 「番組が切り替わったときにハッシュタグフォームをリセットする」がオンなら、ハッシュタグフォームを空にする\r\n                        if (this.settingsStore.settings.reset_hashtag_when_program_switches === true) {\r\n                            this.tweet_hashtag = this.formatHashtag('');\r\n                            this.updateTweetLetterCount();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // 保存しているハッシュタグが変更されたら随時 LocalStorage に保存する\r\n        saved_twitter_hashtags: {\r\n            deep: true,\r\n            handler() {\r\n                this.settingsStore.settings.saved_twitter_hashtags = this.saved_twitter_hashtags.map(hashtag => hashtag.text);\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        // 文字数カウントを変更するイベント\r\n        updateTweetLetterCount() {\r\n\r\n            // サロゲートペアを考慮し、スプレッド演算子で一度配列化してから数えている\r\n            // ref: https://qiita.com/suin/items/3da4fb016728c024eaca\r\n            this.tweet_letter_count = 140 - [...this.tweet_hashtag].length - [...this.tweet_text].length;\r\n        },\r\n\r\n        // クリップボード内のデータがペーストされたときのイベント\r\n        pasteClipboardData(event: ClipboardEvent) {\r\n            if (event.clipboardData === null) return;\r\n\r\n            // 一応配列になっているので回しているが、基本1回のペーストにつき DataTransferItem は1個しか入らない\r\n            for (const clipboard_item of event.clipboardData.items) {\r\n\r\n                // 画像のみを対象にする (DataTransferItem.type には MIME タイプが入る)\r\n                if (clipboard_item.type.startsWith('image/')) {\r\n\r\n                    // クリップボード内の画像データを File オブジェクトとして取得し、キャプチャリストに追加\r\n                    const file = clipboard_item.getAsFile();\r\n                    if (file) {\r\n                        this.addCaptureList(file, file.name);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // ハッシュタグリストボタンが押されたときのイベント\r\n        clickHashtagListButton() {\r\n            this.is_hashtag_list_display = !this.is_hashtag_list_display;\r\n            // すべてのハッシュタグの編集状態を解除する\r\n            for (const hashtag of this.saved_twitter_hashtags) {\r\n                hashtag.editing = false;\r\n            }\r\n        },\r\n\r\n        // ハッシュタグがクリックされたときのイベント\r\n        clickHashtag(hashtag: IHashtag) {\r\n            this.tweet_hashtag = hashtag.text;\r\n            this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\r\n            this.updateTweetLetterCount();\r\n            window.setTimeout(() => this.is_hashtag_list_display = false, 150);\r\n        },\r\n\r\n        // アカウントボタンが押されたときのイベント\r\n        clickAccountButton() {\r\n\r\n            // Twitter アカウントが連携されていない場合は Twitter 設定画面に飛ばす\r\n            if (!this.is_logged_in_twitter) {\r\n\r\n                // 視聴画面以外に遷移するため、フルスクリーンを解除しないと画面が崩れる\r\n                if (document.fullscreenElement) {\r\n                    document.exitFullscreen();\r\n                }\r\n\r\n                this.$router.push({path: '/settings/twitter'});\r\n                return;\r\n            }\r\n\r\n            // アカウントリストの表示/非表示を切り替え\r\n            this.is_twitter_account_list_display = !this.is_twitter_account_list_display;\r\n\r\n            // アカウントリストが表示されているなら、ハッシュタグリストを非表示にする\r\n            if (this.is_twitter_account_list_display === true) {\r\n                this.is_hashtag_list_display = false;\r\n            }\r\n        },\r\n\r\n        // 選択されている Twitter アカウントを更新する\r\n        updateSelectedTwitterAccount(twitter_account: ITwitterAccount) {\r\n            this.settingsStore.settings.selected_twitter_account_id = twitter_account.id;\r\n            this.selected_twitter_account = twitter_account;\r\n\r\n            // Twitter アカウントリストのオーバーレイを閉じる (少し待ってから閉じたほうが体感が良い)\r\n            window.setTimeout(() => this.is_twitter_account_list_display = false, 150);\r\n        },\r\n\r\n        // キャプチャリスト内のキャプチャがクリックされたときのイベント\r\n        clickCapture(capture: ITweetCapture) {\r\n\r\n            // 選択されたキャプチャが3枚まで & まだ選択されていないならキャプチャをツイート対象に追加する\r\n            if (this.tweet_captures.length < 4 && capture.selected === false) {\r\n                capture.selected = true;\r\n                this.tweet_captures.push(capture.blob);\r\n            } else {\r\n                // ツイート対象のキャプチャになっていたら取り除く\r\n                this.tweet_captures = this.tweet_captures.filter(blob => blob !== capture.blob);\r\n                // キャプチャの選択を解除\r\n                capture.selected = false;\r\n            }\r\n        },\r\n\r\n        // 撮ったキャプチャを親コンポーネントから受け取り、キャプチャリストに追加する\r\n        addCaptureList(blob: Blob, filename: string) {\r\n\r\n            if (this.captures_element === null) {\r\n                this.captures_element = this.$el.querySelector('.tab-content--capture')!;\r\n            }\r\n\r\n            // 撮ったキャプチャが 100 枚を超えていたら、重くなるので古いものから削除する\r\n            // 削除する前に Blob URL を revoke してリソースを解放するのがポイント\r\n            if (this.captures.length > 100) {\r\n                URL.revokeObjectURL(this.captures[0].image_url);\r\n                this.tweet_captures = this.tweet_captures.filter(blob => blob !== this.captures[0].blob);\r\n                this.captures.shift();\r\n            }\r\n\r\n            // キャプチャリストにキャプチャを追加\r\n            const blob_url = URL.createObjectURL(blob);\r\n            this.captures.push({\r\n                blob: blob,\r\n                filename: filename,\r\n                image_url: blob_url,\r\n                selected: false,\r\n                focused: false,\r\n            });\r\n\r\n            // キャプチャリストを下にスクロール\r\n            // this.$nextTick() のコールバックで DOM の更新を待つ\r\n            this.$nextTick(() => {\r\n                if (this.captures_element === null) return;\r\n                this.captures_element.scrollTo({\r\n                    top: this.captures_element.scrollHeight,\r\n                    behavior: 'smooth',\r\n                });\r\n            });\r\n        },\r\n\r\n        // 撮ったキャプチャに番組タイトルの透かしを描画する\r\n        async drawProgramTitleOnCapture(capture: Blob): Promise<Blob> {\r\n\r\n            // キャプチャの Blob を createImageBitmap() で Canvas に描ける ImageBitmap に変換\r\n            const image_bitmap = await createImageBitmap(capture);\r\n\r\n            // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\r\n            const canvas = ('OffscreenCanvas' in window) ?\r\n                new OffscreenCanvas(image_bitmap.width, image_bitmap.height) : document.createElement('canvas');\r\n\r\n            // Canvas にキャプチャを描画\r\n            const context = canvas.getContext('2d', {\r\n                alpha: false,\r\n                desynchronized: true,\r\n                willReadFrequently: false,\r\n            }) as OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n            context.drawImage(image_bitmap, 0, 0);\r\n            image_bitmap.close();\r\n\r\n            // 描画設定\r\n            context.font = 'bold 22px \"Open Sans\", \"YakuHanJPs\", \"Hiragino Sans\", \"Noto Sans JP\", sans-serif'; // フォント\r\n            context.fillStyle = 'rgba(255, 255, 255, 70%)';  // 半透明の白\r\n            context.shadowColor = 'rgba(0, 0, 0, 100%)';  // 影の色\r\n            context.shadowBlur = 4;  // 影をぼかすしきい値\r\n            context.shadowOffsetX = 0;  // 影のX座標\r\n            context.shadowOffsetY = 0;  // 影のY座標\r\n\r\n            // 現在視聴中の番組タイトルを取得\r\n            let title;\r\n            if (this.playback_mode === 'Live') {\r\n                title = this.channelsStore.channel.current.program_present?.title ?? '放送休止';\r\n            } else {\r\n                title = this.playerStore.recorded_program.title;\r\n            }\r\n\r\n            // 番組タイトルの透かしを描画\r\n            switch (this.settingsStore.settings.tweet_capture_watermark_position) {\r\n                case 'TopLeft': {\r\n                    context.textAlign = 'left'; // 左寄せ\r\n                    context.textBaseline = 'top'; // ベースラインを上寄せ\r\n                    context.fillText(title, 16, 12);\r\n                    break;\r\n                }\r\n                case 'TopRight': {\r\n                    context.textAlign = 'right'; // 右寄せ\r\n                    context.textBaseline = 'top'; // ベースラインを上寄せ\r\n                    context.fillText(title, canvas.width - 16, 12);\r\n                    break;\r\n                }\r\n                case 'BottomLeft': {\r\n                    context.textAlign = 'left'; // 左寄せ\r\n                    context.textBaseline = 'bottom'; // ベースラインを下寄せ\r\n                    context.fillText(title, 16, canvas.height - 12);\r\n                    break;\r\n                }\r\n                case 'BottomRight': {\r\n                    context.textAlign = 'right'; // 右寄せ\r\n                    context.textBaseline = 'bottom'; // ベースラインを下寄せ\r\n                    context.fillText(title, canvas.width - 16, canvas.height - 12);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Blob にして返す\r\n            if (canvas instanceof OffscreenCanvas) {\r\n                return await canvas.convertToBlob({type: 'image/jpeg', quality: 1});\r\n            } else {\r\n                return new Promise((resolve, reject) => canvas.toBlob(blob => {\r\n                    if (blob === null) {\r\n                        reject();\r\n                    } else {\r\n                        resolve(blob);\r\n                    }\r\n                }, 'image/jpeg', 1));\r\n            }\r\n        },\r\n\r\n        // チャンネル名から対応する局タグを取得する\r\n        // とりあえず三大首都圏 + BS のみ対応\r\n        getChannelHashtag(channel_name: string): string | null {\r\n            // NHK\r\n            if (channel_name.startsWith('NHK総合')) {\r\n                return '#nhk';\r\n            } else if (channel_name.startsWith('NHKEテレ')) {\r\n                return '#etv';\r\n            // 民放\r\n            } else if (channel_name.startsWith('日テレ')) {\r\n                return '#ntv';\r\n            } else if (channel_name.startsWith('読売テレビ')) {\r\n                return '#ytv';\r\n            } else if (channel_name.startsWith('中京テレビ')) {\r\n                return '#chukyotv';\r\n            } else if (channel_name.startsWith('テレビ朝日')) {\r\n                return '#tvasahi';\r\n            } else if (channel_name.startsWith('ABCテレビ')) {\r\n                return '#abc';\r\n            } else if (channel_name.startsWith('メ~テレ')) {\r\n                return '#nagoyatv';\r\n            } else if (channel_name.startsWith('TBS') && !channel_name.includes('TBSチャンネル')) {\r\n                return '#tbs';\r\n            } else if (channel_name.startsWith('MBS')) {\r\n                return '#mbs';\r\n            } else if (channel_name.startsWith('CBC')) {\r\n                return '#cbc';\r\n            } else if (channel_name.startsWith('テレビ東京')) {\r\n                return '#tvtokyo';\r\n            } else if (channel_name.startsWith('テレビ大阪')) {\r\n                return '#tvo';\r\n            } else if (channel_name.startsWith('テレビ愛知')) {\r\n                return '#tva';\r\n            } else if (channel_name.startsWith('フジテレビ')) {\r\n                return '#fujitv';\r\n            } else if (channel_name.startsWith('関西テレビ')) {\r\n                return '#kantele';\r\n            } else if (channel_name.startsWith('東海テレビ')) {\r\n                return '#tokaitv';\r\n            // 独立局\r\n            } else if (channel_name.startsWith('TOKYO MX')) {\r\n                return '#tokyomx';\r\n            } else if (channel_name.startsWith('tvk')) {\r\n                return '#tvk';\r\n            } else if (channel_name.startsWith('チバテレ')) {\r\n                return '#chibatv';\r\n            } else if (channel_name.startsWith('テレ玉')) {\r\n                return '#teletama';\r\n            } else if (channel_name.startsWith('サンテレビ')) {\r\n                return '#suntv';\r\n            } else if (channel_name.startsWith('KBS京都')) {\r\n                return '#kbs';\r\n            // BS・CS\r\n            } else if (channel_name.startsWith('NHKBS1')) {\r\n                return '#nhkbs1';\r\n            } else if (channel_name.startsWith('NHKBSプレミアム')) {\r\n                return '#nhkbsp';\r\n            } else if (channel_name.startsWith('BS日テレ')) {\r\n                return '#bsntv';\r\n            } else if (channel_name.startsWith('BS朝日')) {\r\n                return '#bsasahi';\r\n            } else if (channel_name.startsWith('BS-TBS')) {\r\n                return '#bstbs';\r\n            } else if (channel_name.startsWith('BSテレ東')) {\r\n                return '#bstvtokyo';\r\n            } else if (channel_name.startsWith('BSフジ')) {\r\n                return '#bsfuji';\r\n            } else if (channel_name.startsWith('BS11イレブン')) {\r\n                return '#bs11';\r\n            } else if (channel_name.startsWith('BS12トゥエルビ')) {\r\n                return '#bs12';\r\n            } else if (channel_name.startsWith('AT-X')) {\r\n                return '#at_x';\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        // ハッシュタグを整形（余計なスペースなどを削り、全角ハッシュを半角ハッシュへ、全角スペースを半角スペースに置換）\r\n        formatHashtag(tweet_hashtag: string, from_hashtag_list: boolean = false): string {\r\n\r\n            // ハッシュとスペースの表記ゆれを統一し、連続するハッシュやスペースを1つにする\r\n            const tweet_hashtag_array = tweet_hashtag.trim()\r\n                .replaceAll('♯', '#').replaceAll('＃', '#').replace(/#{2,}/g, '#').replaceAll('　', ' ').replaceAll(/ +/g,' ').split(' ')\r\n                .filter(hashtag => hashtag !== '');\r\n\r\n            // ハッシュタグがついてない場合にハッシュタグを付与\r\n            for (let index in tweet_hashtag_array) {\r\n                if (!tweet_hashtag_array[index].startsWith('#')) {\r\n                    tweet_hashtag_array[index] = `#${tweet_hashtag_array[index]}`;\r\n                }\r\n            }\r\n\r\n            // ライブ視聴: 設定でオンになっている場合のみ、視聴中チャンネルの局タグを自動で追加する (ハッシュタグリスト内のハッシュタグは除外)\r\n            // ビデオ視聴ではリアルタイム実況ではないので追加しない\r\n            if (this.playback_mode === 'Live') {\r\n                if (this.settingsStore.settings.auto_add_watching_channel_hashtag === true && from_hashtag_list === false) {\r\n                    const channel_hashtag = this.getChannelHashtag(this.channelsStore.channel.current.name);\r\n                    if (channel_hashtag !== null) {\r\n                        if (tweet_hashtag_array.includes(channel_hashtag) === false) {\r\n                            tweet_hashtag_array.push(channel_hashtag);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return tweet_hashtag_array.join(' ');\r\n        },\r\n\r\n        // ツイートを送信する\r\n        async sendTweet() {\r\n\r\n            // Twitter アカウントが連携されていない場合は何もしない\r\n            if (this.selected_twitter_account === null) return;\r\n\r\n            // 送信中フラグを立てる (重複送信防止)\r\n            if (this.is_tweet_sending === true) return;\r\n            this.is_tweet_sending = true;\r\n\r\n            // ハッシュタグを整形\r\n            this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\r\n            const tweet_hashtag = this.tweet_hashtag;\r\n            this.updateTweetLetterCount();\r\n\r\n            // 実際に送るツイート本文を作成\r\n            let tweet_text = this.tweet_text;\r\n            if (tweet_hashtag !== '') {  // ハッシュタグが入力されているときのみ\r\n                switch (this.settingsStore.settings.tweet_hashtag_position) {\r\n                    // ツイート本文の前に追加する\r\n                    case 'Prepend': {\r\n                        tweet_text = `${tweet_hashtag} ${this.tweet_text}`;\r\n                        break;\r\n                    }\r\n                    // ツイート本文の後に追加する\r\n                    case 'Append': {\r\n                        tweet_text = `${this.tweet_text} ${tweet_hashtag}`;\r\n                        break;\r\n                    }\r\n                    // ツイート本文の前に追加してから改行する\r\n                    case 'PrependWithLineBreak': {\r\n                        tweet_text = `${tweet_hashtag}\\n${this.tweet_text}`;\r\n                        break;\r\n                    }\r\n                    // ツイート本文の後に改行してから追加する\r\n                    case 'AppendWithLineBreak': {\r\n                        tweet_text = `${this.tweet_text}\\n${tweet_hashtag}`;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // キャプチャへの透かしの描画がオンの場合、キャプチャの Blob を透かし付きのものに差し替える\r\n            const new_tweet_captures: Blob[] = [];\r\n            for (let tweet_capture of this.tweet_captures) {\r\n                if (this.settingsStore.settings.tweet_capture_watermark_position !== 'None') {\r\n                    tweet_capture = await this.drawProgramTitleOnCapture(tweet_capture);\r\n                }\r\n                new_tweet_captures.push(tweet_capture);\r\n            }\r\n\r\n            // 連投防止のため、フォーム上のツイート本文・キャプチャの選択・キャプチャのフォーカスを消去\r\n            // 送信した感を出す意味合いもある\r\n            this.tweet_text = '';\r\n            this.updateTweetLetterCount();\r\n            for (const capture of this.captures) {\r\n                capture.selected = false;\r\n                capture.focused = false;\r\n            }\r\n            this.tweet_captures = [];\r\n\r\n            // ツイート送信 API にリクエスト\r\n            // レスポンスは待たない\r\n            Twitter.sendTweet(this.selected_twitter_account.screen_name, tweet_text, new_tweet_captures).then((result) => {\r\n                this.playerStore.event_emitter.emit('SendNotification', {\r\n                    message: result.message,\r\n                    color: result.is_error ? '#FF6F6A' : undefined,\r\n                });\r\n            });\r\n\r\n            // 送信中フラグを下ろす\r\n            this.is_tweet_sending = false;\r\n\r\n            // パネルを閉じるように親コンポーネントに伝える\r\n            if (this.settingsStore.settings.fold_panel_after_sending_tweet === true) {\r\n                this.$emit('panel_folding_requested');\r\n                (this.$refs.tweet_text as HTMLTextAreaElement).blur();  // フォーカスを外す\r\n            }\r\n        },\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n@include smartphone-horizontal {\r\n    .zoom-capture-modal-container.v-dialog {\r\n        width: auto !important;\r\n        max-width: auto !important;\r\n        aspect-ratio: 16 / 9;\r\n    }\r\n}\r\n\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n\r\n.zoom-capture-modal {\r\n    position: relative;\r\n\r\n    &__image {\r\n        display: block;\r\n        width: 100%;\r\n        border-radius: 11px;\r\n    }\r\n\r\n    &__download {\r\n        display: flex;\r\n        position: absolute;\r\n        align-items: center;\r\n        justify-content: center;\r\n        right: 22px;\r\n        bottom: 20px;\r\n        width: 80px;\r\n        height: 80px;\r\n        border-radius: 50%;\r\n        color: var(--v-text-base);\r\n        filter: drop-shadow(0px 0px 4.5px rgba(0, 0, 0, 90%));\r\n    }\r\n}\r\n\r\n.twitter-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    padding-bottom: 8px;\r\n    @include smartphone-vertical {\r\n        padding-bottom: 0px;\r\n    }\r\n    &.watch-panel__content--active {\r\n        content-visibility: visible !important;\r\n    }\r\n    &.watch-panel__content--active .tab-container .tab-content--active {\r\n        opacity: 1;\r\n        visibility: visible;\r\n        @media (hover: none) {\r\n            content-visibility: auto;\r\n        }\r\n    }\r\n\r\n    .tab-container {\r\n        position: relative;\r\n        flex-grow: 1;\r\n        min-height: 0;  // magic!\r\n\r\n        .tab-content {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n            transition: opacity 0.2s, visibility 0.2s;\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            overflow-y: scroll;\r\n            &::-webkit-scrollbar {\r\n                width: 6px;\r\n            }\r\n            @include tablet-vertical {\r\n                padding-top: 16px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                padding-top: 8px;\r\n            }\r\n            @include smartphone-vertical {\r\n                padding-top: 8px;\r\n            }\r\n\r\n            // スマホ・タブレット (タッチデバイス) ではアニメーションが重めなので、アニメーションを無効化\r\n            // アクティブなタブ以外は明示的に描画しない\r\n            @media (hover: none) {\r\n                transition: none;\r\n                content-visibility: hidden;\r\n            }\r\n\r\n            .captures {\r\n                display: grid;\r\n                grid-template-columns: 1fr 1fr;\r\n                grid-row-gap: 12px;\r\n                grid-column-gap: 12px;\r\n                padding-left: 12px;\r\n                padding-right: 6px;\r\n                max-height: 100%;\r\n                // iOS Safari のみ\r\n                @supports (-webkit-touch-callout: none) {\r\n                    padding-right: 12px;\r\n                }\r\n                @include tablet-vertical {\r\n                    grid-template-columns: 1fr 1fr 1fr;\r\n                    padding-left: 24px;\r\n                    padding-right: 24px;\r\n                    grid-row-gap: 10px;\r\n                    grid-column-gap: 16px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    grid-row-gap: 8px;\r\n                    grid-column-gap: 8px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    grid-template-columns: 1fr 1fr 1fr;\r\n                    grid-row-gap: 10px;\r\n                    grid-column-gap: 10px;\r\n                }\r\n\r\n                .capture {\r\n                    position: relative;\r\n                    height: 82px;\r\n                    border-radius: 11px;\r\n                    // 読み込まれるまでのキャプチャの背景\r\n                    background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n                    overflow: hidden;\r\n                    user-select: none;\r\n                    cursor: pointer;\r\n                    content-visibility: auto;\r\n                    @include tablet-vertical {\r\n                        height: 90px;\r\n                        border-radius: 9px;\r\n                        .capture__image {\r\n                            object-fit: cover;\r\n                        }\r\n                    }\r\n                    @include smartphone-horizontal {\r\n                        height: 74px;\r\n                        border-radius: 9px;\r\n                        .capture__image {\r\n                            object-fit: cover;\r\n                        }\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        height: 82px;\r\n                        border-radius: 9px;\r\n                        .capture__image {\r\n                            object-fit: cover;\r\n                        }\r\n                    }\r\n\r\n                    &__image {\r\n                        display: block;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                    }\r\n\r\n                    &__zoom {\r\n                        display: flex;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        position: absolute;\r\n                        top: 1px;\r\n                        right: 3px;\r\n                        width: 38px;\r\n                        height: 38px;\r\n                        border-radius: 50%;\r\n                        filter: drop-shadow(0px 0px 2.5px rgba(0, 0, 0, 90%));\r\n                        cursor: pointer;\r\n                    }\r\n\r\n                    &__disabled-cover {\r\n                        display: none;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        position: absolute;\r\n                        top: 0;\r\n                        left: 0;\r\n                        right: 0;\r\n                        bottom: 0;\r\n                        background: rgba(30, 19, 16, 50%);\r\n                    }\r\n\r\n                    &__selected-number {\r\n                        display: none;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        position: absolute;\r\n                        top: 0;\r\n                        left: 0;\r\n                        right: 0;\r\n                        bottom: 0;\r\n                        background: rgba(30, 19, 16, 50%);\r\n                        font-size: 38px;\r\n                        text-shadow: 0px 0px 2.5px rgba(0, 0, 0, 90%)\r\n                    }\r\n\r\n                    &__selected-checkmark {\r\n                        display: none;\r\n                        position: absolute;\r\n                        top: 6px;\r\n                        left: 7px;\r\n                        width: 20px;\r\n                        height: 20px;\r\n                        color: var(--v-primary-base);\r\n                    }\r\n\r\n                    &__selected-border {\r\n                        display: none;\r\n                        position: absolute;\r\n                        top: 0;\r\n                        left: 0;\r\n                        right: 0;\r\n                        bottom: 0;\r\n                        border-radius: 11px;\r\n                        border: 4px solid var(--v-primary-base);\r\n                    }\r\n\r\n                    &__focused-border {\r\n                        display: none;\r\n                        position: absolute;\r\n                        top: 0;\r\n                        left: 0;\r\n                        right: 0;\r\n                        bottom: 0;\r\n                        border-radius: 11px;\r\n                        border: 4px solid var(--v-secondary-base);\r\n                    }\r\n\r\n                    &--selected {\r\n                        .capture__selected-number, .capture__selected-checkmark, .capture__selected-border {\r\n                            display: flex;\r\n                        }\r\n                    }\r\n                    &--focused {\r\n                        .capture__focused-border {\r\n                            display: block;\r\n                        }\r\n                    }\r\n                    &--disabled {\r\n                        cursor: auto;\r\n                        .capture__disabled-cover {\r\n                            display: block;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            .capture-announce {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                flex-direction: column;\r\n                height: 100%;\r\n                padding-left: 12px;\r\n                padding-right: 5px;\r\n                @include tablet-vertical {\r\n                    padding-left: 24px;\r\n                    padding-right: 24px;\r\n                }\r\n\r\n                &__heading {\r\n                    font-size: 20px;\r\n                    font-weight: bold;\r\n                    @include smartphone-horizontal {\r\n                        font-size: 16px;\r\n                    }\r\n                }\r\n                &__text {\r\n                    margin-top: 12px;\r\n                    color: var(--v-text-darken1);\r\n                    font-size: 13.5px;\r\n                    text-align: center;\r\n                    @include smartphone-horizontal {\r\n                        font-size: 12px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .tab-button-container {\r\n        display: flex;\r\n        flex-shrink: 0;\r\n        column-gap: 7px;\r\n        height: 40px;\r\n        margin-left: 12px;\r\n        margin-right: 12px;\r\n        padding-top: 8px;\r\n        padding-bottom: 6px;\r\n        @include tablet-vertical {\r\n            height: 40px;\r\n            margin-left: 24px;\r\n            margin-right: 24px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            height: 38px;\r\n            margin-left: 8px;\r\n            margin-right: 8px;\r\n        }\r\n        @include smartphone-vertical {\r\n            height: 38px;\r\n        }\r\n\r\n        .tab-button {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            flex: 1;\r\n            background: var(--v-background-lighten2);\r\n            border-radius: 7px;\r\n            font-size: 11px;\r\n            transition: background-color 0.15s ease;\r\n            user-select: none;\r\n            cursor: pointer;\r\n            @include tablet-vertical {\r\n                font-size: 11.5px;\r\n                border-radius: 7px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                font-size: 10.5px;\r\n                border-radius: 6px;\r\n            }\r\n            @include smartphone-vertical {\r\n                font-size: 10.5px;\r\n                border-radius: 6px;\r\n            }\r\n            &--active {\r\n                background: var(--v-twitter-base);\r\n            }\r\n\r\n            &__text {\r\n                margin-left: 4px;\r\n                margin-right: 2px;\r\n                line-height: 2;\r\n            }\r\n        }\r\n    }\r\n\r\n    .tweet-form {\r\n        display: flex;\r\n        position: relative;\r\n        flex-direction: column;\r\n        flex-shrink: 0;\r\n        height: 136px;\r\n        margin-left: 12px;\r\n        margin-right: 12px;\r\n        border-radius: 12px;\r\n        border-bottom-left-radius: 7px;\r\n        border-bottom-right-radius: 7px;\r\n        background: var(--v-background-lighten1);\r\n        transition: box-shadow 0.09s ease;\r\n        @include tablet-vertical {\r\n            margin-left: 24px;\r\n            margin-right: 24px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            height: 96px;\r\n            margin-left: 8px;\r\n            margin-right: 8px;\r\n            border-radius: 6px;\r\n            border-bottom-left-radius: 5px;\r\n            border-bottom-right-radius: 5px;\r\n        }\r\n        @include smartphone-vertical {\r\n            height: 96px;\r\n            border-radius: 6px;\r\n            border-bottom-left-radius: 5px;\r\n            border-bottom-right-radius: 5px;\r\n        }\r\n\r\n        &--focused {\r\n            box-shadow: rgba(79, 130, 230, 60%) 0 0 0 3.5px;\r\n        }\r\n\r\n        &--virtual-keyboard-display {\r\n            position: relative;\r\n            bottom: calc(env(keyboard-inset-height, 0px) - 77px);\r\n            @include tablet-vertical {\r\n                bottom: calc(env(keyboard-inset-height, 0px) - 40px) !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                bottom: calc(env(keyboard-inset-height, 0px) - 34px);\r\n            }\r\n            @include smartphone-vertical {\r\n                bottom: calc(env(keyboard-inset-height, 0px) - 90px) !important;\r\n            }\r\n        }\r\n\r\n        &__hashtag {\r\n            display: block;\r\n            position: relative;\r\n            height: 19px;\r\n            margin-top: 12px;\r\n            margin-left: 12px;\r\n            margin-right: 12px;\r\n            @include smartphone-horizontal {\r\n                height: 16px;\r\n                margin-top: 8px;\r\n            }\r\n            @include smartphone-vertical {\r\n                height: 16px;\r\n                margin-top: 8px;\r\n            }\r\n\r\n            &-form {\r\n                display: block;\r\n                width: calc(100% - 24px);\r\n                height: 100%;\r\n                flex-grow: 1;\r\n                font-size: 12.5px;\r\n                color: var(--v-twitter-lighten2);\r\n                outline: none;\r\n                @include smartphone-horizontal {\r\n                    width: calc(100% - 22px);\r\n                    font-size: 12px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    width: calc(100% - 22px);\r\n                    font-size: 12px;\r\n                }\r\n                // iOS Safari でフォーカス時にズームされる問題への対処\r\n                @supports (-webkit-touch-callout: none) {\r\n                    @include smartphone-horizontal {\r\n                        width: calc(100% * 1.333 - 32px);\r\n                        height: calc(16px * 1.333 + 4px);\r\n                        font-size: 16px;\r\n                        transform: scale(0.75);\r\n                        transform-origin: 0 0;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        width: calc(100% * 1.333 - 32px);\r\n                        height: calc(16px * 1.333 + 4px);\r\n                        font-size: 16px;\r\n                        transform: scale(0.75);\r\n                        transform-origin: 0 0;\r\n                    }\r\n                }\r\n                &::placeholder {\r\n                    color: rgba(65, 165, 241, 60%);\r\n                }\r\n            }\r\n            &-list-button {\r\n                display: flex;\r\n                position: absolute;\r\n                align-items: center;\r\n                justify-content: center;\r\n                top: -8px;\r\n                right: -8px;\r\n                width: 34px;\r\n                height: 34px;\r\n                padding: 6px;\r\n                border-radius: 50%;\r\n                color: var(--v-twitter-lighten2);\r\n                cursor: pointer;\r\n                @include smartphone-horizontal {\r\n                    right: -11px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    right: -11px;\r\n                }\r\n            }\r\n        }\r\n\r\n        &__textarea {\r\n            display: block;\r\n            flex-grow: 1;\r\n            margin-top: 8px;\r\n            margin-left: 12px;\r\n            margin-right: 12px;\r\n            font-size: 12.5px;\r\n            color: var(--v-text-base);\r\n            word-break: break-all;\r\n            resize: none;\r\n            outline: none;\r\n            @include smartphone-horizontal {\r\n                margin-top: 6px;\r\n                font-size: 12px;\r\n            }\r\n            @include smartphone-vertical {\r\n                margin-top: 6px;\r\n                font-size: 12px;\r\n            }\r\n            // iOS Safari でフォーカス時にズームされる問題への対処\r\n            @supports (-webkit-touch-callout: none) {\r\n                @include smartphone-horizontal {\r\n                    position: absolute;\r\n                    top: 24px;\r\n                    left: -2px;\r\n                    min-width: calc(100% * 1.28 - 25px);\r\n                    min-height: 34px;\r\n                    font-size: 16px;\r\n                    transform: scale(0.78125);\r\n                    transform-origin: 0 0;\r\n                }\r\n                @include smartphone-vertical {\r\n                    position: absolute;\r\n                    top: 24px;\r\n                    left: -2px;\r\n                    min-width: calc(100% * 1.28 - 25px);\r\n                    min-height: 34px;\r\n                    font-size: 16px;\r\n                    transform: scale(0.78125);\r\n                    transform-origin: 0 0;\r\n                }\r\n            }\r\n            &::placeholder {\r\n                color: var(--v-text-darken2);\r\n            }\r\n        }\r\n\r\n        &__control {\r\n            display: flex;\r\n            align-items: center;\r\n            height: 32px;\r\n            margin-top: 6px;\r\n            @include smartphone-horizontal {\r\n                height: 26px;\r\n            }\r\n            @include smartphone-vertical {\r\n                height: 26px;\r\n            }\r\n            // iOS Safari でフォーカス時にズームされる問題への対処…の副作用の対処\r\n            @supports (-webkit-touch-callout: none) {\r\n                @include smartphone-horizontal {\r\n                    margin-top: auto;\r\n                }\r\n                @include smartphone-vertical {\r\n                    margin-top: auto;\r\n                }\r\n            }\r\n\r\n            .account-button {\r\n                display: flex;\r\n                align-items: center;\r\n                width: 183px;\r\n                height: 100%;\r\n                border-radius: 7px;\r\n                font-size: 13px;\r\n                color: var(--v-text-base);\r\n                background: var(--v-background-lighten2);\r\n                user-select: none;\r\n                cursor: pointer;\r\n                @include tablet-vertical {\r\n                    width: 200px;\r\n                    border-radius: 5px;\r\n                    font-size: 11.5px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    width: 156px;\r\n                    border-radius: 5px;\r\n                    font-size: 11px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    width: auto;\r\n                    flex-grow: 1;\r\n                    border-radius: 5px;\r\n                    font-size: 11.5px;\r\n                }\r\n                &--no-login {\r\n                    .account-button__screen-name {\r\n                        font-weight: 500;\r\n                    }\r\n                    .account-button__menu {\r\n                        display: none;\r\n                    }\r\n                }\r\n\r\n                &__icon {\r\n                    display: block;\r\n                    width: 32px;\r\n                    height: 100%;\r\n                    border-radius: 7px;\r\n                    // 読み込まれるまでのアイコンの背景\r\n                    background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n                    @include smartphone-horizontal {\r\n                        width: 26px;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        width: 26px;\r\n                    }\r\n                }\r\n                &__screen-name {\r\n                    flex-grow: 1;\r\n                    line-height: 2;\r\n                    text-align: center;\r\n                    font-weight: bold;\r\n                }\r\n                &__menu {\r\n                    margin-right: 4px;\r\n                }\r\n            }\r\n\r\n            .limit-meter {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                flex-direction: column;\r\n                flex-grow: 1;\r\n                row-gap: 0.5px;\r\n                font-size: 10px;\r\n                color: var(--v-text-darken1);\r\n                user-select: none;\r\n                @include tablet-vertical {\r\n                    flex-grow: 1;\r\n                    flex-direction: row;\r\n                    width: auto;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    font-size: 9px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    flex-grow: unset;\r\n                    flex-direction: row;\r\n                    width: 88px;\r\n                }\r\n\r\n                &__content {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    &:nth-child(2) {\r\n                        @include tablet-vertical {\r\n                            margin-left: 28px;\r\n                            padding-right: 3px;\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            margin-top: -2.5px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            margin-left: 6px;\r\n                        }\r\n                    }\r\n                    svg {\r\n                        width: 14px;\r\n                        @include tablet-vertical {\r\n                            width: 16px;\r\n                            height: 16px;\r\n                        }\r\n                    }\r\n                    span {\r\n                        width: 16px;\r\n                        margin-left: 5px;\r\n                        text-align: center;\r\n                        font-weight: bold;\r\n                        @include tablet-vertical {\r\n                            width: 25px;\r\n                            margin-left: 8px;\r\n                            font-size: 15px;\r\n                        }\r\n                    }\r\n                    &--yellow {\r\n                        color: var(--v-warning-base);\r\n                    }\r\n                    &--red {\r\n                        color: var(--v-error-base);\r\n                    }\r\n                }\r\n            }\r\n\r\n            .tweet-button {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                width: 94px;\r\n                height: 100%;\r\n                border-radius: 7px;\r\n                font-size: 12.5px;\r\n                line-height: 2;\r\n                color: var(--v-text-base);\r\n                background: var(--v-twitter-base);\r\n                user-select: none;\r\n                outline: none;\r\n                cursor: pointer;\r\n                @include tablet-vertical {\r\n                    width: 200px;\r\n                    border-radius: 5px;\r\n                    font-size: 11.8px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    width: 86px;\r\n                    border-radius: 5px;\r\n                    font-size: 11.8px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    width: 100px;\r\n                    border-radius: 5px;\r\n                    font-size: 11.8px;\r\n                }\r\n\r\n                &[disabled] {\r\n                    opacity: 0.7;\r\n                    cursor: auto;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .hashtag-list {\r\n        position: absolute;\r\n        left: 12px;\r\n        right: 12px;\r\n        bottom: 149px;\r\n        max-height: calc(100vh - 239px);\r\n        max-height: calc(100dvh - 239px);\r\n        padding: 12px 4px;\r\n        padding-bottom: 10px;\r\n        border-radius: 7px;\r\n        // スクロールバーが表示されると角が丸くなくなる問題への対処\r\n        clip-path: inset(0% 0% 0% 0% round 7px);\r\n        background: var(--v-background-lighten2);\r\n        box-shadow: 0px 3px 4px rgba(0, 0, 0, 53%);\r\n        transition: opacity 0.15s ease, visibility 0.15s ease;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        overflow-y: auto;\r\n        z-index: 2;\r\n        @include tablet-vertical {\r\n            left: 24px;\r\n            right: 24px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            left: 8px;\r\n            right: 8px;\r\n            bottom: 110px;\r\n            max-height: calc(100vh - 152px);\r\n            max-height: calc(100dvh - 152px);\r\n            padding: 6px 4px;\r\n            border-radius: 6px;\r\n            clip-path: inset(0% 0% 0% 0% round 6px);\r\n        }\r\n        @include smartphone-vertical {\r\n            bottom: 102px;\r\n            max-height: calc(100% - 110px);\r\n            padding: 8px 4px;\r\n            border-radius: 6px;\r\n            clip-path: inset(0% 0% 0% 0% round 6px);\r\n        }\r\n        &--display {\r\n            opacity: 1;\r\n            visibility: visible;\r\n        }\r\n        &--virtual-keyboard-display {\r\n            bottom: calc(env(keyboard-inset-height, 0px) - 74px) !important;\r\n            max-height: calc(100vh - calc(env(keyboard-inset-height, 0px) + 16px)) !important;\r\n            max-height: calc(100dvh - calc(env(keyboard-inset-height, 0px) + 16px)) !important;\r\n            @include smartphone-horizontal {\r\n                bottom: calc(env(keyboard-inset-height, 0px) - 26px) !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                bottom: calc(env(keyboard-inset-height, 0px) - 90px) !important;\r\n                max-height: calc(100% - env(keyboard-inset-height, 0px) + 82px) !important;\r\n            }\r\n        }\r\n        @include smartphone-horizontal {\r\n            &::-webkit-scrollbar {\r\n                width: 4px;\r\n            }\r\n        }\r\n        &::-webkit-scrollbar-track {\r\n            background: var(--v-background-lighten2);\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n                background: var(--v-gray-base);\r\n            &:hover {\r\n                background: var(--v-gray-base);\r\n            }\r\n        }\r\n        // iOS Safari 向け\r\n        @supports (-webkit-touch-callout: none) {\r\n            @include smartphone-horizontal {\r\n                &::-webkit-scrollbar {\r\n                    width: 0.1px;\r\n                    -webkit-appearance: none;\r\n                }\r\n            }\r\n            @include smartphone-vertical {\r\n                &::-webkit-scrollbar {\r\n                    width: 0.1px;\r\n                    -webkit-appearance: none;\r\n                }\r\n            }\r\n        }\r\n\r\n        .hashtag-heading {\r\n            display: flex;\r\n            align-items: center;\r\n            font-weight: bold;\r\n            padding-left: 8px;\r\n            padding-right: 4px;\r\n            @include smartphone-horizontal {\r\n                padding-left: 4px;\r\n                padding-right: 2px;\r\n            }\r\n\r\n            &__text {\r\n                display: flex;\r\n                align-items: center;\r\n                flex-grow: 1;\r\n                font-size: 14px;\r\n            }\r\n\r\n            &__add-button {\r\n                display: flex;\r\n                align-items: center;\r\n                font-size: 13px;\r\n                padding: 4px 8px;\r\n                border-radius: 5px;\r\n                outline: none;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n\r\n        .hashtag-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n\r\n            .hashtag {\r\n                display: flex;\r\n                position: relative !important;\r\n                align-items: center;\r\n                padding-top: 1.5px;\r\n                padding-bottom: 1.5px;\r\n                padding-left: 8px;\r\n                padding-right: 4px;\r\n                border-radius: 7px;\r\n                transition: background-color 0.15s ease;\r\n                cursor: pointer;\r\n                @include smartphone-horizontal {\r\n                    padding-top: 0px;\r\n                    padding-bottom: 0px;\r\n                    padding-left: 4px;\r\n                    padding-right: 2px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    padding-top: 0px;\r\n                    padding-bottom: 0px;\r\n                }\r\n                &:first-of-type {\r\n                    margin-top: 6px;\r\n                    @include smartphone-vertical {\r\n                        margin-top: 0px;\r\n                    }\r\n                }\r\n                &:hover {\r\n                    background: rgba(255, 255, 255, 10%);\r\n                }\r\n                // タッチデバイスで hover を無効にする\r\n                @media (hover: none) {\r\n                    &:hover {\r\n                        background: transparent;\r\n                    }\r\n                }\r\n\r\n                &--editing {\r\n                    &:hover {\r\n                        background: transparent;\r\n                    }\r\n                    .hashtag__input {\r\n                        box-shadow: rgba(79, 130, 230, 60%) 0 0 0 3.5px;\r\n                        cursor: text;\r\n                    }\r\n                }\r\n\r\n                &__input {\r\n                    display: block;\r\n                    flex-grow: 1;\r\n                    border-radius: 2px;\r\n                    color: var(--v-twitter-lighten2);\r\n                    opacity: 1;\r\n                    outline: none;\r\n                    cursor: pointer;\r\n                    transition: box-shadow 0.09s ease;\r\n                    margin-right: 4px;\r\n                    font-size: 12.5px;\r\n                    // iOS Safari でフォーカス時にズームされる問題への対処\r\n                    @supports (-webkit-touch-callout: none) {\r\n                        @include smartphone-horizontal {\r\n                            position: absolute !important;\r\n                            left: -26px !important;\r\n                            width: calc(100% - 6px);\r\n                            margin-right: 0px;\r\n                            font-size: 16px;\r\n                            transform: scale(0.78125);\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            position: absolute !important;\r\n                            left: -26px !important;\r\n                            width: calc(100% - 21px);\r\n                            margin-right: 0px;\r\n                            font-size: 16px;\r\n                            transform: scale(0.78125);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                &__edit-button {\r\n                    margin-left: auto;\r\n                }\r\n                &__edit-button, &__delete-button, &__sort-handle {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    width: 19px;\r\n                    height: 27px;\r\n                    border-radius: 5px;\r\n                    outline: none;\r\n                    cursor: pointer;\r\n                    @include smartphone-vertical {\r\n                        width: 25px;\r\n                    }\r\n                }\r\n                &__sort-handle {\r\n                    cursor: move;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .twitter-account-list {\r\n        position: absolute;\r\n        left: 12px;\r\n        right: 12px;\r\n        bottom: 48px;\r\n        max-height: calc(100vh - 137px);\r\n        max-height: calc(100dvh - 137px);\r\n        border-radius: 7px;\r\n        // スクロールバーが表示されると角が丸くなくなる問題への対処\r\n        clip-path: inset(0% 0% 0% 0% round 7px);\r\n        background: var(--v-background-lighten2);\r\n        box-shadow: 0px 3px 4px rgba(0, 0, 0, 53%);\r\n        transition: opacity 0.15s ease, visibility 0.15s ease;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        overflow-y: auto;\r\n        z-index: 3;\r\n        @include tablet-vertical {\r\n            left: 24px;\r\n            right: 24px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            left: 8px;\r\n            right: 8px;\r\n            bottom: 40px;\r\n            max-height: calc(100vh - 82px);\r\n            max-height: calc(100dvh - 82px);\r\n            border-radius: 6px;\r\n            clip-path: inset(0% 0% 0% 0% round 6px);\r\n        }\r\n        @include smartphone-vertical {\r\n            bottom: 32px;\r\n            max-height: calc(100% - 40px);\r\n            border-radius: 6px;\r\n            clip-path: inset(0% 0% 0% 0% round 6px);\r\n        }\r\n        &--display {\r\n            opacity: 1;\r\n            visibility: visible;\r\n        }\r\n        &::-webkit-scrollbar-track {\r\n            background: var(--v-background-lighten2);\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n                background: var(--v-gray-base);\r\n            &:hover {\r\n                background: var(--v-gray-base);\r\n            }\r\n        }\r\n\r\n        .twitter-account {\r\n            display: flex;\r\n            align-items: center;\r\n            padding: 12px 12px;\r\n            border-radius: 7px;\r\n            user-select: none;\r\n            cursor: pointer;\r\n            @include smartphone-horizontal {\r\n                padding: 8px 12px;\r\n            }\r\n            @include smartphone-vertical {\r\n                padding: 8px 12px;\r\n            }\r\n\r\n            &__icon {\r\n                display: block;\r\n                width: 50px;\r\n                height: 50px;\r\n                border-radius: 50%;\r\n                @include smartphone-horizontal {\r\n                    width: 36px;\r\n                    height: 36px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    width: 36px;\r\n                    height: 36px;\r\n                }\r\n            }\r\n            &__info {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex-grow: 1;\r\n                min-width: 0;\r\n                margin-left: 12px;\r\n            }\r\n            &__name {\r\n                font-size: 17px;\r\n                font-weight: bold;\r\n                white-space: nowrap;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                @include smartphone-horizontal {\r\n                    font-size: 14px;\r\n                    line-height: 1.3;\r\n                }\r\n                @include smartphone-vertical {\r\n                    font-size: 14px;\r\n                    line-height: 1.3;\r\n                }\r\n            }\r\n            &__screen-name {\r\n                color: var(--v-text-darken1);\r\n                font-size: 14px;\r\n                @include smartphone-horizontal {\r\n                    font-size: 13px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    font-size: 13px;\r\n                }\r\n            }\r\n            &__check {\r\n                flex-shrink: 0;\r\n                color: var(--v-twitter-lighten1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Twitter.vue?vue&type=template&id=7fb509ad&scoped=true\"\nimport script from \"./Twitter.vue?vue&type=script&lang=ts\"\nexport * from \"./Twitter.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Twitter.vue?vue&type=style&index=0&id=7fb509ad&prod&lang=scss\"\nimport style1 from \"./Twitter.vue?vue&type=style&index=1&id=7fb509ad&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7fb509ad\",\n  null\n  \n)\n\nexport default component.exports","\r\nimport Message from '@/message';\r\nimport APIClient from '@/services/APIClient';\r\n\r\n\r\nclass Captures {\r\n\r\n    /**\r\n     * キャプチャをサーバーにアップロードし保存する\r\n     * @param blob キャプチャ画像の Blob\r\n     * @param filename サーバーに保存するときのファイル名\r\n     */\r\n    static async uploadCapture(blob: Blob, filename: string): Promise<void> {\r\n\r\n        // キャプチャ画像の File オブジェクト (= Blob) を FormData に入れる\r\n        // multipart/form-data で送るために必要\r\n        // ref: https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/\r\n        const form_data = new FormData();\r\n        form_data.append('image', blob, filename);\r\n\r\n        // API リクエストを実行\r\n        const response = await APIClient.post('/captures', form_data, {headers: {'Content-Type': 'multipart/form-data'}});\r\n\r\n        // エラー処理\r\n        if (response.type === 'error') {\r\n            switch (response.data.detail) {\r\n                case 'Permission denied to save the file': {\r\n                    Message.error('キャプチャのアップロードに失敗しました。保存先フォルダに書き込み権限がありません。');\r\n                    break;\r\n                }\r\n                case 'No space left on the device': {\r\n                    Message.error('キャプチャのアップロードに失敗しました。保存先フォルダに空き容量がありません。');\r\n                    break;\r\n                }\r\n                case 'Unexpected error occurred while saving the file': {\r\n                    Message.error('キャプチャのアップロードに失敗しました。保存中に予期しないエラーが発生しました。');\r\n                    break;\r\n                }\r\n                default: {\r\n                    APIClient.showGenericError(response, 'キャプチャのアップロードに失敗しました。');\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: キャプチャ管理機能の実装時に API を追加する\r\n}\r\n\r\nexport default Captures;\r\n","\r\nimport { Buffer } from 'buffer';\r\n\r\nimport { convertBlobToPng, copyBlobToClipboard } from 'copy-image-clipboard';\r\nimport DPlayer from 'dplayer';\r\nimport * as piexif from 'piexifjs';\r\n\r\nimport APIClient from '@/services/APIClient';\r\nimport Captures from '@/services/Captures';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils, { dayjs } from '@/utils';\r\n\r\n\r\n// キャプチャに書き込む EXIF メタデータのインターフェイス\r\ninterface ICaptureExifData {\r\n    captured_at: string;\r\n    captured_playback_position: number;\r\n    network_id: number;\r\n    service_id: number;\r\n    event_id: number;\r\n    title: string;\r\n    description: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    duration: number;\r\n    caption_text: string | null;\r\n    is_caption_composited: boolean;\r\n    is_comment_composited: boolean;\r\n}\r\n\r\n// CaptureManager.setEXIFDataToCapture() のオプションのインターフェイス\r\ninterface ISetEXIFDataToCaptureOptions {\r\n    network_id: number;\r\n    service_id: number;\r\n    event_id: number;\r\n    title: string;\r\n    description: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    duration: number;\r\n    caption_text: string | null;\r\n    is_caption_composited: boolean;\r\n    is_comment_composited: boolean;\r\n}\r\n\r\n// Web フォントを Base64 化したデータ (コメントを SVG の foreignObject としてレンダリングする際に必要)\r\nlet web_font_noto_sans_base64: string | null = null;\r\nlet web_font_open_sans_base64: string | null = null;\r\n\r\n\r\nclass CaptureManager {\r\n\r\n    private player: DPlayer;\r\n    private player_container: HTMLElement;\r\n    private captured_callback: (blob: Blob, filename: string) => void;\r\n    private capture_button: HTMLDivElement;\r\n    private comment_capture_button: HTMLDivElement;\r\n    private settings_store = useSettingsStore();\r\n\r\n    constructor(options: {\r\n        player: DPlayer;\r\n        captured_callback: (blob: Blob, filename: string) => void;\r\n    }) {\r\n        this.player = options.player;\r\n        this.player_container = this.player.container;\r\n        this.captured_callback = options.captured_callback;\r\n\r\n        // コメント付きキャプチャボタンの HTML を追加\r\n        // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\r\n        // この後に通常のキャプチャボタンが insert されるので、実際は左から2番目\r\n        // TODO: ボタンのデザインをコメント付きだと分かるようなものに変更する\r\n        this.player_container.querySelector('.dplayer-icons.dplayer-icons-right')!.insertAdjacentHTML('afterbegin', `\r\n            <div class=\"dplayer-icon dplayer-comment-capture-icon\" aria-label=\"コメントを付けてキャプチャ\"\r\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\r\n                <span class=\"dplayer-icon-content\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\r\n                </span>\r\n            </div>\r\n        `);\r\n\r\n        // キャプチャボタンの HTML を追加\r\n        // 標準のスクリーンショット機能は貧弱なので、あえて独自に実装している（そのほうが自由度も高くてやりやすい）\r\n        // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\r\n        this.player_container.querySelector('.dplayer-icons.dplayer-icons-right')!.insertAdjacentHTML('afterbegin', `\r\n            <div class=\"dplayer-icon dplayer-capture-icon\" aria-label=\"キャプチャ\"\r\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\r\n                <span class=\"dplayer-icon-content\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\r\n                </span>\r\n            </div>\r\n        `);\r\n\r\n        this.comment_capture_button = this.player_container.querySelector('.dplayer-comment-capture-icon')!;\r\n        this.capture_button = this.player_container.querySelector('.dplayer-capture-icon')!;\r\n\r\n        // もし Web フォントがダウンロードされていないならダウンロード\r\n        // コメントのレンダリングに最低限必要なウェイトのみダウンロードする\r\n        // 待つ必要はないので非同期で実行\r\n        // ref: https://stackoverflow.com/a/66969479/17124142\r\n        (async () => {\r\n            const web_font_noto_sans_url = 'https://cdn.jsdelivr.net/npm/noto-sans-japanese@1.0.0/fonts/NotoSansJP-Bold.woff2';\r\n            const web_font_open_sans_url = 'https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-700.woff2';\r\n            const base64_font_prefix = 'data:font/woff2;base64,';\r\n            if (web_font_noto_sans_base64 === null) {\r\n                const web_font_noto_sans: ArrayBuffer = (await APIClient.get(web_font_noto_sans_url, {\r\n                    responseType: 'arraybuffer',\r\n                })).data;\r\n                // Buffer で受け取ったデータを Base64 に変換\r\n                web_font_noto_sans_base64 = base64_font_prefix + Buffer.from(web_font_noto_sans).toString('base64');\r\n            }\r\n            if (web_font_open_sans_base64 === null) {\r\n                const web_font_open_sans: ArrayBuffer = (await APIClient.get(web_font_open_sans_url, {\r\n                    responseType: 'arraybuffer',\r\n                })).data;\r\n                // Buffer で受け取ったデータを Base64 に変換\r\n                web_font_open_sans_base64 = base64_font_prefix + Buffer.from(web_font_open_sans).toString('base64');\r\n            }\r\n        })();\r\n    }\r\n\r\n\r\n    /**\r\n     * 映像をキャプチャして保存する\r\n     * 映像のみと字幕付き (字幕表示時のみ) の両方のキャプチャを生成できる\r\n     * @param with_comments キャプチャにコメントを合成するかどうか\r\n     */\r\n    public async captureAndSave(with_comments: boolean): Promise<void> {\r\n\r\n        const total_time = Utils.time();\r\n\r\n        // チャンネル情報を取得 (ライブ視聴画面のみ、ビデオ視聴画面では null になる)\r\n        const channels_store = useChannelsStore();\r\n        const channel = channels_store.is_showing_live ? channels_store.channel.current : null;\r\n\r\n        // ***** バリデーション *****\r\n\r\n        // ラジオチャンネルを視聴している場合 (当然映像がないのでキャプチャできない)\r\n        if (channel !== null && channel.is_radiochannel === true) {\r\n            this.player.notice('ラジオチャンネルはキャプチャできません。', undefined, undefined, '#FF6F6A');\r\n            return;\r\n        }\r\n\r\n        // まだ映像の表示準備が終わっていない (Canvas の幅/高さが 0 のまま)\r\n        if (this.player.video.videoWidth === 0 && this.player.video.videoHeight === 0) {\r\n            this.player.notice('読み込み中はキャプチャできません。', undefined, undefined, '#FF6F6A');\r\n            return;\r\n        }\r\n\r\n        // コメントが表示されていないのにコメント付きキャプチャしようとした\r\n        if (with_comments === true && this.player.danmaku!.showing === false) {\r\n            this.player.notice('コメントを付けてキャプチャするには、コメント表示をオンにしてください。', undefined, undefined, '#FF6F6A');\r\n            return;\r\n        }\r\n\r\n        // ***** キャプチャの下準備 *****\r\n\r\n        // キャプチャ中はキャプチャボタンをハイライトする\r\n        this.addHighlight(with_comments);\r\n\r\n        // ファイル名（拡張子なし）\r\n        // TODO: ファイル名パターンを変更できるようにする\r\n        const filename_base = `Capture_${dayjs().format('YYYYMMDD-HHmmss')}`;\r\n        const filename = `${filename_base}.jpg`;  // 字幕なしキャプチャ\r\n        const filename_caption = `${filename_base}_caption.jpg`;  // 字幕ありキャプチャ\r\n\r\n        // 字幕・文字スーパーの Canvas を取得\r\n        // getRawCanvas() で映像と同じ解像度の Canvas が取得できる\r\n        const aribb24_caption = this.player.plugins.aribb24Caption!;\r\n        const aribb24_superimpose = this.player.plugins.aribb24Superimpose ?? null;\r\n        const caption_canvas = aribb24_caption.getRawCanvas()!;\r\n        const superimpose_canvas = aribb24_superimpose?.getRawCanvas() ?? null;\r\n\r\n        // 字幕が表示されているか\r\n        const is_caption_showing = ((aribb24_caption as any).isShowing === true && aribb24_caption.isPresent());\r\n\r\n        // 文字スーパーが表示されているか\r\n        const is_superimpose_showing = (aribb24_superimpose && (aribb24_superimpose as any).isShowing === true && aribb24_superimpose.isPresent());\r\n\r\n        // 字幕が表示されている場合、表示中の字幕のテキストを取得\r\n        // 取得した字幕のテキストは、キャプチャに字幕が合成されているかに関わらず、常に EXIF メタデータに書き込まれる\r\n        // 字幕が表示されていない場合は null を入れ、キャプチャしたシーンで字幕が表示されていなかったことを明示する\r\n        const caption_text = is_caption_showing ? aribb24_caption.getTextContent() : null;\r\n\r\n        // EXIF に書き込むメタデータを取得する\r\n        // ライブ視聴画面では、番組情報から EXIF に書き込むメタデータを取得する\r\n        let exif_options: ISetEXIFDataToCaptureOptions;\r\n        if (channel !== null) {\r\n            exif_options = {\r\n                network_id: channel.network_id,\r\n                service_id: channel.service_id,\r\n                event_id: channel.program_present?.event_id ?? -1,\r\n                title: channel.program_present?.title ?? '放送休止',\r\n                description: channel.program_present?.description ?? '',\r\n                start_time: channel.program_present?.start_time ?? '2000-01-01T00:00:00+09:00',\r\n                end_time: channel.program_present?.end_time ?? '2000-01-01T00:00:00+09:00',\r\n                duration: channel.program_present?.duration ?? 0,\r\n                caption_text: caption_text,\r\n                is_caption_composited: false,  // 後で上書きされる\r\n                is_comment_composited: false,  // 後で上書きされる\r\n            };\r\n        // ビデオ視聴画面では、録画番組情報から EXIF に書き込むメタデータを取得する\r\n        } else {\r\n            // TODO\r\n            exif_options = {\r\n                network_id: -1,\r\n                service_id: -1,\r\n                event_id: -1,\r\n                title: '録画番組',\r\n                description: '',\r\n                start_time: '2000-01-01T00:00:00+09:00',\r\n                end_time: '2000-01-01T00:00:00+09:00',\r\n                duration: 0,\r\n                caption_text: caption_text,\r\n                is_caption_composited: false,  // 後で上書きされる\r\n                is_comment_composited: false,  // 後で上書きされる\r\n            };\r\n        }\r\n\r\n        // エクスポートして保存する共通処理\r\n        const export_and_save = async (\r\n            canvas: OffscreenCanvas | HTMLCanvasElement,\r\n            filename: string,\r\n            exif_options: ISetEXIFDataToCaptureOptions,\r\n        ): Promise<Blob | false> => {\r\n\r\n            // Canvas を Blob にエクスポート\r\n            const time = Utils.time();\r\n            let blob: Blob;\r\n            try {\r\n                blob = await this.exportToBlob(canvas);\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.player.notice('キャプチャの保存に失敗しました。', undefined, undefined, '#FF6F6A');\r\n                return false;\r\n            }\r\n            console.log('[CaptureManager] Export to Blob:', Utils.mathFloor(Utils.time() - time, 3), 'sec');\r\n\r\n            // キャプチャに番組情報などのメタデータ (EXIF) をセット\r\n            blob = await this.setEXIFDataToCapture(blob, exif_options);\r\n\r\n            // キャプチャの保存先: ブラウザでダウンロード or 両方\r\n            if (['Browser', 'Both'].includes(this.settings_store.settings.capture_save_mode)) {\r\n                Utils.downloadBlobData(blob, filename);\r\n            }\r\n\r\n            // キャプチャの保存先: KonomiTV サーバーにアップロード or 両方\r\n            // 時間がかかるし完了を待つ必要がないので非同期\r\n            if (['UploadServer', 'Both'].includes(this.settings_store.settings.capture_save_mode)) {\r\n                Captures.uploadCapture(blob, filename);\r\n            }\r\n\r\n            return blob;\r\n        };\r\n\r\n        // ***** 映像のキャプチャ *****\r\n\r\n        // null はまだキャプチャしていないことを、false はキャプチャに失敗したことを表す\r\n        let capture_normal: {blob: Blob, filename: string} | null | false = null;\r\n        let capture_caption: {blob: Blob, filename: string} | null | false = null;\r\n\r\n        // 映像の ImageBitmap を取得\r\n        const image_bitmap = await createImageBitmap(this.player.video);\r\n\r\n        // もし映像以外に追加で合成するものがないなら、処理の高速化のために ImageBitmap をそのまま Canvas に転送して Blob 化する\r\n        // コメントキャプチャではない & 文字スーパーが表示されていない (=合成処理を行う必要がない) &\r\n        // (字幕が表示されていない or 字幕が表示されているが合成しないように設定されている) 場合\r\n        // コメント付きキャプチャではなく、かつ字幕のない番組では大半がここの処理を通ることになる\r\n        if (with_comments === false && is_superimpose_showing === false &&\r\n            (is_caption_showing === false || this.settings_store.settings.capture_caption_mode === 'VideoOnly')) {\r\n\r\n            // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\r\n            const bitmap_canvas = ('OffscreenCanvas' in window) ?\r\n                new OffscreenCanvas(image_bitmap.width, image_bitmap.height) : document.createElement('canvas');\r\n            bitmap_canvas.width = image_bitmap.width;  // HTMLCanvasElement でのフォールバック用\r\n            bitmap_canvas.height = image_bitmap.height;  // HTMLCanvasElement でのフォールバック用\r\n            const canvas_context = bitmap_canvas.getContext('bitmaprenderer', {alpha: false}) as ImageBitmapRenderingContext;\r\n\r\n            // Canvas に映像がキャプチャされた ImageBitmap を転送\r\n            // 描画ではなくゼロコピーで転送しているらしい…？\r\n            canvas_context.transferFromImageBitmap(image_bitmap);\r\n            image_bitmap.close();  // 今後使うことはないので明示的に閉じる\r\n\r\n            // ファイル名\r\n            // 保存モードが「字幕キャプチャのみ」のとき (=字幕キャプチャのみをキャプチャする設定にしていたが、字幕がそもそもないとき) は、\r\n            // 便宜上字幕ありキャプチャと同じファイル名で保存する\r\n            const filename_real =\r\n                (this.settings_store.settings.capture_caption_mode === 'CompositingCaption') ? filename_caption : filename;\r\n\r\n            // Blob にエクスポートして保存\r\n            // false が返ってきた場合は失敗を意味する\r\n            const blob = await export_and_save(bitmap_canvas, filename_real, {\r\n                ...exif_options,\r\n                is_caption_composited: false,\r\n                is_comment_composited: false,\r\n            });\r\n            if (blob !== false) {\r\n                capture_normal = {blob: blob, filename: filename_real};\r\n            } else {\r\n                capture_normal = false;  // キャプチャのエクスポートに失敗\r\n            }\r\n\r\n            // キャプチャの Blob をコールバック関数に渡す\r\n            // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\r\n            if (capture_normal !== false) {\r\n                this.captured_callback(capture_normal.blob, capture_normal.filename);\r\n            }\r\n\r\n        // ***** 通常実行 (Canvas にキャプチャ以外のデータを重ねて描画する必要があるケース) *****\r\n        } else {\r\n\r\n            const promises: Promise<void>[] = [];\r\n\r\n            // キャプチャ用の Canvas を初期化\r\n            // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\r\n            const canvas = ('OffscreenCanvas' in window) ?\r\n                new OffscreenCanvas(this.player.video.videoWidth, this.player.video.videoHeight) : document.createElement('canvas');\r\n            canvas.width = this.player.video.videoWidth;  // HTMLCanvasElement でのフォールバック用\r\n            canvas.height = this.player.video.videoHeight;  // HTMLCanvasElement でのフォールバック用\r\n            const canvas_context = canvas.getContext('2d', {\r\n                alpha: false,\r\n                desynchronized: true,\r\n                willReadFrequently: false,\r\n            }) as OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\r\n\r\n            // Canvas に映像がキャプチャされた ImageBitmap を描画\r\n            canvas_context.drawImage(image_bitmap, 0, 0, canvas.width, canvas.height);\r\n\r\n            // 文字スーパーを描画 (表示されている場合)\r\n            // 文字スーパー自体が稀だし、文字スーパーなしでキャプチャ撮りたいユースケースはない…はず\r\n            if (superimpose_canvas && is_superimpose_showing === true) {\r\n                canvas_context.drawImage(superimpose_canvas, 0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            // コメント付きキャプチャ: 追加でニコニコ実況のコメントを描画\r\n            let comments_image: HTMLImageElement | null = null;\r\n            if (with_comments === true) {\r\n                comments_image = await this.createCommentsImage();\r\n                await this.drawComments(canvas, canvas_context, comments_image);\r\n            }\r\n\r\n            // ***** 映像のみのキャプチャを保存 *****\r\n\r\n            // 字幕表示時のキャプチャの保存モード: 映像のみ or 両方\r\n            // 保存モードが「字幕キャプチャのみ」になっているが字幕が表示されていない場合も実行する\r\n            if (['VideoOnly', 'Both'].includes(this.settings_store.settings.capture_caption_mode) || is_caption_showing === false) {\r\n\r\n                promises.push((async () => {\r\n\r\n                    // ファイル名\r\n                    // 保存モードが「字幕キャプチャのみ」のとき (=字幕キャプチャのみをキャプチャする設定にしていたが、字幕がそもそもないとき) は、\r\n                    // 便宜上字幕ありキャプチャと同じファイル名で保存する\r\n                    const filename_real =\r\n                        (this.settings_store.settings.capture_caption_mode === 'CompositingCaption') ? filename_caption : filename;\r\n\r\n                    // Blob にエクスポートして保存\r\n                    const blob = await export_and_save(canvas, filename_real, {\r\n                        ...exif_options,\r\n                        is_caption_composited: false,\r\n                        is_comment_composited: with_comments,\r\n                    });\r\n                    if (blob !== false) {\r\n                        capture_normal = {blob: blob, filename: filename_real};\r\n                    } else {\r\n                        capture_normal = false;  // キャプチャのエクスポートに失敗\r\n                    }\r\n\r\n                    // キャプチャの Blob をコールバック関数に渡す\r\n                    // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\r\n                    if (capture_normal !== false) {\r\n                        this.captured_callback(capture_normal.blob, capture_normal.filename);\r\n                    }\r\n\r\n                })());\r\n            }\r\n\r\n            // ***** 字幕付きのキャプチャを保存 *****\r\n\r\n            // 字幕表示時のキャプチャの保存モード: 字幕キャプチャのみ or 両方\r\n            // 字幕が表示されているときのみ実行（字幕が表示されていないのにやっても意味がない）\r\n            if (['CompositingCaption', 'Both'].includes(this.settings_store.settings.capture_caption_mode) && is_caption_showing === true) {\r\n\r\n                promises.push((async () => {\r\n\r\n                    // コメント付きキャプチャ: 映像と文字スーパーの描画をやり直す\r\n                    // すでに字幕なしキャプチャを生成する過程でコメントを描画してしまっているため、映像描画からやり直す必要がある\r\n                    if (with_comments === true) {\r\n                        canvas_context.drawImage(image_bitmap, 0, 0, canvas.width, canvas.height);\r\n                        if (superimpose_canvas && is_superimpose_showing === true) {\r\n                            canvas_context.drawImage(superimpose_canvas, 0, 0, canvas.width, canvas.height);\r\n                        }\r\n                    }\r\n                    image_bitmap.close();  // 今後使うことはないので明示的に閉じる\r\n\r\n                    // 字幕を重ねて描画\r\n                    canvas_context.drawImage(caption_canvas, 0, 0, canvas.width, canvas.height);\r\n\r\n                    // コメント付きキャプチャ: 追加でニコニコ実況のコメントを描画\r\n                    if (with_comments === true && comments_image !== null) {\r\n                        await this.drawComments(canvas, canvas_context, comments_image);\r\n                    }\r\n\r\n                    // Blob にエクスポートして保存\r\n                    const blob = await export_and_save(canvas, filename_caption, {\r\n                        ...exif_options,\r\n                        is_caption_composited: true,\r\n                        is_comment_composited: with_comments,\r\n                    });\r\n                    if (blob !== false) {\r\n                        capture_caption = {blob: blob, filename: filename_caption};\r\n                    } else {\r\n                        capture_caption = false;  // キャプチャのエクスポートに失敗\r\n                    }\r\n\r\n                    // キャプチャの Blob をコールバック関数に渡す\r\n                    // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\r\n                    if (capture_caption !== false) {\r\n                        // 字幕表示時のキャプチャの保存モードが「両方 (Both)」のときのみ、映像のみのキャプチャの生成が終わるまで待ってから実行\r\n                        // 必ずキャプチャリストへの追加が [映像のみ] → [字幕付き] の順序で行われるようにする\r\n                        if (this.settings_store.settings.capture_caption_mode === 'Both') {\r\n                            while (capture_normal === null) {\r\n                                // Blob (成功) か false (失敗) が capture_normal に入るまでループ\r\n                                await Utils.sleep(0.01);\r\n                            }\r\n                        }\r\n                        this.captured_callback(capture_caption.blob, capture_caption.filename);\r\n                    }\r\n\r\n                })());\r\n            }\r\n\r\n            // すべてのキャプチャ処理が終わるまで待つ\r\n            await Promise.all(promises);\r\n        }\r\n\r\n        console.log('[CaptureManager] Total:', Utils.mathFloor(Utils.time() - total_time, 3), 'sec');\r\n\r\n        // キャプチャボタンのハイライトを削除する\r\n        this.removeHighlight(with_comments);\r\n\r\n        // Twitter タブのキャプチャリストに送る処理が最優先なので、コールバックを実行しきった後に時間のかかるクリップボードへのコピーを行う\r\n        for (const capture of [capture_normal, capture_caption]) {\r\n\r\n            // クリップボードへのコピーが有効なら、キャプチャの Blob をクリップボードにコピー\r\n            // PNG 以外は受け付けないそうなので、JPEG を PNG に変換してからコピーしている\r\n            if (this.settings_store.settings.capture_copy_to_clipboard && capture !== null && typeof capture === 'object') {\r\n                try {\r\n                    await copyBlobToClipboard(await convertBlobToPng(capture.blob));\r\n                } catch (error) {\r\n                    this.player.notice('クリップボードへのキャプチャのコピーに失敗しました。', undefined, undefined, '#FF6F6A');\r\n                    console.error(error);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * キャプチャボタンをハイライトする\r\n     * @param with_comments コメント付きキャプチャボタンをハイライトするか\r\n     */\r\n    private addHighlight(with_comments: boolean = false): void {\r\n        if (with_comments) {\r\n            this.comment_capture_button.classList.add('dplayer-capturing');\r\n        } else {\r\n            this.capture_button.classList.add('dplayer-capturing');\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * キャプチャボタンのハイライトを外す\r\n     * @param with_comments コメント付きキャプチャボタンのハイライトを外すか\r\n     */\r\n    private removeHighlight(with_comments: boolean = false): void {\r\n        if (with_comments) {\r\n            this.comment_capture_button.classList.remove('dplayer-capturing');\r\n        } else {\r\n            this.capture_button.classList.remove('dplayer-capturing');\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * DPlayer から取得したコメント HTML を SVG 画像の HTMLImageElement に変換する\r\n     * ZenzaWatch と html-to-image を参考に実装した\r\n     * ref: https://github.com/bubkoo/html-to-image/blob/v1.11.11/src/util.ts#L202-L224\r\n     * ref: https://github.com/segabito/ZenzaWatch/blob/master/packages/lib/src/dom/VideoCaptureUtil.js\r\n     * ref: https://web.archive.org/web/2/https://developer.mozilla.org/ja/docs/Web/HTML/Canvas/Drawing_DOM_objects_into_a_canvas\r\n     * @param comments_html DPlayer から取得したコメント HTML\r\n     * @param width SVG 画像の幅\r\n     * @param height SVG 画像の高さ\r\n     * @returns SVG 画像の HTMLImageElement\r\n     */\r\n    private async commentsHTMLtoSVGImage(comments_html: string, width: number, height: number): Promise<HTMLImageElement> {\r\n\r\n        // SVG の foreignObject を使い、HTML をそのまま SVG に埋め込む\r\n\r\n        // SVG を作成\r\n        const xmlns = 'http://www.w3.org/2000/svg';\r\n        const svg = document.createElementNS(xmlns, 'svg');\r\n        svg.setAttribute('width', `${width}`);\r\n        svg.setAttribute('height', `${height}`);\r\n        svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\r\n\r\n        // SVG に foreignObject を追加\r\n        const foreignObject = document.createElementNS(xmlns, 'foreignObject');\r\n        foreignObject.setAttribute('width', '100%');\r\n        foreignObject.setAttribute('height', '100%');\r\n        foreignObject.setAttribute('x', '0');\r\n        foreignObject.setAttribute('y', '0');\r\n        foreignObject.setAttribute('externalResourcesRequired', 'true');\r\n        svg.appendChild(foreignObject);\r\n\r\n        // foreignObject にコンテナ要素を追加\r\n        const body = document.createElement('body');\r\n        foreignObject.appendChild(body);\r\n\r\n        // コンテナ要素に CSS と Web フォントの定義を追加\r\n        // SVG なので、CSS はインラインでないと適用されない…\r\n        // DPlayer の danmaku.scss の内容のうち、描画に必要なプロパティのみを列挙 (追加変更したものもある)\r\n        // ref: https://github.com/tsukumijima/DPlayer/blob/master/src/css/danmaku.scss\r\n        const style = document.createElement('style');\r\n        style.appendChild(document.createTextNode(`\r\n            @font-face {\r\n                font-family: 'Noto Sans JP';\r\n                font-weight: bold;\r\n                src: url(${web_font_noto_sans_base64}) format('woff2');\r\n            }\r\n            @font-face {\r\n                font-family: 'Open Sans';\r\n                font-weight: bold;\r\n                src: url(${web_font_open_sans_base64}) format('woff2');\r\n            }\r\n            .dplayer-danmaku {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                color: #fff;\r\n                font-size: 29px;\r\n                font-family: 'Open Sans', 'Hiragino Sans', 'Noto Sans JP', sans-serif;\r\n            }\r\n            .dplayer-danmaku .dplayer-danmaku-item {\r\n                display: inline-block;\r\n                line-height: 1;\r\n                font-weight: bold;\r\n                font-size: var(--dplayer-danmaku-font-size);\r\n                opacity: var(--dplayer-danmaku-opacity);\r\n                text-shadow: 1.2px 1.2px 4px rgba(0, 0, 0, 0.9);\r\n                white-space: nowrap;\r\n            }\r\n            .dplayer-danmaku .dplayer-danmaku-item--demo {\r\n                position: absolute;\r\n                visibility: hidden;\r\n            }\r\n            .dplayer-danmaku .dplayer-danmaku-item span {\r\n                box-decoration-break: clone;\r\n                -webkit-box-decoration-break: clone;\r\n            }\r\n            .dplayer-danmaku .dplayer-danmaku-item.dplayer-danmaku-size-big {\r\n                font-size: calc(var(--dplayer-danmaku-font-size) * 1.25);\r\n            }\r\n            .dplayer-danmaku .dplayer-danmaku-item.dplayer-danmaku-size-small {\r\n                font-size: calc(var(--dplayer-danmaku-font-size) * 0.8);\r\n            }\r\n            .dplayer-danmaku .dplayer-danmaku-right {\r\n                position: absolute;\r\n                right: 0;\r\n            }\r\n            .dplayer-danmaku .dplayer-danmaku-top, .dplayer-danmaku .dplayer-danmaku-bottom {\r\n                position: absolute;\r\n                left: 50%;\r\n                transform: translateX(-50%);\r\n            }\r\n        `));\r\n        body.appendChild(style);\r\n\r\n        // コンテナ要素にコメントの HTML を追加\r\n        const temp = document.createElement('div');\r\n        temp.innerHTML = comments_html;\r\n        body.appendChild(temp.childNodes[0]);\r\n\r\n        // Data URL 化して Image オブジェクトにする\r\n        const image = new Image();\r\n        const serialized_svg =  new XMLSerializer().serializeToString(svg);\r\n        image.src = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(serialized_svg)}`;\r\n\r\n        // 画像を読み込んでデコードしてから返す\r\n        await new Promise((resolve, reject) => {\r\n            image.onload = resolve;\r\n            image.onerror = reject;\r\n        });\r\n        await image.decode();\r\n        return image;\r\n    }\r\n\r\n\r\n    /**\r\n     * DPlayer から表示中のコメントを取得し、SVG 画像の HTMLImageElement を作成する\r\n     * @returns 表示されているコメントが描画された HTMLImageElement\r\n     */\r\n    private async createCommentsImage(): Promise<HTMLImageElement> {\r\n\r\n        // コメントが表示されている要素の HTML を取得する\r\n        let comments_html = this.player.template.danmaku.outerHTML;\r\n\r\n        // HTML を取得するだけではスクロール中コメントの表示位置が特定できないため、HTML を修正する\r\n        for (const comment of this.player_container.querySelectorAll('.dplayer-danmaku-move')) { // コメントの数だけ置換\r\n            // スクロール中のコメントの表示座標を計算\r\n            const position = comment.getBoundingClientRect().left - this.player.video.getBoundingClientRect().left;\r\n            comments_html = comments_html.replace(/transform: translateX\\(.*?\\);/, `left: ${position}px;`)\r\n                .replaceAll('border: 2px solid #E64F97;', '');\r\n        }\r\n\r\n        // HTML を画像として取得\r\n        // SVG のサイズはコメントが表示されている要素に合わせる (そうしないとプレイヤー側と一致しない)\r\n        // SVG はベクター画像なので、リサイズしても画質が変わらないはず\r\n        return await this.commentsHTMLtoSVGImage(\r\n            comments_html,\r\n            this.player.template.danmaku.offsetWidth,\r\n            this.player.template.danmaku.offsetHeight,\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     * 現在表示されているニコニコ実況のコメントを Canvas に描画する\r\n     */\r\n    private async drawComments(\r\n        canvas: HTMLCanvasElement | OffscreenCanvas,\r\n        canvas_context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\r\n        comments_image: HTMLImageElement,\r\n    ): Promise<void> {\r\n\r\n        // コメント描画領域がコントロールの表示によりリサイズされている (=16:9でない) 場合も考慮して、コメント要素の offsetWidth から高さを求める\r\n        // 映像の横解像度 (ex: 1920) がコメント描画領域の幅 (ex: 1280) の何倍かの割合 (ex: 1.5 (150%))\r\n        const draw_scale_ratio = canvas.width / this.player.template.danmaku.offsetWidth;\r\n\r\n        // コメント描画領域の高さを映像の横解像度に合わせて（コメント描画領域のアスペクト比を維持したまま）拡大した値\r\n        // 映像の縦解像度が 1080 のとき、コントロールがコメント領域と被っていない or 表示されていないなら、この値は 1080 に近くなる\r\n        const draw_height = this.player.template.danmaku.offsetHeight * draw_scale_ratio;\r\n\r\n        canvas_context.drawImage(comments_image, 0, 0, canvas.width, draw_height);\r\n    }\r\n\r\n\r\n    /**\r\n     * Canvas もしくは OffscreenCanvas に描画されている画像を Blob に変換する\r\n     * JPEG 画像の品質は 99% にした方が若干 Blob 変換までの速度が速い (？)\r\n     * @param canvas Canvas もしくは OffscreenCanvas\r\n     * @returns Blob 化した画像\r\n     */\r\n    private async exportToBlob(canvas: HTMLCanvasElement | OffscreenCanvas): Promise<Blob> {\r\n        if ('OffscreenCanvas' in window && canvas instanceof OffscreenCanvas) {\r\n            return await canvas.convertToBlob({type: 'image/jpeg', quality: 0.99});\r\n        } else if (canvas instanceof HTMLCanvasElement) {\r\n            return new Promise((resolve, reject) => {\r\n                canvas.toBlob((blob) => {\r\n                    if (blob !== null) {\r\n                        resolve(blob);\r\n                    } else {\r\n                        reject(new Error('Failed to convert canvas to blob'));\r\n                    }\r\n                }, 'image/jpeg', 0.99);\r\n            });\r\n        }\r\n        // ここに来ることはあり得ない\r\n        throw new Error('Failed to convert canvas to blob');\r\n    }\r\n\r\n\r\n    /**\r\n     * キャプチャ画像に番組情報と撮影時刻、字幕やコメントが合成されているかどうかのメタデータ (EXIF) をセットする\r\n     * @param blob キャプチャ画像の Blob オブジェクト\r\n     * @param options EXIF にセットする番組情報データ・字幕テキスト・字幕が合成されているかどうか・コメントが合成されているかどうか\r\n     * @returns EXIF が追加されたキャプチャ画像の Blob オブジェクト\r\n     */\r\n    private async setEXIFDataToCapture(blob: Blob, options: ISetEXIFDataToCaptureOptions): Promise<Blob> {\r\n\r\n        // 番組開始時刻換算のキャプチャ時刻 (秒)\r\n        const captured_playback_position = dayjs().diff(dayjs(options.start_time), 'second', true);\r\n\r\n        // EXIF の XPComment 領域に入れるメタデータの JSON オブジェクト\r\n        // 撮影時刻とチャンネル・番組を一意に特定できる情報を入れる\r\n        const json: ICaptureExifData = {\r\n            captured_at: dayjs().format('YYYY-MM-DDTHH:mm:ss+09:00'),  // ISO8601 フォーマットのキャプチャ時刻\r\n            captured_playback_position: captured_playback_position,  // 番組開始時刻換算のキャプチャ時刻 (秒)\r\n            network_id: options.network_id,    // 番組が放送されたチャンネルのネットワーク ID\r\n            service_id: options.service_id,    // 番組が放送されたチャンネルのサービス ID\r\n            event_id: options.event_id,        // 番組のイベント ID\r\n            title: options.title,              // 番組タイトル\r\n            description: options.description,  // 番組概要\r\n            start_time: options.start_time,    // 番組開始時刻 (ISO8601 フォーマット)\r\n            end_time: options.end_time,        // 番組終了時刻 (ISO8601 フォーマット)\r\n            duration: options.duration,        // 番組長 (秒)\r\n            caption_text: options.caption_text,        // 字幕のテキスト (キャプチャした瞬間に字幕が表示されていなかったときは null)\r\n            is_caption_composited: options.is_caption_composited,  // 字幕が合成されているか\r\n            is_comment_composited: options.is_comment_composited,  // コメントが合成されているか\r\n        };\r\n\r\n        // 保存する EXIF メタデータを構築\r\n        // ref: 「カメラアプリで体感するWeb App」4.2\r\n        const datetime = dayjs().format('YYYY:MM:DD HH:mm:ss');  // すべてコロンで区切るのがポイント\r\n        const exif: piexif.IExif = {\r\n            '0th': {\r\n                // 必須らしいプロパティ\r\n                // とりあえずデフォルト値 (?) を設定しておく\r\n                [piexif.TagValues.ImageIFD.XResolution]: [72, 1],\r\n                [piexif.TagValues.ImageIFD.YResolution]: [72, 1],\r\n                [piexif.TagValues.ImageIFD.ResolutionUnit]: 2,\r\n                [piexif.TagValues.ImageIFD.YCbCrPositioning]: 1,\r\n                // 撮影時刻\r\n                [piexif.TagValues.ImageIFD.DateTime]: datetime,\r\n                // ソフトウェア名\r\n                [piexif.TagValues.ImageIFD.Software]: `KonomiTV version ${Utils.version}`,\r\n                // Microsoft 拡張のコメント領域（エクスプローラーで出てくるコメント欄と同じもの）\r\n                // ref: https://stackoverflow.com/a/66186660/17124142\r\n                [piexif.TagValues.ImageIFD.XPComment]: [...Buffer.from(JSON.stringify(json), 'ucs2')],\r\n            },\r\n            'Exif': {\r\n                // 必須らしいプロパティ\r\n                // とりあえずデフォルト値 (?) を設定しておく\r\n                [piexif.TagValues.ExifIFD.ExifVersion]: '0230',\r\n                [piexif.TagValues.ExifIFD.ComponentsConfiguration]: '\\x01\\x02\\x03\\x00',\r\n                [piexif.TagValues.ExifIFD.FlashpixVersion]: '0100',\r\n                [piexif.TagValues.ExifIFD.ColorSpace]: 1,\r\n                // 撮影時刻\r\n                [piexif.TagValues.ExifIFD.DateTimeOriginal]: datetime,\r\n                [piexif.TagValues.ExifIFD.DateTimeDigitized]: datetime,\r\n            },\r\n        };\r\n        const exif_string = piexif.dump(exif);  // バイナリ文字列に変換した EXIF データ\r\n\r\n        // piexifjs はバイナリ文字列か DataURL しか受け付けないので、Blob をバイナリ文字列に変換\r\n        const blob_string: string = await new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.onload = () => resolve(reader.result as string);\r\n            reader.onerror = reject;\r\n            reader.readAsBinaryString(blob);  // バイナリ文字列で読み込む\r\n        });\r\n\r\n        // 画像に EXIF を挿入\r\n        // 戻り値は EXIF が追加された画像のバイナリ文字列 (なぜ未だにバイナリ文字列で実装してるんだ…)\r\n        const blob_string_new = piexif.insert(exif_string, blob_string);\r\n\r\n        // 画像のバイナリ文字列を ArrayBuffer に変換\r\n        // ref: 「カメラアプリで体感するWeb App」4.2\r\n        const buffer = new Uint8Array(blob_string_new.length);\r\n        for (let index = 0; index < buffer.length; index++) {\r\n            buffer[index] = blob_string_new.charCodeAt(index) & 0xff;\r\n        }\r\n\r\n        // 新しい Blob を返す\r\n        return new Blob([buffer], {type: blob.type});\r\n    }\r\n}\r\n\r\nexport default CaptureManager;\r\n","\r\nimport * as Comlink from 'comlink';\r\n\r\nimport { ILivePSIArchivedDataDecoderConstructor } from '@/workers/LivePSIArchivedDataDecoder';\r\n\r\n\r\n// LivePSIArchivedDataDecoder を Web Worker 上で動作させるためのラッパー\r\n// Comlink を経由し、Web Worker とメインスレッド間でオブジェクトをやり取りする\r\n// ラップ元と同じファイルに定義すると Webpack から Circler Dependency として警告されブラウザの挙動が不安定になるため、別ファイルに定義している\r\nconst worker = new Worker(new URL('@/workers/LivePSIArchivedDataDecoder', import.meta.url));\r\nconst LivePSIArchivedDataDecoderProxy = Comlink.wrap<ILivePSIArchivedDataDecoderConstructor>(worker);\r\nexport default LivePSIArchivedDataDecoderProxy;\r\n","\r\nimport * as Comlink from 'comlink';\r\nimport DPlayer from 'dplayer';\r\nimport { BMLBrowser, BMLBrowserFontFace } from 'web-bml/client/bml_browser';\r\nimport { AribKeyCode } from 'web-bml/client/content';\r\n\r\nimport router from '@/router';\r\nimport PlayerManager from '@/services/player/PlayerManager';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils, { PlayerUtils } from '@/utils';\r\nimport { ILivePSIArchivedDataDecoder } from '@/workers/LivePSIArchivedDataDecoder';\r\nimport LivePSIArchivedDataDecoderProxy from '@/workers/LivePSIArchivedDataDecoderProxy';\r\n\r\n\r\n/**\r\n * ライブ視聴: データ放送機能を管理する PlayerManager\r\n */\r\nclass LiveDataBroadcastingManager implements PlayerManager {\r\n\r\n    // ユーザー操作により DPlayer 側で画質が切り替わった際、この PlayerManager の再起動が必要かどうかを PlayerWrapper に示す値\r\n    public readonly restart_required_when_quality_switched = true;\r\n\r\n    // BML 用フォント\r\n    private static readonly ROUND_GOTHIC: BMLBrowserFontFace = {\r\n        source: 'url(\"/assets/fonts/KosugiMaru-Regular.woff2\"), local(\"sans-serif\")',\r\n    };\r\n    private static readonly SQUARE_GOTHIC: BMLBrowserFontFace = {\r\n        source: 'url(\"/assets/fonts/Kosugi-Regular.woff2\"), local(\"sans-serif\")',\r\n    };\r\n\r\n    // DPlayer のインスタンス\r\n    // 設計上コンストラクタ以降で変更すべきでないため readonly にしている\r\n    private readonly player: DPlayer;\r\n\r\n    private readonly media_element: HTMLElement;\r\n    private container_element: HTMLElement | null = null;\r\n    private readonly remocon_element: HTMLElement;\r\n    private readonly remocon_data_broadcasting_element: HTMLElement;\r\n    private remocon_button_event_abort_controller: AbortController | null = null;\r\n\r\n    // DPlayer のリサイズを監視する ResizeObserver\r\n    private resize_observer: ResizeObserver | null = null;\r\n\r\n    // BML ブラウザのインスタンス\r\n    // Vue.js は data() で設定した変数を再帰的に監視するが、BMLBrowser 内の JS-Interpreter のインスタンスが\r\n    // Vue.js の監視対象に入ると謎のエラーが発生してしまうため、プロパティを Hard Private にして監視対象から外す\r\n    #bml_browser: BMLBrowser | null = null;\r\n\r\n    // BML ブラウザの幅と高さ\r\n    private bml_browser_width: number = 960;\r\n    private bml_browser_height: number = 540;\r\n\r\n    // BML ブラウザが数字キーを文字入力などに利用中かどうか\r\n    private is_bml_browser_using_numeric_key: boolean = false;\r\n\r\n    // BML ブラウザを破棄中かどうか\r\n    private is_bml_browser_destroying: boolean = false;\r\n\r\n    // 動画の要素が BML ブラウザ上に移動されているかどうか\r\n    private is_video_element_moved_to_bml_browser: boolean = false;\r\n\r\n    // PSI/SI アーカイブデータデコーダーのインスタンス\r\n    private live_psi_archived_data_decoder: Comlink.Remote<ILivePSIArchivedDataDecoder> | null = null;\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * @param player DPlayer のインスタンス\r\n     */\r\n    constructor(player: DPlayer) {\r\n        this.player = player;\r\n\r\n        // 映像が入る DOM 要素\r\n        // DPlayer 内の dplayer-video-wrap-aspect をそのまま使う (中に映像と字幕が含まれる)\r\n        this.media_element = this.player.template.videoWrapAspect;\r\n\r\n        // リモコンの DOM 要素\r\n        this.remocon_element = document.querySelector('.remote-control')!;\r\n        this.remocon_data_broadcasting_element = this.remocon_element.querySelector('.remote-control-data-broadcasting')!;\r\n    }\r\n\r\n\r\n    /**\r\n     * LiveDataBroadcastingManager での処理を開始する\r\n     * EDCB Legacy WebUI での実装を参考にした\r\n     * ref: https://github.com/xtne6f/EDCB/blob/work-plus-s-230212/ini/HttpPublic/legacy/util.lua#L444-L497\r\n     */\r\n    public async init(): Promise<void> {\r\n        const channels_store = useChannelsStore();\r\n\r\n        const is_data_broadcasting_enabled = useSettingsStore().settings.tv_show_data_broadcasting;\r\n        console.log(`[LiveDataBroadcastingManager] BMLBrowser: ${is_data_broadcasting_enabled ? 'enabled' : 'disabled'}`);\r\n\r\n        // リモコンのボタンを初期化\r\n        this.initRemoconButtons();\r\n\r\n        // データ放送機能有効時のみ\r\n        if (is_data_broadcasting_enabled === true) {\r\n\r\n            // BML ブラウザが入る DOM 要素\r\n            // DPlayer 内の dplayer-video-wrap の中に動的に追加する (映像レイヤーより下)\r\n            // 要素のスタイルは Watch.vue で定義されている\r\n            this.container_element = document.createElement('div');\r\n            this.container_element.classList.add('dplayer-bml-browser');\r\n            this.container_element = this.player.template.videoWrap.insertAdjacentElement('afterbegin', this.container_element) as HTMLElement;\r\n\r\n            // リモコンのボタンを有効化\r\n            // データ放送機能無効時はボタンを無効のままにする\r\n            this.toggleRemoconButtonsEnabled(true);\r\n\r\n            // リモコンをローディング状態にする\r\n            this.toggleRemoconButtonsLoading(true);\r\n\r\n            // BML ブラウザの初期化\r\n            const this_ = this;\r\n            this.#bml_browser = new BMLBrowser({\r\n                mediaElement: document.createElement('p'),  // ここではダミーの p 要素を渡す\r\n                containerElement: this.container_element,\r\n                storagePrefix: 'KonomiTV-BMLBrowser_',\r\n                nvramPrefix: 'nvram_',\r\n                broadcasterDatabasePrefix: '',\r\n                videoPlaneModeEnabled: true,\r\n                fonts: {\r\n                    roundGothic: LiveDataBroadcastingManager.ROUND_GOTHIC,\r\n                    squareGothic: LiveDataBroadcastingManager.SQUARE_GOTHIC,\r\n                },\r\n                // ステータス更新時のイベント\r\n                indicator: {\r\n                    setUrl(name: string, loading: boolean) {\r\n                        this_.toggleRemoconButtonsLoading(loading);\r\n                    },\r\n                    setNetworkingGetStatus(connecting: boolean) {\r\n                        this_.toggleRemoconButtonsLoading(connecting);\r\n                    },\r\n                    setNetworkingPostStatus(connecting: boolean) {\r\n                        this_.toggleRemoconButtonsLoading(connecting);\r\n                    },\r\n                    setReceivingStatus(receiving: boolean) {\r\n                        // 何もしない\r\n                    },\r\n                    setEventName(name: string) {\r\n                        // 何もしない\r\n                    }\r\n                },\r\n                // Greg: 受信機の電源を切るまでグローバルに持続するメモリ\r\n                greg: {\r\n                    getReg(index: number) {\r\n                        let Greg: string[];\r\n                        if (window.sessionStorage.getItem('KonomiTV-BMLBrowser-Greg') === null) {\r\n                            // 初回は Greg を初期化する\r\n                            Greg = [...new Array(64)].map(_ => '');\r\n                        } else {\r\n                            // 2回目以降は SessionStorage 内の Greg を復元する\r\n                            Greg = JSON.parse(window.sessionStorage.getItem('KonomiTV-BMLBrowser-Greg')!);\r\n                        }\r\n                        return Greg[index] ?? '';\r\n                    },\r\n                    setReg(index: number, value: string) {\r\n                        let Greg: string[];\r\n                        if (window.sessionStorage.getItem('KonomiTV-BMLBrowser-Greg') === null) {\r\n                            // 初回は Greg を初期化する\r\n                            Greg = [...new Array(64)].map(_ => '');\r\n                        } else {\r\n                            // 2回目以降は SessionStorage 内の Greg を復元する\r\n                            Greg = JSON.parse(window.sessionStorage.getItem('KonomiTV-BMLBrowser-Greg')!);\r\n                        }\r\n                        Greg[index] = value;\r\n                        window.sessionStorage.setItem('KonomiTV-BMLBrowser-Greg', JSON.stringify(Greg));\r\n                    },\r\n                },\r\n                // データ放送からのチャンネル切り替え機能\r\n                epg: {\r\n                    tune(network_id: number, transport_stream_id: number, service_id: number): boolean {\r\n                        // 選局対象のチャンネルが現在視聴中のチャンネルと同じ場合\r\n                        if (channels_store.channel.current.network_id === network_id && channels_store.channel.current.service_id === service_id) {\r\n                            // 非同期で LiveDataBroadcastingManager を再起動\r\n                            // チャンネル切り替え後は BML ブラウザがフリーズするため\r\n                            (async () => {\r\n                                await this_.destroy();\r\n                                await this_.init();\r\n                            })();\r\n                            return true;\r\n                        }\r\n                        // チャンネルリストから network_id と service_id が一致するチャンネルを探す\r\n                        // transport_stream_id は Mirakurun バックエンドの場合は存在しないため使わない\r\n                        // network_id + service_id だけで一意になる\r\n                        for (const channels of Object.values(channels_store.channels_list)) {\r\n                            for (const channel of channels) {\r\n                                if (channel.network_id === network_id && channel.service_id === service_id) {\r\n                                    // 少し待ってからチャンネルを切り替える（チャンネル切り替え時にデータ放送側から音が鳴る可能性があるため）\r\n                                    Utils.sleep(0.3).then(() => router.push({path: `/tv/watch2/${channel.display_channel_id}`}));\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                        // network_id と service_id が一致するチャンネルが見つからなかった\r\n                        // 3秒間エラーメッセージを表示する\r\n                        console.error(`[LiveDataBroadcastingManager] Channel not found (network_id: ${network_id} / service_id: ${service_id})`);\r\n                        this_.player.notice(`切り替え先のチャンネルが見つかりませんでした。(network_id: ${network_id} / service_id: ${service_id})`, 3000, undefined, '#FF6F6A');\r\n                        // エラーメッセージを表示し終わったタイミングで、非同期で LiveDataBroadcastingManager を再起動\r\n                        // チャンネル切り替えに失敗すると BML ブラウザがフリーズするため\r\n                        Utils.sleep(3).then(async () => {\r\n                            await this_.destroy();\r\n                            await this_.init();\r\n                        });\r\n                        return false;\r\n                    }\r\n                },\r\n                // 双方向 (ネット接続) 機能\r\n                ip: {\r\n                    getConnectionType(): number {\r\n                        // ARIB STD-B24 第二分冊 (2/2) 第二編 付属3 5.6.5.2 表5-12\r\n                        // 1: PSTN\r\n                        // 100: ISDN\r\n                        // 200: PHS\r\n                        // 201: PHS (PIAFS2.0)\r\n                        // 202: PHS (PIAFS2.1)\r\n                        // 300: Mobile phone\r\n                        // 301: Mobile phone (PDC)\r\n                        // 302: Mobile phone (PDC-P)\r\n                        // 303: Mobile phone (DS-CDMA)\r\n                        // 304: Mobile phone(MC-CDMA)\r\n                        // 305: Mobile phone (CDMA CelluarSystem)\r\n                        // 401: Ethernet (PPPoE)\r\n                        // 402: Ethernet (Fixed IP)\r\n                        // 403: Ethernet (DHCP)\r\n                        // NaN: 失敗\r\n                        return 403;\r\n                    },\r\n                    isIPConnected(): number {\r\n                        // ARIB STD-B24 第二分冊 (2/2) 第二編 付属3 5.6.5.2 表5-14\r\n                        // 0: IP 接続は確立していない\r\n                        // 1: IP 接続は自動接続によって確立している\r\n                        // 2: IP 接続は connectPPP() / connectPPPWithISPParams() により確立している\r\n                        // NaN 失敗\r\n                        return 0;\r\n                    },\r\n                },\r\n                // エラー発生時のメッセージ表示\r\n                // 3秒間プレイヤーにエラーメッセージを表示する\r\n                showErrorMessage(title: string, message: string, code?: string): void {\r\n                    this_.player.notice(`${title}<br>${message} (${code})`, 3000, undefined, '#FF6F6A');\r\n                }\r\n            });\r\n            this.bml_browser_width = 960;\r\n            this.bml_browser_height = 540;\r\n\r\n            // BML ブラウザがロードされたときのイベント\r\n            this.#bml_browser.addEventListener('load', (event) => {\r\n                console.log('[LiveDataBroadcastingManager] BMLBrowser: load', event.detail);\r\n\r\n                // BML ブラウザの要素に幅と高さを設定\r\n                this.bml_browser_width = event.detail.resolution.width;\r\n                this.bml_browser_height = event.detail.resolution.height;\r\n                this.container_element?.style.setProperty('--bml-browser-width', `${this.bml_browser_width}px`);\r\n                this.container_element?.style.setProperty('--bml-browser-height', `${this.bml_browser_height}px`);\r\n\r\n                // データ放送画面の拡大/縮小率を再計算\r\n                this.calculateBMLBrowserScaleFactor(this.player.template.videoWrap.clientWidth, this.player.template.videoWrap.clientHeight);\r\n\r\n                // 映像の要素をデータ放送内に移動\r\n                this.moveVideoElementToBMLBrowser();\r\n            });\r\n\r\n            // BML ブラウザの表示状態が変化したときのイベント\r\n            this.#bml_browser.addEventListener('invisible', (event) => {\r\n                if (event.detail === true) {\r\n                    // 非表示状態\r\n                    // データ放送内に移動していた映像の要素を DPlayer に戻す\r\n                    console.log('[LiveDataBroadcastingManager] BMLBrowser: invisible');\r\n                    this.moveVideoElementToDPlayer();\r\n                    // BML ブラウザのコンテナ要素を display: none にする\r\n                    if (this.container_element !== null) {\r\n                        this.container_element.style.display = 'none';\r\n                    }\r\n                } else {\r\n                    // 表示状態\r\n                    // 映像の要素をデータ放送内に移動\r\n                    console.log('[LiveDataBroadcastingManager] BMLBrowser: visible');\r\n                    this.moveVideoElementToBMLBrowser();\r\n                    // BML ブラウザのコンテナ要素を display: block にする\r\n                    if (this.container_element !== null) {\r\n                        this.container_element.style.display = 'block';\r\n                    }\r\n                }\r\n            });\r\n\r\n            // 現在 BML ブラウザ上で利用しているボタンの一覧が変化したときのイベント\r\n            this.#bml_browser.addEventListener('usedkeylistchanged', (event) => {\r\n                // usedKeyList の中に numeric-tuning が含まれている場合は、データ放送が数字キーを利用中\r\n                this.is_bml_browser_using_numeric_key = [...event.detail.usedKeyList].includes('numeric-tuning');\r\n            });\r\n\r\n            // DPlayer のリサイズを監視する ResizeObserver を開始\r\n            this.resize_observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\r\n                // データ放送画面の拡大/縮小率を再計算\r\n                const entry = entries[0];\r\n                this.calculateBMLBrowserScaleFactor(entry.contentRect.width, entry.contentRect.height);\r\n            });\r\n            this.resize_observer.observe(this.player.template.videoWrap);\r\n        }\r\n\r\n        // ここからはデータ放送機能無効時も実行される\r\n        // PSI/SI アーカイブデータは、UI 上の番組情報をリアルタイムに更新する用途でも利用している\r\n\r\n        // ライブ PSI/SI アーカイブデータデコーダーを初期化\r\n        // Comlink を挟んでいる関係上、コンストラクタにも関わらず Promise を返すため await する必要がある\r\n        const api_quality = PlayerUtils.extractAPIQualityFromDPlayer(this.player);\r\n        this.live_psi_archived_data_decoder = await new LivePSIArchivedDataDecoderProxy(channels_store.channel.current, api_quality);\r\n\r\n        // デコードを開始\r\n        // デコーダーは Web Worker 上で実行される (コールバックを Comlink.proxy() で包むのがポイント)\r\n        this.live_psi_archived_data_decoder.run(Comlink.proxy(async (message) => {\r\n\r\n            // データ放送有効時のみ\r\n            if (this.#bml_browser !== null) {\r\n\r\n                // PMT (Program Map Table) イベント\r\n                if (message.type === 'pmt') {\r\n\r\n                    // データ放送がチャンネルに含まれているかどうか\r\n                    // AdditionalAribBXMLInfo を含むコンポーネントが一つでも存在するかどうかで判定\r\n                    const is_bml_available = message.components.some((component) => component.bxmlInfo !== undefined);\r\n                    console.log(`[LiveDataBroadcastingManager] BMLBrowser: ${is_bml_available ? 'available' : 'unavailable'}`);\r\n\r\n                    // データ放送がチャンネルに含まれていない場合\r\n                    if (is_bml_available === false) {\r\n\r\n                        // リモコンのローディング状態を解除\r\n                        // PMT にデータ放送用情報が含まれるようになるまでは、データ放送が利用できる見込みはない\r\n                        this.toggleRemoconButtonsLoading(false);\r\n\r\n                        // リモコンのボタンを無効化\r\n                        this.toggleRemoconButtonsEnabled(false);\r\n\r\n                    // データ放送がチャンネルに含まれている場合\r\n                    // データ放送がチャンネルに含まれていなかったが、後から含まれるようになったケースを想定\r\n                    // この時点ではローディングは終わっていないので、ローディング状態は解除しない\r\n                    } else {\r\n\r\n                        // リモコンのボタンを有効化\r\n                        this.toggleRemoconButtonsEnabled(true);\r\n                    }\r\n                }\r\n\r\n                // TS ストリームのデコード結果を BML ブラウザにそのまま送信する\r\n                // IProgramPF は KonomiTV の UI 表示用の番組情報イベントなので、BML ブラウザには送信しない\r\n                if (message.type !== 'IProgramPF') {\r\n                    this.#bml_browser.emitMessage(message);\r\n                }\r\n            }\r\n\r\n            // 番組情報イベント (KonomiTV の UI 表示用)\r\n            // 現在放送中/次に放送される番組情報を ChannelsStore を経由し UI 側にリアルタイムに反映する\r\n            if (message.type === 'IProgramPF') {\r\n                if (message.present_or_following === 'Present') {\r\n                    channels_store.current_program_present = message.program;\r\n                } else if (message.present_or_following === 'Following') {\r\n                    channels_store.current_program_following = message.program;\r\n                }\r\n            }\r\n        }));\r\n\r\n        console.log('[LiveDataBroadcastingManager] Initialized.');\r\n    }\r\n\r\n\r\n    /**\r\n     * リモコンのボタンを初期化する\r\n     */\r\n    private initRemoconButtons(): void {\r\n        const channels_store = useChannelsStore();\r\n\r\n        // リモコンのボタンのクリックイベントを一括で削除するための AbortController\r\n        this.remocon_button_event_abort_controller = new AbortController();\r\n\r\n        // リモコンのボタンをクリックしたときのイベントを登録\r\n        const buttons = this.remocon_element.querySelectorAll('button');\r\n        for (const button of buttons) {\r\n            button.addEventListener('click', async () => {\r\n\r\n                // ARIB 仕様上のキーコード\r\n                const arib_key_code = (parseInt(button.dataset.aribKeyCode!) as AribKeyCode);\r\n\r\n                // リモコン ID (番号キーのみ)\r\n                const remocon_id = button.dataset.remoconId ? parseInt(button.dataset.remoconId) : null;\r\n\r\n                // 番号キーでかつ現在データ放送が番号キーを使っていない場合は、そのチャンネルに切り替える\r\n                if (remocon_id !== null && this.is_bml_browser_using_numeric_key === false) {\r\n\r\n                    // 切り替え先のチャンネルを取得する\r\n                    // チャンネルタイプは現在視聴中のチャンネルと同じ\r\n                    const switch_channel_type = channels_store.channel.current.type;\r\n                    const switch_channel = channels_store.getChannelByRemoconID(switch_channel_type, remocon_id);\r\n\r\n                    // チャンネルが取得できていれば、ルーティングをそのチャンネルに置き換える\r\n                    // 押されたキーに対応するリモコン ID のチャンネルがない場合や、現在と同じチャンネル ID の場合は何も起こらない\r\n                    if (switch_channel !== null && switch_channel.display_channel_id !== channels_store.display_channel_id) {\r\n                        router.push({path: `/tv/watch2/${switch_channel.display_channel_id}`});\r\n                    }\r\n                    return;\r\n\r\n                // それ以外の場合は、BML ブラウザにキーイベントを送信する\r\n                // データ放送機能無効時は何もしない\r\n                } else {\r\n                    if (this.#bml_browser !== null) {\r\n                        if (remocon_id === 10) {\r\n                            // リモコン番号が 10 の場合のみ、\"0\" のキーイベントも送信する\r\n                            this.#bml_browser.content.processKeyDown(AribKeyCode.Digit0);\r\n                            this.#bml_browser.content.processKeyUp(AribKeyCode.Digit0);\r\n                            await Utils.sleep(0.1);  // 若干待つのがポイント\r\n                        }\r\n                        this.#bml_browser.content.processKeyDown(arib_key_code);\r\n                        this.#bml_browser.content.processKeyUp(arib_key_code);\r\n                    }\r\n                }\r\n\r\n            }, {signal: this.remocon_button_event_abort_controller.signal});\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * リモコンのデータ放送ボタンの表示状態をローディングかどうかで切り替える\r\n     */\r\n    private toggleRemoconButtonsLoading(loading: boolean): void {\r\n        if (loading === true) {\r\n            this.remocon_data_broadcasting_element.classList.add('remote-control-data-broadcasting--loading');\r\n        } else {\r\n            this.remocon_data_broadcasting_element.classList.remove('remote-control-data-broadcasting--loading');\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * リモコンのデータ放送ボタンの有効/無効をローディングかどうかで切り替える\r\n     * 初期状態 (Vue SFC の HTML 上) では無効になっているので、BML ブラウザの初期化時に有効にする\r\n     */\r\n    private toggleRemoconButtonsEnabled(enabled: boolean): void {\r\n        if (enabled === true) {\r\n            this.remocon_data_broadcasting_element.classList.remove('remote-control-data-broadcasting--disabled');\r\n        } else {\r\n            this.remocon_data_broadcasting_element.classList.add('remote-control-data-broadcasting--disabled');\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * データ放送画面の拡大/縮小率を再計算し、CSS カスタムプロパティに設定する\r\n     * データ放送は 960×540 か 720×480 の固定サイズなので、レスポンシブにするために transform: scale() を使っている\r\n     * @param container_width BML ブラウザが入るコンテナ要素の幅\r\n     * @param container_height BML ブラウザが入るコンテナ要素の高さ\r\n     */\r\n    private calculateBMLBrowserScaleFactor(container_width: number, container_height: number): void {\r\n\r\n        // 高さは BML ブラウザの高さをそのまま利用するが、横幅は常に高さに対して常に 16:9 の比率になるようにする\r\n        // BML ブラウザのサイズが 960×540 なら問題ないが、720×480 の場合は 854×480 として計算される\r\n        const scale_factor_width = container_width / (this.bml_browser_height * 16 / 9);\r\n        const scale_factor_height = container_height / this.bml_browser_height;\r\n\r\n        // transform: scale() での拡大率を算出\r\n        const scale_factor = Math.min(scale_factor_width, scale_factor_height);\r\n\r\n        // (BMLブラウザの高さに対して 16:9 の比率の幅)÷(BMLブラウザの幅) で横に引き伸ばす倍率を算出\r\n        // 854÷720 の場合、約 1.185 倍になる\r\n        const magnification = (this.bml_browser_height * 16 / 9) / this.bml_browser_width;\r\n\r\n        // データ放送画面の拡大/縮小率を CSS カスタムプロパティとして設定\r\n        this.container_element?.style.setProperty('--bml-browser-scale-factor-width', `${scale_factor * magnification}`);\r\n        this.container_element?.style.setProperty('--bml-browser-scale-factor-height', `${scale_factor}`);\r\n    }\r\n\r\n\r\n    /**\r\n     * 映像の DOM 要素を DPlayer から BML ブラウザ (データ放送) 内に移動する\r\n     * データ放送が読み込まれるか、表示状態になるときに呼び出される\r\n     */\r\n    private moveVideoElementToBMLBrowser(): void {\r\n\r\n        // BML ブラウザの破棄中にイベントが発火した場合は何もしない\r\n        if (this.is_bml_browser_destroying) {\r\n            return;\r\n        }\r\n\r\n        // getVideoElement() に失敗した (=現在データ放送に映像が表示されていない) 場合は何もしない\r\n        if (this.#bml_browser?.getVideoElement() === null) {\r\n            return;\r\n        }\r\n\r\n        // ダミーで渡した p 要素があれば削除\r\n        if (this.#bml_browser?.getVideoElement()?.firstElementChild instanceof HTMLParagraphElement) {\r\n            this.#bml_browser?.getVideoElement()?.firstElementChild?.remove();\r\n        }\r\n\r\n        // データ放送内に映像の要素を入れる\r\n        this.#bml_browser?.getVideoElement()?.appendChild(this.media_element);\r\n\r\n        // データ放送内での表示用にスタイルを調整\r\n        this.media_element.style.width = '100%';\r\n        this.media_element.style.height = '100%';\r\n        for (const child of this.media_element.children) {\r\n            (child as HTMLElement).style.display = 'block';\r\n            (child as HTMLElement).style.visibility = 'visible';\r\n            if (child instanceof HTMLVideoElement) {\r\n                (child as HTMLVideoElement).style.width = '100%';\r\n                (child as HTMLVideoElement).style.height = '100%';\r\n                // BML ブラウザのアスペクト比が 16:9 以外のケース (運用上は 720×480 のみ該当) に限定して適用する\r\n                if (this.bml_browser_width / this.bml_browser_height !== 16 / 9) {\r\n                    const magnification = (this.bml_browser_height * 16 / 9) / this.bml_browser_width;\r\n                    (child as HTMLVideoElement).style.transform = `scaleY(${magnification})`;\r\n                    (child as HTMLVideoElement).style.transformOrigin = 'center center';\r\n                } else {\r\n                    (child as HTMLVideoElement).style.transform = '';\r\n                    (child as HTMLVideoElement).style.transformOrigin = '';\r\n                }\r\n            }\r\n        }\r\n\r\n        this.is_video_element_moved_to_bml_browser = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * 映像の DOM 要素を BML ブラウザ (データ放送) から DPlayer 内に移動する\r\n     * データ放送が非表示状態になるか、破棄されるときに呼び出される\r\n     */\r\n    private moveVideoElementToDPlayer(): void {\r\n\r\n        // BML ブラウザの破棄中にイベントが発火した場合は何もしない\r\n        if (this.is_bml_browser_destroying) {\r\n            return;\r\n        }\r\n\r\n        // 既に DPlayer 内に映像の要素がある場合は何もしない\r\n        if (this.is_video_element_moved_to_bml_browser === false) {\r\n            return;\r\n        }\r\n\r\n        // データ放送内に移動していた映像の要素を DPlayer に戻す (BML ブラウザより上のレイヤーに配置)\r\n        // BML ブラウザの破棄前に行う必要がある\r\n        if (this.container_element !== null) {\r\n            this.player.template.videoWrap.insertBefore(this.media_element, this.container_element.nextElementSibling);\r\n        }\r\n\r\n        // データ放送内での表示用に調整していたスタイルを戻す\r\n        this.media_element.style.width = '';\r\n        this.media_element.style.height = '';\r\n        for (const child of this.media_element.children) {\r\n            (child as HTMLElement).style.display = '';\r\n            (child as HTMLElement).style.visibility = '';\r\n            if (child instanceof HTMLVideoElement) {\r\n                (child as HTMLVideoElement).style.width = '';\r\n                (child as HTMLVideoElement).style.height = '';\r\n                (child as HTMLVideoElement).style.transform = '';\r\n                (child as HTMLVideoElement).style.transformOrigin = '';\r\n            }\r\n        }\r\n\r\n        this.is_video_element_moved_to_bml_browser = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * LiveDataBroadcastingManager での処理を終了し、破棄する\r\n     */\r\n    public async destroy(): Promise<void> {\r\n\r\n        // ライブ PSI/SI アーカイブデータデコーダーを終了\r\n        if (this.live_psi_archived_data_decoder !== null) {\r\n            // タイミングの関係なのかチャンネル切り替え時の映像のフェードアウトが効かなくなるため、await してはいけない\r\n            this.live_psi_archived_data_decoder.destroy();\r\n            this.live_psi_archived_data_decoder = null;\r\n        }\r\n\r\n        // リモコンの各ボタンに登録していたリスナーを削除\r\n        if (this.remocon_button_event_abort_controller !== null) {\r\n            this.remocon_button_event_abort_controller.abort();\r\n            this.remocon_button_event_abort_controller = null;\r\n        }\r\n\r\n        // ここからはデータ放送機能有効時のみ実行\r\n        if (this.#bml_browser !== null) {\r\n\r\n            // リモコンのボタンを再び無効化\r\n            this.toggleRemoconButtonsEnabled(false);\r\n\r\n            // リモコンを再びローディング状態に戻す\r\n            this.toggleRemoconButtonsLoading(true);\r\n\r\n            // DPlayer のリサイズを監視する ResizeObserver を終了\r\n            if (this.resize_observer !== null) {\r\n                this.resize_observer.disconnect();\r\n                this.resize_observer = null;\r\n            }\r\n\r\n            // データ放送内に移動していた映像の要素を DPlayer に戻す\r\n            this.moveVideoElementToDPlayer();\r\n\r\n            // BML ブラウザを破棄\r\n            this.is_bml_browser_destroying = true;\r\n            await this.#bml_browser.destroy();\r\n            this.is_bml_browser_destroying = false;\r\n            this.#bml_browser = null;\r\n\r\n            // BML ブラウザの要素を削除\r\n            this.container_element?.remove();\r\n\r\n            console.log('[LiveDataBroadcastingManager] Destroyed.');\r\n        }\r\n    }\r\n}\r\n\r\nexport default LiveDataBroadcastingManager;\r\n","<template>\r\n    <div class=\"route-container\">\r\n        <main class=\"watch-container\" :class=\"{\r\n                'watch-container--control-display': is_control_display,\r\n                'watch-container--panel-display': Utils.isSmartphoneVertical() || Utils.isTabletVertical() ? true : is_panel_display,\r\n                'watch-container--fullscreen': is_fullscreen,\r\n            }\">\r\n            <nav class=\"watch-navigation\"\r\n                 @mousemove=\"controlDisplayTimer($event)\"\r\n                 @touchmove=\"controlDisplayTimer($event)\"\r\n                 @click=\"controlDisplayTimer($event)\">\r\n                <router-link v-ripple class=\"watch-navigation__icon\" to=\"/tv/\">\r\n                    <img class=\"watch-navigation__icon-image\" src=\"/assets/images/icon.svg\" width=\"23px\">\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'テレビをみる'\" to=\"/tv/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:tv-20-regular\" width=\"26px\" />\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'ビデオをみる'\"  to=\"/videos/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:movies-and-tv-20-regular\" width=\"26px\" />\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'番組表'\" to=\"/timetable/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:calendar-ltr-20-regular\" width=\"26px\" />\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'録画予約'\" to=\"/reserves/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:timer-16-regular\" width=\"26px\" style=\"padding: 0.5px;\"/>\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'マイリスト'\" to=\"/mylist/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"ic:round-playlist-play\" width=\"26px\" />\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'キャプチャ'\" to=\"/captures/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:image-multiple-24-regular\" width=\"26px\" />\r\n                </router-link>\r\n                <v-spacer></v-spacer>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'設定'\" to=\"/settings/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:settings-20-regular\" width=\"26px\" />\r\n                </router-link>\r\n            </nav>\r\n            <div class=\"watch-content\"\r\n                 @mousemove=\"controlDisplayTimer($event, true)\"\r\n                 @touchmove=\"controlDisplayTimer($event, true)\"\r\n                 @click=\"controlDisplayTimer($event, true)\">\r\n                <header class=\"watch-header\">\r\n                    <router-link class=\"watch-header__back-icon\" v-ripple to=\"/tv/\">\r\n                        <Icon icon=\"fluent:arrow-left-12-filled\" width=\"25px\" />\r\n                    </router-link>\r\n                    <img class=\"watch-header__broadcaster\" :src=\"`${Utils.api_base_url}/channels/${(channelsStore.display_channel_id)}/logo`\">\r\n                    <span class=\"watch-header__program-title\"\r\n                        v-html=\"ProgramUtils.decorateProgramInfo(channelsStore.channel.current.program_present, 'title')\">\r\n                    </span>\r\n                    <span class=\"watch-header__program-time\">\r\n                        {{ProgramUtils.getProgramTime(channelsStore.channel.current.program_present, true)}}\r\n                    </span>\r\n                    <v-spacer></v-spacer>\r\n                    <span class=\"watch-header__now\">{{time}}</span>\r\n                </header>\r\n                <div class=\"watch-player\" :class=\"{\r\n                    'watch-player--loading': is_loading,\r\n                    'watch-player--virtual-keyboard-display': is_virtual_keyboard_display && Utils.hasActiveElementClass('dplayer-comment-input'),\r\n                }\">\r\n                    <div class=\"watch-player__background-wrapper\">\r\n                        <div class=\"watch-player__background\" :class=\"{'watch-player__background--display': is_background_display}\"\r\n                            :style=\"{backgroundImage: `url(${background_url})`}\">\r\n                            <img class=\"watch-player__background-logo\" src=\"/assets/images/logo.svg\">\r\n                        </div>\r\n                    </div>\r\n                    <v-progress-circular indeterminate size=\"60\" width=\"6\" class=\"watch-player__buffering\"\r\n                        :class=\"{'watch-player__buffering--display': is_video_buffering && (is_loading || (player !== null && !player.video.paused))}\">\r\n                    </v-progress-circular>\r\n                    <div class=\"watch-player__dplayer\"></div>\r\n                    <div class=\"watch-player__button\"\r\n                         @mousemove=\"controlDisplayTimer($event)\"\r\n                         @touchmove=\"controlDisplayTimer($event)\"\r\n                         @click=\"controlDisplayTimer($event)\">\r\n                        <div v-ripple class=\"switch-button switch-button-up\" v-tooltip.top=\"'前のチャンネル'\"\r\n                            @click=\"is_zapping = true; $router.push({path: `/tv/watch/${channelsStore.channel.previous.display_channel_id}`})\">\r\n                            <Icon class=\"switch-button-icon\" icon=\"fluent:ios-arrow-left-24-filled\" width=\"32px\" rotate=\"1\" />\r\n                        </div>\r\n                        <div v-ripple class=\"switch-button switch-button-panel switch-button-panel--open\"\r\n                            @click=\"is_panel_display = !is_panel_display\">\r\n                            <Icon class=\"switch-button-icon\" icon=\"fluent:navigation-16-filled\" width=\"32px\" />\r\n                        </div>\r\n                        <div v-ripple class=\"switch-button switch-button-down\" v-tooltip.bottom=\"'次のチャンネル'\"\r\n                             @click=\"is_zapping = true; $router.push({path: `/tv/watch/${channelsStore.channel.next.display_channel_id}`})\">\r\n                            <Icon class=\"switch-button-icon\" icon=\"fluent:ios-arrow-right-24-filled\" width=\"33px\" rotate=\"1\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"watch-panel\"\r\n                 @mousemove=\"controlDisplayTimer($event)\">\r\n                <div class=\"watch-panel__header\">\r\n                    <div v-ripple class=\"panel-close-button\" @click=\"is_panel_display = false\">\r\n                        <Icon class=\"panel-close-button__icon\" icon=\"akar-icons:chevron-right\" width=\"25px\" />\r\n                        <span class=\"panel-close-button__text\">閉じる</span>\r\n                    </div>\r\n                    <v-spacer></v-spacer>\r\n                    <div class=\"panel-broadcaster\">\r\n                        <img class=\"panel-broadcaster__icon\" :src=\"`${Utils.api_base_url}/channels/${(channelsStore.display_channel_id)}/logo`\">\r\n                        <div class=\"panel-broadcaster__number\">{{channelsStore.channel.current.channel_number}}</div>\r\n                        <div class=\"panel-broadcaster__name\">{{channelsStore.channel.current.name}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"watch-panel__content-container\">\r\n                    <Program class=\"watch-panel__content\"\r\n                        :class=\"{'watch-panel__content--active': tv_panel_active_tab === 'Program'}\" />\r\n                    <Channel class=\"watch-panel__content\"\r\n                        :class=\"{'watch-panel__content--active': tv_panel_active_tab === 'Channel'}\" />\r\n                    <Comment class=\"watch-panel__content\" ref=\"Comment\"\r\n                        :class=\"{'watch-panel__content--active': tv_panel_active_tab === 'Comment'}\" />\r\n                    <Twitter class=\"watch-panel__content\" ref=\"Twitter\" :playback_mode=\"'Live'\"\r\n                        :class=\"{'watch-panel__content--active': tv_panel_active_tab === 'Twitter'}\"\r\n                        @panel_folding_requested=\"is_panel_display = false\" />\r\n                    <button v-ripple class=\"watch-panel__content-remocon-button elevation-8\"\r\n                        :class=\"{'watch-panel__content-remocon-button--active': tv_panel_active_tab === 'Program' || tv_panel_active_tab === 'Channel'}\"\r\n                        @click=\"is_remocon_display = !is_remocon_display\">\r\n                        <Icon class=\"panel-close-button__icon\" icon=\"material-symbols:remote-gen\" width=\"25px\" />\r\n                    </button>\r\n                    <Remocon class=\"watch-panel__remocon\"\r\n                        :showing=\"(tv_panel_active_tab === 'Program' || tv_panel_active_tab === 'Channel') && is_remocon_display === true\"\r\n                        @close=\"is_remocon_display = false\" />\r\n                </div>\r\n                <div class=\"watch-panel__navigation\">\r\n                    <div v-ripple class=\"panel-navigation-button\"\r\n                         :class=\"{'panel-navigation-button--active': tv_panel_active_tab === 'Program'}\"\r\n                         @click=\"tv_panel_active_tab = 'Program'\">\r\n                        <Icon class=\"panel-navigation-button__icon\" icon=\"fa-solid:info-circle\" width=\"33px\" />\r\n                        <span class=\"panel-navigation-button__text\">番組情報</span>\r\n                    </div>\r\n                    <div v-ripple class=\"panel-navigation-button\"\r\n                         :class=\"{'panel-navigation-button--active': tv_panel_active_tab === 'Channel'}\"\r\n                         @click=\"tv_panel_active_tab = 'Channel'\">\r\n                        <Icon class=\"panel-navigation-button__icon\" icon=\"fa-solid:broadcast-tower\" width=\"34px\" />\r\n                        <span class=\"panel-navigation-button__text\">チャンネル</span>\r\n                    </div>\r\n                    <div v-ripple class=\"panel-navigation-button\"\r\n                         :class=\"{'panel-navigation-button--active': tv_panel_active_tab === 'Comment'}\"\r\n                         @click=\"tv_panel_active_tab = 'Comment'\">\r\n                        <Icon class=\"panel-navigation-button__icon\" icon=\"bi:chat-left-text-fill\" width=\"29px\" />\r\n                        <span class=\"panel-navigation-button__text\">コメント</span>\r\n                    </div>\r\n                    <div v-ripple class=\"panel-navigation-button\"\r\n                         :class=\"{'panel-navigation-button--active': tv_panel_active_tab === 'Twitter'}\"\r\n                         @click=\"tv_panel_active_tab = 'Twitter'\">\r\n                        <Icon class=\"panel-navigation-button__icon\" icon=\"fa-brands:twitter\" width=\"34px\" />\r\n                        <span class=\"panel-navigation-button__text\">Twitter</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n        <v-dialog max-width=\"1050\" transition=\"slide-y-transition\" v-model=\"shortcut_key_modal\">\r\n            <v-card>\r\n                <v-card-title class=\"px-5 pt-4 pb-3 d-flex align-center font-weight-bold\">\r\n                    <Icon icon=\"fluent:keyboard-20-filled\" height=\"28px\" />\r\n                    <span class=\"ml-3\">キーボードショートカット</span>\r\n                    <v-spacer></v-spacer>\r\n                    <div v-ripple class=\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\" @click=\"shortcut_key_modal = false\">\r\n                        <Icon icon=\"fluent:dismiss-12-filled\" width=\"23px\" height=\"23px\" />\r\n                    </div>\r\n                </v-card-title>\r\n                <div class=\"px-5 pb-4\">\r\n                    <v-row>\r\n                        <v-col cols=\"6\" v-for=\"(shortcut_key_column, shortcut_key_column_name) in shortcut_key_list\" :key=\"shortcut_key_column_name\">\r\n                            <div class=\"mt-3\" v-for=\"shortcut_keys in shortcut_key_column\" :key=\"shortcut_keys.name\">\r\n                                <div class=\"text-subtitle-1 d-flex align-center font-weight-bold\">\r\n                                    <Icon :icon=\"shortcut_keys.icon\" :height=\"shortcut_keys.icon_height\" />\r\n                                    <span class=\"ml-2\">{{shortcut_keys.name}}</span>\r\n                                </div>\r\n                                <div class=\"mt-3\" v-for=\"shortcut in shortcut_keys.shortcuts\" :key=\"shortcut.name\">\r\n                                    <div class=\"text-subtitle-2 mt-2 d-flex align-center font-weight-medium\">\r\n                                        <span class=\"mr-2\" v-html=\"shortcut.name\"></span>\r\n                                        <div class=\"ml-auto d-flex align-center flex-shrink-0\">\r\n                                            <div class=\"ml-auto d-flex align-center\" v-for=\"(key, index) in shortcut.keys\" :key=\"key.name\">\r\n                                                <span class=\"shortcut-key\">\r\n                                                    <Icon v-show=\"key.icon === true\" :icon=\"key_name\" height=\"18px\"\r\n                                                        v-for=\"key_name in key.name.split(';')\" :key=\"key_name\" />\r\n                                                    <span v-if=\"key.icon === false\" v-html=\"key.name\"></span>\r\n                                                </span>\r\n                                                <span class=\"shortcut-key-plus\" v-if=\"index < (shortcut.keys.length - 1)\">+</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </v-col>\r\n                    </v-row>\r\n                </div>\r\n            </v-card>\r\n        </v-dialog>\r\n        <BottomNavigation />\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport DPlayer, { DPlayerType } from 'dplayer';\r\nimport mpegts from 'mpegts.js';\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport BottomNavigation from '@/components/BottomNavigation.vue';\r\nimport Channel from '@/components/Panel/Channel.vue';\r\nimport Comment from '@/components/Panel/Comment.vue';\r\nimport Program from '@/components/Panel/Program.vue';\r\nimport Remocon from '@/components/Panel/Remocon.vue';\r\nimport Twitter from '@/components/Panel/Twitter.vue';\r\nimport APIClient from '@/services/APIClient';\r\nimport { ILiveChannel } from '@/services/Channels';\r\nimport CaptureManager from '@/services/player/managers/CaptureManager';\r\nimport LiveDataBroadcastingManager from '@/services/player/managers/LiveDataBroadcastingManager';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils, { dayjs, PlayerUtils, ProgramUtils } from '@/utils';\r\n\r\n// 低遅延モードオン時の再生バッファ (秒単位)\r\n// 0.8 秒程度余裕を持たせる\r\nconst PLAYBACK_BUFFER_SEC_LOW_LATENCY = 0.8;\r\n\r\n// 低遅延モードオフ時の再生バッファ (秒単位)\r\n// 5秒程度の遅延を許容する\r\nconst PLAYBACK_BUFFER_SEC = 5.0;\r\n\r\nexport default Vue.extend({\r\n    name: 'TV-Watch',\r\n    components: {\r\n        BottomNavigation,\r\n        Channel,\r\n        Comment,\r\n        Program,\r\n        Remocon,\r\n        Twitter,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // ユーティリティをテンプレートで使えるように\r\n            Utils: Utils,\r\n            ProgramUtils: ProgramUtils,\r\n\r\n            // 現在時刻\r\n            time: dayjs().format('YYYY/MM/DD HH:mm:ss'),\r\n\r\n            // 表示されるパネルのタブ\r\n            tv_panel_active_tab: useSettingsStore().settings.tv_panel_active_tab,\r\n\r\n            // 背景の URL\r\n            background_url: '',\r\n\r\n            // プレイヤーのローディング状態\r\n            // 既定でローディングとする\r\n            is_loading: true,\r\n\r\n            // プレイヤーが映像の再生をバッファリングしているか\r\n            // 視聴開始時以外にも、ネットワークが遅くて再生が一時的に途切れたときなどで表示される\r\n            // 既定でバッファリング中とする\r\n            is_video_buffering: true,\r\n\r\n            // プレイヤーの背景を表示するか\r\n            // 既定で表示しない\r\n            is_background_display: false,\r\n\r\n            // コントロールを表示するか\r\n            // 既定で表示する\r\n            is_control_display: true,\r\n\r\n            // リモコンを表示するか\r\n            is_remocon_display: false,\r\n\r\n            // パネルを表示するか\r\n            // panel_display_state が 'AlwaysDisplay' なら常に表示し、'AlwaysFold' なら常に折りたたむ\r\n            // 'RestorePreviousState' なら showed_panel_last_time の値を使い､前回の状態を復元する\r\n            is_panel_display: (() => {\r\n                const settings_store = useSettingsStore();\r\n                switch (settings_store.settings.panel_display_state) {\r\n                    case 'AlwaysDisplay':\r\n                        return true;\r\n                    case 'AlwaysFold':\r\n                        return false;\r\n                    case 'RestorePreviousState':\r\n                        return settings_store.settings.showed_panel_last_time;\r\n                }\r\n            })() as boolean,\r\n\r\n            // フルスクリーン状態かどうか\r\n            is_fullscreen: false,\r\n\r\n            // IME 変換中かどうか\r\n            is_ime_composing: false,\r\n\r\n            // 仮想キーボードが表示されているか\r\n            is_virtual_keyboard_display: false,\r\n\r\n            // プレイヤーからのコメント送信から間もないかどうか\r\n            is_comment_send_just_did: false,\r\n\r\n            // インターバル ID\r\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\r\n            // setInterval(), setTimeout() の返り値を登録する\r\n            interval_ids: [] as number[],\r\n\r\n            // コントロール表示切り替え用のインターバル ID\r\n            // 混ぜるとダメなので独立させる\r\n            control_interval_id: 0,\r\n\r\n            // ***** チャンネル *****\r\n\r\n            // ザッピング（「前/次のチャンネル」ボタン or 上下キーショートカット）によるチャンネル移動かどうか\r\n            is_zapping: false,\r\n\r\n            // ザッピングで連続してチャンネルを切り替えている最中かどうか\r\n            // 「連続して」とは、切り替える間隔が 0.5 秒以下で、再生セッションが初期化される前に次のチャンネルに切り替えたときのこと\r\n            is_zapping_continuously: false,\r\n\r\n            // ***** プレイヤー *****\r\n\r\n            // プレイヤー (DPlayer) のインスタンス\r\n            player: null as DPlayer | null,\r\n\r\n            // プレイヤーの破棄を許可するかどうか\r\n            player_can_be_destroyed: false,\r\n\r\n            // mpegts.js がサポートされているかどうか\r\n            // mpegts.js がサポートされていない場合は LL-HLS にフォールバックする (基本 iPhone/iPad Safari 向け)\r\n            // iPad Safari では Media Source Extensions API がサポートされているが、残念ながら数年経っても挙動が不安定なこと、\r\n            // どっちみち iPhone Safari 向けに LL-HLS のサポートを続ける必要があることから、iPad Safari でも LL-HLS を使う\r\n            is_mpegts_supported: mpegts.isSupported() === true && Utils.isSafari() === false,\r\n\r\n            // ライブストリームが Offline 状態かどうか\r\n            is_offline: false,\r\n\r\n            // RomSound の AudioContext\r\n            romsounds_context: null as AudioContext | null,\r\n\r\n            // RomSound の AudioBuffer（音声データ）が入るリスト\r\n            romsounds_buffers: [] as AudioBuffer[],\r\n\r\n            // イベントソースのインスタンス\r\n            eventsource: null as EventSource | null,\r\n\r\n            // フルスクリーン状態が切り替わったときのハンドラー\r\n            fullscreen_handler: null as unknown as () => void | null,\r\n\r\n            // キャプチャマネージャーのインスタンス\r\n            capture_manager: null as CaptureManager | null,\r\n\r\n            // データ放送マネージャーのインスタンス\r\n            data_broadcasting_manager: null as LiveDataBroadcastingManager | null,\r\n\r\n            // ***** キーボードショートカット *****\r\n\r\n            // ショートカットキーのハンドラー\r\n            shortcut_key_handler: null as unknown as (event: KeyboardEvent) => Promise<void> | null,\r\n\r\n            // ショートカットキーの最終押下時刻のタイムスタンプ\r\n            shortcut_key_pressed_at: Utils.time(),\r\n\r\n            // キーボードショートカットの一覧のモーダルを表示するか\r\n            shortcut_key_modal: false,\r\n\r\n            // キーボードショートカットの一覧に表示するショートカットキーのリスト\r\n            shortcut_key_list: {\r\n                left_column: [\r\n                    {\r\n                        name: '全般',\r\n                        icon: 'fluent:home-20-filled',\r\n                        icon_height: '22px',\r\n                        shortcuts: [\r\n                            { name: '数字キー/テンキーに対応するリモコン番号 (1~12) の地デジチャンネルに切り替える', keys: [{name: '1~9, 0, -(=), ^(~)', icon: false}] },\r\n                            { name: '数字キー/テンキーに対応するリモコン番号 (1~12) の BS チャンネルに切り替える', keys: [{name: 'Shift', icon: false}, {name: '1~9, 0, -(=), ^(~)', icon: false}] },\r\n                            { name: '前のチャンネルに切り替える', keys: [{name: 'fluent:arrow-up-12-filled', icon: true}] },\r\n                            { name: '次のチャンネルに切り替える', keys: [{name: 'fluent:arrow-down-12-filled', icon: true}] },\r\n                            { name: 'キーボードショートカットの一覧を表示する', keys: [{name: '／(？)', icon: false}] },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'プレイヤー',\r\n                        icon: 'fluent:play-20-filled',\r\n                        icon_height: '20px',\r\n                        shortcuts: [\r\n                            { name: '再生 / 一時停止の切り替え', keys: [{name: 'Space', icon: false}] },\r\n                            { name: '再生 / 一時停止の切り替え (キャプチャタブ表示時)', keys: [{name: 'Shift', icon: false}, {name: 'Space', icon: false}] },\r\n                            { name: 'プレイヤーの音量を上げる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-up-12-filled', icon: true}] },\r\n                            { name: 'プレイヤーの音量を下げる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-down-12-filled', icon: true}] },\r\n                            { name: '停止して0.5秒早戻し', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-left-12-filled', icon: true}] },\r\n                            { name: '停止して0.5秒早送り', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-right-12-filled', icon: true}] },\r\n                            { name: 'フルスクリーンの切り替え', keys: [{name: 'F', icon: false}] },\r\n                            { name: 'ライブストリームの同期', keys: [{name: 'W', icon: false}] },\r\n                            { name: 'Picture-in-Picture の表示切り替え', keys: [{name: 'E', icon: false}] },\r\n                            { name: '字幕の表示切り替え', keys: [{name: 'S', icon: false}] },\r\n                            { name: 'コメントの表示切り替え', keys: [{name: 'D', icon: false}] },\r\n                            { name: '映像をキャプチャする', keys: [{name: 'C', icon: false}] },\r\n                            { name: '映像をコメントを付けてキャプチャする', keys: [{name: 'V', icon: false}] },\r\n                            { name: 'コメント入力フォームにフォーカスする', keys: [{name: 'M', icon: false}] },\r\n                            { name: 'コメント入力フォームを閉じる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'M', icon: false}] },\r\n                        ]\r\n                    },\r\n                ],\r\n                right_column: [\r\n                    {\r\n                        name: 'パネル',\r\n                        icon: 'fluent:panel-right-20-filled',\r\n                        icon_height: '24px',\r\n                        shortcuts: [\r\n                            { name: 'パネルの表示切り替え', keys: [{name: 'P', icon: false}] },\r\n                            { name: '番組情報タブを表示する', keys: [{name: 'K', icon: false}] },\r\n                            { name: 'チャンネルタブを表示する', keys: [{name: 'L', icon: false}] },\r\n                            { name: 'コメントタブを表示する', keys: [{name: '；(＋)', icon: false}] },\r\n                            { name: 'Twitter タブを表示する', keys: [{name: '：(＊)', icon: false}] },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Twitter',\r\n                        icon: 'fa-brands:twitter',\r\n                        icon_height: '22px',\r\n                        shortcuts: [\r\n                            { name: 'ツイート検索タブを表示する', keys: [{name: '［ (「)', icon: false}] },\r\n                            { name: 'タイムラインタブを表示する', keys: [{name: '］ (」)', icon: false}] },\r\n                            { name: 'キャプチャタブを表示する', keys: [{name: '＼(￥)', icon: false}] },\r\n                            { name: 'ツイート入力フォームにフォーカスを当てる/フォーカスを外す', keys: [{name: 'Tab', icon: false}] },\r\n                            { name: 'キャプチャにフォーカスする', keys: [{name: 'キャプチャタブを表示', icon: false}, {name: 'fluent:arrow-up-12-filled;fluent:arrow-down-12-filled;fluent:arrow-left-12-filled;fluent:arrow-right-12-filled', icon: true}] },\r\n                            { name: 'キャプチャを拡大表示する/<br>キャプチャの拡大表示を閉じる', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Enter', icon: false}] },\r\n                            { name: 'キャプチャを選択する/<br>キャプチャの選択を解除する', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Space', icon: false}] },\r\n                            { name: 'クリップボード内の画像を<br>キャプチャとして取り込む', keys: [{name: 'ツイート入力<br>フォームにフォーカス', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'V', icon: false}] },\r\n                            { name: 'ツイートを送信する', keys: [{name: 'Twitter タブを表示', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'Enter', icon: false}] },\r\n                        ]\r\n                    },\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    computed: {\r\n        // ChannelsStore / SettingsStore に this.channelsStore / this.settingsStore でアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useChannelsStore, useSettingsStore),\r\n    },\r\n    // 開始時に実行\r\n    async created() {\r\n\r\n        // チャンネル選局のキーボードショートカットを Alt or Option + 数字キー/テンキーに変更する設定が有効なら、\r\n        // キーボードショートカット一覧に反映する\r\n        if (this.settingsStore.settings.tv_channel_selection_requires_alt_key === true) {\r\n            this.shortcut_key_list.left_column[0].shortcuts[0].keys.unshift({name: Utils.AltOrOption(), icon: false});\r\n            this.shortcut_key_list.left_column[0].shortcuts[1].keys.unshift({name: Utils.AltOrOption(), icon: false});\r\n        }\r\n\r\n        // チャンネル ID をセット\r\n        this.channelsStore.display_channel_id = this.$route.params.display_channel_id;\r\n\r\n        // Virtual Keyboard API に対応している場合は、仮想キーボード周りの操作を自力で行うことをブラウザに伝える\r\n        // この視聴画面のみ\r\n        if ('virtualKeyboard' in navigator) {\r\n            navigator.virtualKeyboard.overlaysContent = true;\r\n            // 仮想キーボードが表示されたり閉じられたときのイベント\r\n            navigator.virtualKeyboard.ongeometrychange = (event) => {\r\n                if (event.target.boundingRect.width === 0 && event.target.boundingRect.height === 0) {\r\n                    this.is_virtual_keyboard_display = false;\r\n                } else {\r\n                    this.is_virtual_keyboard_display = true;\r\n                }\r\n            };\r\n        }\r\n\r\n        // 再生セッションを初期化\r\n        this.init();\r\n\r\n        // RomSound を鳴らすための AudioContext を生成\r\n        this.romsounds_context = new AudioContext();\r\n\r\n        // 01 ~ 14 まですべての RomSound を読み込む\r\n        for (let index = 1; index <= 14; index++) {\r\n\r\n            // ArrayBuffer として RomSound を取得\r\n            const url = `/assets/romsounds/${index.toString().padStart(2, '0')}.wav`;\r\n            const audio_data = await APIClient.get(url, {\r\n                baseURL: '',  // BaseURL を明示的にクライアントのルートに設定\r\n                responseType: 'arraybuffer',\r\n            });\r\n\r\n            // ArrayBuffer をデコードして AudioBuffer にし、すぐ呼び出せるように貯めておく\r\n            // ref: https://ics.media/entry/200427/\r\n            this.romsounds_buffers.push(await this.romsounds_context.decodeAudioData(audio_data.data));\r\n        }\r\n    },\r\n    // 終了前に実行\r\n    beforeDestroy() {\r\n\r\n        // 仮想キーボード周りの操作をブラウザに戻す\r\n        if ('virtualKeyboard' in navigator) {\r\n            navigator.virtualKeyboard.overlaysContent = false;\r\n        }\r\n\r\n        // destroy() を実行\r\n        // 別のページへ遷移するため、DPlayer のインスタンスを確実に破棄する\r\n        // さもなければ、ブラウザがリロードされるまでバックグラウンドで永遠に再生され続けてしまう\r\n        // 不正な ID のため 404 ページに遷移されるときは実行しない\r\n        if (this.channelsStore.channel.current.display_channel_id !== 'gr999') {\r\n            this.destroy(true);\r\n        }\r\n\r\n        // AudioContext のリソースを解放\r\n        if (this.romsounds_context !== null) {\r\n            this.romsounds_context.close();\r\n        }\r\n\r\n        // このページから離れるので、チャンネル ID を gr000 (ダミー値) に戻す\r\n        this.channelsStore.display_channel_id = 'gr000';\r\n    },\r\n    // チャンネル切り替え時に実行\r\n    // コンポーネント（インスタンス）は再利用される\r\n    // ref: https://v3.router.vuejs.org/ja/guide/advanced/navigation-guards.html#%E3%83%AB%E3%83%BC%E3%83%88%E5%8D%98%E4%BD%8D%E3%82%AB%E3%82%99%E3%83%BC%E3%83%88%E3%82%99\r\n    beforeRouteUpdate(to, from, next) {\r\n\r\n        // 前の再生セッションを破棄して終了する\r\n        const destroy_promise = this.destroy(false, this.is_zapping_continuously);\r\n\r\n        // 連続してチャンネルを切り替えていることを示すフラグを立てる\r\n        // このフラグは再生セッションが初期化されるタイミングで必ず降ろされる\r\n        this.is_zapping_continuously = true;\r\n\r\n        // チャンネル ID を次のチャンネルのものに切り替える\r\n        this.channelsStore.display_channel_id = to.params.display_channel_id;\r\n\r\n        // ハッシュタグフォームのリセットがオンなら、ハッシュタグフォームを空にする\r\n        if (this.settingsStore.settings.reset_hashtag_when_program_switches === true) {\r\n            (this.$refs.Twitter as InstanceType<typeof Twitter>).tweet_hashtag = '';\r\n        }\r\n\r\n        (async () => {\r\n\r\n            // ザッピング（「前/次のチャンネル」ボタン or 上下キーショートカット）によるチャンネル移動時のみ、\r\n            // 0.5秒だけ待ってから新しい再生セッションを初期化する\r\n            // 連続してチャンネルを切り替えた際に毎回再生処理を開始しないように猶予を設ける\r\n            if (this.is_zapping === true) {\r\n                this.is_zapping = false;\r\n                this.interval_ids.push(window.setTimeout(() => {\r\n                    this.is_zapping_continuously = false;  // 新しいセッションを初期化するので、フラグを下ろす\r\n                    destroy_promise.then(() => this.init());  // destroy() の実行完了を待ってから初期化する\r\n                }, 0.5 * 1000));\r\n\r\n            // 通常のチャンネル移動時は、すぐに再生セッションを初期化する\r\n            } else {\r\n                this.is_zapping_continuously = false;  // 新しいセッションを初期化するので、フラグを下ろす\r\n                destroy_promise.then(() => this.init());  // destroy() の実行完了を待ってから初期化する\r\n            }\r\n        })();\r\n\r\n        // 次のルートに置き換え\r\n        next();\r\n    },\r\n    watch: {\r\n\r\n        // 視聴中のチャンネルが変更されたときのイベント\r\n        'channelsStore.channel': {\r\n            immediate: true,\r\n            handler(\r\n                new_channel: {previous: ILiveChannel; current: ILiveChannel; next: ILiveChannel;},\r\n                old_channel: {previous: ILiveChannel; current: ILiveChannel; next: ILiveChannel;} | undefined,\r\n            ) {\r\n\r\n                // old_channel が undefined の場合は、初回のイベント発火なので何もしない\r\n                if (old_channel === undefined) {\r\n                    return;\r\n                }\r\n\r\n                // Twitter コンポーネントのインスタンスを取得\r\n                const twitter_component = this.$refs.Twitter as InstanceType<typeof Twitter>;\r\n\r\n                // 前のチャンネル情報と次のチャンネル情報で display_channel_id が変わってたら局タグ追加処理を走らせる\r\n                if (new_channel.current.display_channel_id !== old_channel.current.display_channel_id) {\r\n                    const old_channel_hashtag = twitter_component.getChannelHashtag(old_channel.current.name) ?? '';\r\n                    twitter_component.tweet_hashtag =\r\n                        twitter_component.formatHashtag(twitter_component.tweet_hashtag.replaceAll(old_channel_hashtag, ''));\r\n                    twitter_component.updateTweetLetterCount();\r\n                }\r\n\r\n                // 取得したチャンネル情報と現在のチャンネル情報の NID-SID-EID の組み合わせが異なる場合\r\n                if ((new_channel.current.id !== old_channel.current.id) ||  // チャンネルが異なる\r\n                    (new_channel.current.program_present !== null && old_channel.current.program_present === null) ||  // 番組情報あり→番組情報なし\r\n                    (new_channel.current.program_present === null && old_channel.current.program_present !== null) ||  // 番組情報なし→番組情報あり\r\n                    ((new_channel.current.program_present !== null && old_channel.current.program_present !== null) &&\r\n                    (new_channel.current.program_present.id !== old_channel.current.program_present.id))) {  // 番組情報あり→番組情報あり & 番組が異なる\r\n\r\n                    // ハッシュタグフォームのリセットがオンなら、ハッシュタグフォームを空にする\r\n                    if (this.settingsStore.settings.reset_hashtag_when_program_switches === true) {\r\n                        twitter_component.tweet_hashtag = twitter_component.formatHashtag('');\r\n                        twitter_component.updateTweetLetterCount();\r\n                    }\r\n                }\r\n            },\r\n        },\r\n\r\n        // 前回視聴画面を開いた際にパネルが表示されていたかどうかを保存\r\n        is_panel_display() {\r\n            this.settingsStore.settings.showed_panel_last_time = this.is_panel_display;\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        // 再生セッションを初期化する\r\n        async init() {\r\n\r\n            // ローディング中の背景画像をランダムで設定\r\n            this.background_url = PlayerUtils.generatePlayerBackgroundURL();\r\n\r\n            // コントロール表示タイマーを実行\r\n            this.controlDisplayTimer();\r\n\r\n            // 現在時刻を1秒おきに更新\r\n            this.interval_ids.push(window.setInterval(() => this.time = dayjs().format('YYYY/MM/DD HH:mm:ss'), 1 * 1000));\r\n\r\n            // 00秒までの残り秒数を取得\r\n            // 現在 16:01:34 なら 26 (秒) になる\r\n            const residue_second = 60 - new Date().getSeconds();\r\n\r\n            // 00秒になるまで待ってから実行するタイマー\r\n            // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと番組情報の反映が遅れてしまう\r\n            this.interval_ids.push(window.setTimeout(() => {\r\n\r\n                // この時点で00秒なので、チャンネル情報を更新\r\n                this.channelsStore.update(true);\r\n                this.update();\r\n\r\n                // 以降、30秒おきにチャンネル情報を更新\r\n                this.interval_ids.push(window.setInterval(() => {\r\n                    this.channelsStore.update(true);\r\n                    this.update();\r\n                }, 30 * 1000));\r\n\r\n            }, residue_second * 1000));\r\n\r\n            // チャンネル情報を更新 (初回)\r\n            await this.channelsStore.update();\r\n            this.update();\r\n        },\r\n\r\n        // 画面を更新する\r\n        async update() {\r\n\r\n            // チャンネル ID が未定義なら実行しない（フェイルセーフ）\r\n            if (this.$route.params.display_channel_id === undefined) {\r\n                return;\r\n            }\r\n\r\n            // もし現時点でチャンネル ID が gr999 だった場合、チャンネル情報に存在しない不正な ID なので、404 ページにリダイレクト\r\n            if (this.channelsStore.channel.current.display_channel_id === 'gr999') {\r\n                this.$router.push({path: '/not-found/'});\r\n                return;\r\n            }\r\n\r\n            // プレイヤーがまだ初期化されていない or 他のチャンネルからの切り替えですでにプレイヤーが初期化されているけど破棄が可能\r\n            // update() 自体は初期化時以外にも1分ごとに定期実行されるため、その際に毎回プレイヤーを再初期化しないようにする\r\n            if (this.player === null || this.player_can_be_destroyed === true) {\r\n\r\n                // プレイヤー (DPlayer) 周りのセットアップ\r\n                this.initPlayer();\r\n\r\n                // サーバーから送られてくるメッセージのイベントハンドラーを初期化\r\n                await this.initEventHandler();\r\n\r\n                // キャプチャのイベントハンドラーを初期化\r\n                this.initCaptureManager();\r\n\r\n                // ショートカットキーのイベントハンドラーを初期化\r\n                // 事前に前のイベントハンドラーを削除しておかないと、重複してキー操作が実行されてしまう\r\n                // 直前で実行しないと上下キーでのチャンネル操作が動かなくなる\r\n                // @ts-ignore\r\n                document.removeEventListener('keydown', this.shortcut_key_handler);\r\n                this.initShortcutKeyHandler();\r\n            }\r\n\r\n            if (this.player === null) {\r\n                return;  // 復旧不可能 (発生しないはずだが、書いとかないと TypeScript に怒られる)\r\n            }\r\n\r\n            // 副音声がない番組でプレイヤー上で副音声に切り替えられないように\r\n            // 音声多重放送でもデュアルモノでもない番組のみ\r\n            if ((this.channelsStore.channel.current.program_present === null) ||\r\n               ((this.channelsStore.channel.current.program_present.primary_audio_type !== '1/0+1/0モード(デュアルモノ)') &&\r\n                (this.channelsStore.channel.current.program_present.secondary_audio_type === null))) {\r\n\r\n                // クラスを付与\r\n                this.player.template.audioItem[1].classList.add('dplayer-setting-audio-item--disabled');\r\n\r\n                // 現在副音声が選択されている可能性を考慮し、明示的に主音声に切り替える\r\n                if (this.player.plugins.mpegts !== undefined || this.player.plugins.liveLLHLSForKonomiTV !== undefined) {\r\n                    // プレイヤーの初期化が完了するまで少し待つ\r\n                    while (this.player === null) {\r\n                        await Utils.sleep(0.1);\r\n                    }\r\n                    this.player.template.audioItem[0].classList.add('dplayer-setting-audio-current');\r\n                    this.player.template.audioItem[1].classList.remove('dplayer-setting-audio-current');\r\n                    this.player.template.audioValue.textContent = this.player.tran('Primary audio');\r\n                    try {\r\n                        if (this.player.plugins.mpegts !== undefined && this.player.plugins.mpegts instanceof mpegts.MSEPlayer) {\r\n                            this.player.plugins.mpegts.switchPrimaryAudio();\r\n                        }\r\n                        if (this.player.plugins.liveLLHLSForKonomiTV !== undefined) {\r\n                            this.player.plugins.liveLLHLSForKonomiTV.switchPrimaryAudio();\r\n                        }\r\n                    } catch (error) {\r\n                        // pass\r\n                    }\r\n                }\r\n\r\n            // 音声多重放送かデュアルモノなので、副音声への切り替えを有効化\r\n            } else {\r\n                this.player.template.audioItem[1].classList.remove('dplayer-setting-audio-item--disabled');\r\n            }\r\n\r\n            // MediaSession API を使い、メディア通知の表示をカスタマイズ\r\n            if ('mediaSession' in navigator) {\r\n\r\n                // アートワークとして表示するアイコン\r\n                const artwork = [\r\n                    {src: '/assets/images/icons/icon-maskable-192px.png', sizes: '192x192', type: 'image/png'},\r\n                    {src: '/assets/images/icons/icon-maskable-512px.png', sizes: '512x512', type: 'image/png'},\r\n                ];\r\n\r\n                // メディア通知の表示をカスタマイズ\r\n                navigator.mediaSession.metadata = new MediaMetadata({\r\n                    title: this.channelsStore.channel.current.program_present?.title ?? '放送休止',\r\n                    artist: this.channelsStore.channel.current.name,\r\n                    artwork: artwork,\r\n                });\r\n\r\n                // 再生状況のステータスを設定\r\n                if ('setPositionState' in navigator.mediaSession) {\r\n                    navigator.mediaSession.setPositionState({\r\n                        duration: 0,  // ライブなので0（長さなしを表すらしい）に設定\r\n                        playbackRate: 1,  // ライブなので再生速度は常に1になる\r\n                    });\r\n                }\r\n\r\n                // 一旦既存のイベントハンドラーを削除\r\n                navigator.mediaSession.setActionHandler('play', null);\r\n                navigator.mediaSession.setActionHandler('pause', null);\r\n                navigator.mediaSession.setActionHandler('previoustrack', null);\r\n                navigator.mediaSession.setActionHandler('nexttrack', null);\r\n\r\n                // メディア通知上のボタンが押されたときのイベント\r\n                navigator.mediaSession.setActionHandler('play', () => this.player?.play());  // 再生\r\n                navigator.mediaSession.setActionHandler('pause', () => this.player?.pause());  // 停止\r\n                navigator.mediaSession.setActionHandler('previoustrack', async () => {  // 前のチャンネルに切り替え\r\n                    navigator.mediaSession.metadata = new MediaMetadata({\r\n                        title: this.channelsStore.channel.previous.program_present?.title ?? '放送休止',\r\n                        artist: this.channelsStore.channel.previous.name,\r\n                        artwork: artwork,\r\n                    });\r\n                    // ルーティングを前のチャンネルに置き換える\r\n                    await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.previous.display_channel_id}`});\r\n                });\r\n                navigator.mediaSession.setActionHandler('nexttrack', async () => {  // 次のチャンネルに切り替え\r\n                    navigator.mediaSession.metadata = new MediaMetadata({\r\n                        title: this.channelsStore.channel.next.program_present?.title ?? '放送休止',\r\n                        artist: this.channelsStore.channel.next.name,\r\n                        artwork: artwork,\r\n                    });\r\n                    // ルーティングを次のチャンネルに置き換える\r\n                    await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.next.display_channel_id}`});\r\n                });\r\n            }\r\n        },\r\n\r\n        // マウスが動いたりタップされた時のイベント\r\n        // 3秒間何も操作がなければコントロールを非表示にする\r\n        controlDisplayTimer(event: Event | null = null, is_player_event: boolean = false) {\r\n\r\n            // タッチデバイスかどうか\r\n            // DPlayer の UA 判定コードと同一\r\n            const is_touch_device = /iPhone|iPad|iPod|Windows|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\r\n\r\n            // タッチデバイスで mousemove 、あるいはタッチデバイス以外で touchmove か click が発火した時は実行じない\r\n            if (is_touch_device === true  && event !== null && event.type === 'mousemove') return;\r\n            if (is_touch_device === false && event !== null && (event.type === 'touchmove' || event.type === 'click')) return;\r\n\r\n            // 以前セットされたタイマーを止める\r\n            window.clearTimeout(this.control_interval_id);\r\n\r\n            // setTimeout に渡すタイマー関数\r\n            const timeout = () => {\r\n\r\n                // コメント入力フォームが表示されているときは実行しない\r\n                // タイマーを掛け直してから抜ける\r\n                if (this.player !== null && this.player.template.controller.classList.contains('dplayer-controller-comment')) {\r\n                    this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\r\n                    return;\r\n                }\r\n\r\n                // コントロールを非表示にする\r\n                this.is_control_display = false;\r\n\r\n                // プレイヤーのコントロールと設定パネルを非表示にする\r\n                if (this.player !== null) {\r\n                    this.player.controller.hide();\r\n                    this.player.setting.hide();\r\n                }\r\n            };\r\n\r\n            // タッチデバイスでプレイヤー画面がクリックされたとき\r\n            if (is_touch_device === true && is_player_event === true) {\r\n\r\n                // プレイヤーのコントロールの表示状態に合わせる\r\n                if (this.player?.controller.isShow()) {\r\n\r\n                    // コントロールを表示する\r\n                    this.is_control_display = true;\r\n\r\n                    // プレイヤーのコントロールを表示する\r\n                    this.player.controller.show();\r\n\r\n                    // 3秒間何も操作がなければコントロールを非表示にする\r\n                    // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\r\n                    this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\r\n\r\n                } else {\r\n\r\n                    // コントロールを非表示にする\r\n                    this.is_control_display = false;\r\n\r\n                    // プレイヤーのコントロールと設定パネルを非表示にする\r\n                    this.player?.controller.hide();\r\n                    this.player?.setting.hide();\r\n                }\r\n\r\n            // それ以外の画面がクリックされたとき\r\n            } else {\r\n\r\n                // コントロールを表示する\r\n                this.is_control_display = true;\r\n\r\n                // プレイヤーのコントロールを表示する\r\n                if (this.player !== null) {\r\n                    this.player.controller.show();\r\n                }\r\n\r\n                // 3秒間何も操作がなければコントロールを非表示にする\r\n                // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\r\n                this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\r\n            }\r\n        },\r\n\r\n        // プレイヤーを初期化する\r\n        initPlayer() {\r\n\r\n            // mpegts.js を window 直下に入れる\r\n            // こうしないと DPlayer が mpegts.js を認識できない\r\n            (window as any).mpegts = mpegts;\r\n\r\n            // すでに DPlayer が初期化されている場合は破棄する\r\n            // チャンネル切り替え時などが該当する\r\n            if (this.player !== null && this.player_can_be_destroyed === true) {\r\n                try {\r\n                    this.player.destroy();\r\n                } catch (error) {\r\n                    // mpegts.js をうまく破棄できない場合\r\n                    if (this.player.plugins.mpegts !== undefined) {\r\n                        this.player.plugins.mpegts.destroy();\r\n                    }\r\n                }\r\n                this.player_can_be_destroyed = false;\r\n                this.player = null;\r\n            }\r\n\r\n            // 低遅延モードであれば低遅延向けの再生バッファを、そうでなければ通常の再生バッファをセット (秒単位)\r\n            const playback_buffer_sec = this.settingsStore.settings.tv_low_latency_mode ?\r\n                PLAYBACK_BUFFER_SEC_LOW_LATENCY : PLAYBACK_BUFFER_SEC;\r\n\r\n            // DPlayer を初期化\r\n            this.player = new DPlayer({\r\n                container: this.$el.querySelector<HTMLElement>('.watch-player__dplayer')!,\r\n                theme: '#E64F97',  // テーマカラー\r\n                lang: 'ja-jp',  // 言語\r\n                live: true,  // ライブモード\r\n                liveSyncMinBufferSize: this.is_mpegts_supported ? playback_buffer_sec - 0.1 : 0,  // ライブモードで同期する際の最小バッファサイズ\r\n                loop: false,  // ループ再生 (ライブのため無効化)\r\n                airplay: false,  // AirPlay 機能 (うまく動かないため無効化)\r\n                autoplay: true,  // 自動再生\r\n                hotkey: false,  // ショートカットキー（こちらで制御するため無効化）\r\n                screenshot: false,  // スクリーンショット (こちらで制御するため無効化)\r\n                crossOrigin: 'anonymous',  // CORS を有効化\r\n                volume: 1.0,  // 音量の初期値\r\n                // 映像\r\n                video: {\r\n                    // デフォルトの品質\r\n                    // ラジオチャンネルでは常に 48KHz/192kbps に固定する\r\n                    defaultQuality: (this.channelsStore.channel.current.is_radiochannel) ?\r\n                        '48kHz/192kbps' : this.settingsStore.settings.tv_streaming_quality,\r\n                    // 品質リスト\r\n                    quality: (() => {\r\n                        const qualities: DPlayerType.VideoQuality[] = [];\r\n\r\n                        // ラジオチャンネル\r\n                        // API が受け付ける品質の値は通常のチャンネルと同じだが (手抜き…)、実際の品質は 48KHz/192kbps で固定される\r\n                        // ラジオチャンネルの場合は、1080p と渡しても 48kHz/192kbps 固定の音声だけの MPEG-TS が配信される\r\n                        if (this.channelsStore.channel.current.is_radiochannel) {\r\n                            // mpegts.js\r\n                            if (this.is_mpegts_supported === true) {\r\n                                qualities.push({\r\n                                    name: '48kHz/192kbps',\r\n                                    type: 'mpegts',\r\n                                    url: `${Utils.api_base_url}/streams/live/${this.channelsStore.display_channel_id}/1080p/mpegts`,\r\n                                });\r\n                            // LL-HLS (mpegts.js がサポートされていない場合)\r\n                            } else {\r\n                                qualities.push({\r\n                                    name: '48kHz/192kbps',\r\n                                    type: 'live-llhls-for-KonomiTV',\r\n                                    url: `${Utils.api_base_url}/streams/live/${this.channelsStore.display_channel_id}/1080p/ll-hls`,\r\n                                });\r\n                            }\r\n\r\n                        // 通常のチャンネル\r\n                        } else {\r\n\r\n                            // ブラウザが H.265 / HEVC の再生に対応していて、かつ通信節約モードが有効なとき\r\n                            // API に渡す画質に -hevc のプレフィックスをつける\r\n                            let hevc_prefix = '';\r\n                            if (PlayerUtils.isHEVCVideoSupported() && this.settingsStore.settings.tv_data_saver_mode === true) {\r\n                                hevc_prefix = '-hevc';\r\n                            }\r\n\r\n                            // 品質リストを作成\r\n                            for (const quality of ['1080p-60fps', '1080p', '810p', '720p', '540p', '480p', '360p', '240p']) {\r\n                                // mpegts.js\r\n                                if (this.is_mpegts_supported === true) {\r\n                                    qualities.push({\r\n                                        name: quality === '1080p-60fps' ? '1080p (60fps)' : quality,\r\n                                        type: 'mpegts',\r\n                                        url: `${Utils.api_base_url}/streams/live/${this.channelsStore.display_channel_id}/${quality}${hevc_prefix}/mpegts`,\r\n                                    });\r\n                                // LL-HLS (mpegts.js がサポートされていない場合)\r\n                                } else {\r\n                                    qualities.push({\r\n                                        name: quality === '1080p-60fps' ? '1080p (60fps)' : quality,\r\n                                        type: 'live-llhls-for-KonomiTV',\r\n                                        url: `${Utils.api_base_url}/streams/live/${this.channelsStore.display_channel_id}/${quality}${hevc_prefix}/ll-hls`,\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                        return qualities;\r\n                    })(),\r\n                },\r\n                // コメント\r\n                danmaku: {\r\n                    user: 'KonomiTV',  // 便宜上 KonomiTV に固定\r\n                    speedRate: this.settingsStore.settings.comment_speed_rate,  // コメントの流れる速度\r\n                    fontSize: this.settingsStore.settings.comment_font_size,  // コメントのフォントサイズ\r\n                    closeCommentFormAfterSend: this.settingsStore.settings.close_comment_form_after_sending,  // コメント送信後にコメントフォームを閉じる\r\n                },\r\n                // コメント API バックエンド\r\n                apiBackend: {\r\n                    // コメント取得時\r\n                    read: (options) => {\r\n                        // 空の配列を返す (こうするとコメント0件と認識される)\r\n                        options.success([]);\r\n                    },\r\n                    // コメント送信時\r\n                    send: async (options) => {\r\n                        // Comment コンポーネント内のコメント送信メソッドを呼び出す\r\n                        // ref: https://stackoverflow.com/a/65729556/17124142 ($refs への型設定)\r\n                        (this.$refs.Comment as InstanceType<typeof Comment>).sendComment(options);\r\n                    },\r\n                },\r\n                // プラグイン\r\n                pluginOptions: {\r\n                    // mpegts.js\r\n                    mpegts: {\r\n                        config: {\r\n                            // Web Worker を有効にする\r\n                            enableWorker: true,\r\n                            // Media Source Extensions API 向けの Web Worker を有効にする\r\n                            // メインスレッドから再生処理を分離することで、低スペック端末で DOM 描画の遅延が影響して映像再生が詰まる問題が解消される\r\n                            // MSE in Workers が使えるかは MediaSource.canConstructInDedicatedWorker が true かどうかで判定できる\r\n                            // MediaSource.canConstructInDedicatedWorker は TypeScript の仕様上型定義の追加が難しいため any で回避している\r\n                            // ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/canConstructInDedicatedWorker_static\r\n                            enableWorkerForMSE: window.MediaSource && (window.MediaSource as any).canConstructInDedicatedWorker === true,\r\n                            // IO 層のバッファを禁止する\r\n                            enableStashBuffer: false,\r\n                            // HTMLMediaElement の内部バッファによるライブストリームの遅延を追跡する\r\n                            // liveBufferLatencyChasing と異なり、いきなり再生時間をスキップするのではなく、\r\n                            // 再生速度を少しだけ上げることで再生を途切れさせることなく遅延を追跡する\r\n                            liveSync: this.settingsStore.settings.tv_low_latency_mode,\r\n                            // 許容する HTMLMediaElement の内部バッファの最大値 (秒単位, 3秒)\r\n                            liveSyncMaxLatency: 3,\r\n                            // HTMLMediaElement の内部バッファ (遅延) が liveSyncMaxLatency を超えたとき、ターゲットとする遅延時間 (秒単位)\r\n                            liveSyncTargetLatency: playback_buffer_sec,\r\n                            // ライブストリームの遅延の追跡に利用する再生速度 (x1.1)\r\n                            // 遅延が 3 秒を超えたとき、遅延が playback_buffer_sec を下回るまで再生速度が x1.1 に設定される\r\n                            liveSyncPlaybackRate: 1.1,\r\n                        }\r\n                    },\r\n                    // aribb24.js\r\n                    aribb24: {\r\n                        // 文字スーパーを表示するかどうか\r\n                        disableSuperimposeRenderer: this.settingsStore.settings.tv_show_superimpose === false,\r\n                        // 描画フォント\r\n                        normalFont: `\"${this.settingsStore.settings.caption_font}\", \"Rounded M+ 1m for ARIB\", sans-serif`,\r\n                        // 縁取りする色\r\n                        forceStrokeColor: this.settingsStore.settings.always_border_caption_text,\r\n                        // 背景色\r\n                        forceBackgroundColor: (() => {\r\n                            if (this.settingsStore.settings.specify_caption_opacity === true) {\r\n                                const opacity = this.settingsStore.settings.caption_opacity;\r\n                                return `rgba(0, 0, 0, ${opacity})`;\r\n                            } else {\r\n                                return undefined;\r\n                            }\r\n                        })(),\r\n                        // DRCS 文字を対応する Unicode 文字に置換\r\n                        drcsReplacement: true,\r\n                        // 高解像度の字幕 Canvas を取得できるように\r\n                        enableRawCanvas: true,\r\n                        // 縁取りに strokeText API を利用\r\n                        useStroke: true,\r\n                        // Unicode 領域の代わりに私用面の領域を利用 (Windows TV 系フォントのみ)\r\n                        usePUA: (() => {\r\n                            const font = this.settingsStore.settings.caption_font;\r\n                            const context = document.createElement('canvas').getContext('2d')!;\r\n                            context.font = '10px \"Rounded M+ 1m for ARIB\"';\r\n                            context.fillText('Test', 0, 0);\r\n                            context.font = `10px \"${font}\"`;\r\n                            context.fillText('Test', 0, 0);\r\n                            if (font.startsWith('Windows TV')) {\r\n                                return true;\r\n                            } else {\r\n                                return false;\r\n                            }\r\n                        })(),\r\n                        // 文字スーパーの PRA (内蔵音再生コマンド) のコールバックを指定\r\n                        PRACallback: async (index: number) => {\r\n\r\n                            // 設定で文字スーパーが無効なら実行しない\r\n                            if (this.settingsStore.settings.tv_show_superimpose === false) return;\r\n\r\n                            // index に応じた内蔵音を鳴らす\r\n                            // ref: https://ics.media/entry/200427/\r\n                            // ref: https://www.ipentec.com/document/javascript-web-audio-api-change-volume\r\n\r\n                            // 自動再生ポリシーに引っかかったなどで AudioContext が一時停止されている場合、一度 resume() する必要がある\r\n                            // resume() するまでに何らかのユーザーのジェスチャーが行われているはず…\r\n                            // なくても動くこともあるみたいだけど、念のため\r\n                            if (this.romsounds_context!.state === 'suspended') {\r\n                                await this.romsounds_context!.resume();\r\n                            }\r\n\r\n                            // index で指定された音声データを読み込み\r\n                            const buffer_source_node = this.romsounds_context!.createBufferSource();\r\n                            buffer_source_node.buffer = this.romsounds_buffers[index];\r\n\r\n                            // GainNode につなげる\r\n                            const gain_node = this.romsounds_context!.createGain();\r\n                            buffer_source_node.connect(gain_node);\r\n\r\n                            // 出力につなげる\r\n                            gain_node.connect(this.romsounds_context!.destination);\r\n\r\n                            // 音量を元の wav の3倍にする (1倍だと結構小さめ)\r\n                            gain_node.gain.value = 3;\r\n\r\n                            // 再生開始\r\n                            buffer_source_node.start(0);\r\n                        },\r\n                    }\r\n                },\r\n                // 字幕\r\n                subtitle: {\r\n                    type: 'aribb24',  // aribb24.js を有効化\r\n                }\r\n            });\r\n\r\n            // デバッグ用にプレイヤーインスタンスも window 直下に入れる\r\n            (window as any).player = this.player;\r\n\r\n            // プレイヤー側のコントロール非表示タイマーを無効化（上書き）\r\n            // 無効化しておかないと、controlDisplayTimer() と競合してしまう\r\n            // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/v1.30.2/src/ts/controller.ts#L397-L405 にある\r\n            this.player.controller.setAutoHide = (time: number) => {};\r\n\r\n            // ニコニコ実況セッションを初期化し、随時コメントを受信できるようにする\r\n            // 初期化以降の処理はすべて LiveCommentManager に任せる\r\n            (this.$refs.Comment as InstanceType<typeof Comment>).initSession(this.player, this.channelsStore.display_channel_id);\r\n\r\n            // ***** コメント送信時のイベントハンドラー *****\r\n\r\n            // コメントが送信されたときに、プレイヤーからのコメント送信から間もないかどうかのフラグを立てる (0.1秒後に解除する)\r\n            // コメントを送信するとコメント入力フォームへのフォーカスが外れるため、ページ全体の keydown イベントでは\r\n            // Enter キーの押下がコメント送信由来のイベントかキャプチャ拡大表示由来のイベントかを判断できない\r\n            // そこで、コメント入力フォームフォーカス中に Enter キーが押された場合（=コメント送信時）に 0.1 秒間フラグを立てることで、\r\n            // ショートカットキーハンドラーがコメント送信由来のイベントであることを判定できるようにしている\r\n            // TODO: 普通に KeyboardEvent.target が dplayer-comment-input かで判断できるんじゃね？\r\n            this.player.template.commentInput.addEventListener('keydown', (event) => {\r\n                if (event.code === 'Enter') {\r\n                    this.is_comment_send_just_did = true;\r\n                    setTimeout(() => this.is_comment_send_just_did = false, 100);\r\n                }\r\n            });\r\n\r\n            // ***** 設定パネルのショートカット一覧へのリンクのイベントハンドラー *****\r\n\r\n            // 設定パネルにショートカット一覧を表示するリンクを動的に追加する\r\n            // タッチデバイスでは実行しない\r\n            const is_touch_device = /iPhone|iPad|iPod|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\r\n            if (is_touch_device === false) {\r\n                this.player.template.settingOriginPanel.insertAdjacentHTML('beforeend', `\r\n                <div class=\"dplayer-setting-item dplayer-setting-keyboard-shortcut\">\r\n                    <span class=\"dplayer-label\">キーボードショートカット</span>\r\n                    <div class=\"dplayer-toggle\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\">\r\n                            <path d=\"M22 16l-10.105-10.6-1.895 1.987 8.211 8.613-8.211 8.612 1.895 1.988 8.211-8.613z\"></path>\r\n                        </svg>\r\n                    </div>\r\n                </div>`);\r\n\r\n                // 設定パネルのショートカット一覧を表示するリンクがクリックされたときのイベント\r\n                // リアクティブではないので、手動でやらないといけない…\r\n                this.$el.querySelector('.dplayer-setting-keyboard-shortcut')!.addEventListener('click', () => {\r\n                    this.player?.setting.hide();  // 設定パネルを閉じる\r\n                    this.shortcut_key_modal = true;\r\n                });\r\n            }\r\n\r\n            // ***** フルスクリーンのイベントハンドラー *****\r\n\r\n            // フルスクリーンにするコンテナ要素（ページ全体）\r\n            const fullscreen_container = document.querySelector('.v-application')!;\r\n            this.fullscreen_handler = () => {\r\n                this.is_fullscreen = this.player?.fullScreen.isFullScreen() === true;\r\n            };\r\n            if (fullscreen_container.onfullscreenchange !== undefined) {\r\n                fullscreen_container.addEventListener('fullscreenchange', this.fullscreen_handler);\r\n            } else {\r\n                fullscreen_container.addEventListener('webkitfullscreenchange', this.fullscreen_handler);\r\n            }\r\n\r\n            // DPlayer のフルスクリーン関係のメソッドを無理やり上書きし、KonomiTV の UI と統合する\r\n            // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/master/src/js/fullscreen.js にある\r\n            // フルスクリーンかどうか\r\n            this.player.fullScreen.isFullScreen = (type?: DPlayerType.FullscreenType) => {\r\n                return !!(document.fullscreenElement || document.webkitFullscreenElement);\r\n            };\r\n            // フルスクリーンをリクエスト\r\n            this.player.fullScreen.request = (type?: DPlayerType.FullscreenType) => {\r\n                if (this.player === null) return;\r\n\r\n                // すでにフルスクリーンだったらキャンセルする\r\n                if (this.player.fullScreen.isFullScreen()) {\r\n                    this.player.fullScreen.cancel();\r\n                    return;\r\n                }\r\n\r\n                // フルスクリーンをリクエスト\r\n                // Safari は webkit のベンダープレフィックスが必要\r\n                fullscreen_container.requestFullscreen = fullscreen_container.requestFullscreen || fullscreen_container.webkitRequestFullscreen;\r\n                if (fullscreen_container.requestFullscreen) {\r\n                    fullscreen_container.requestFullscreen();\r\n                } else {\r\n                    // フルスクリーンがサポートされていない場合はエラーを表示\r\n                    this.player.notice('iPhone Safari は動画のフルスクリーン表示に対応していません。', undefined, undefined, '#FF6F6A');\r\n                    return;\r\n                }\r\n\r\n                // 画面の向きを横に固定 (Screen Orientation API がサポートされている場合)\r\n                if (screen.orientation) {\r\n                    screen.orientation.lock('landscape').catch(() => {});\r\n                }\r\n            };\r\n            // フルスクリーンをキャンセル\r\n            this.player.fullScreen.cancel = (type?: DPlayerType.FullscreenType) => {\r\n\r\n                // フルスクリーンを終了\r\n                // Safari は webkit のベンダープレフィックスが必要\r\n                document.exitFullscreen = document.exitFullscreen || document.webkitExitFullscreen;\r\n                if (document.exitFullscreen) {\r\n                    document.exitFullscreen();\r\n                }\r\n\r\n                // 画面の向きの固定を解除\r\n                if (screen.orientation) {\r\n                    screen.orientation.unlock();\r\n                }\r\n            };\r\n\r\n            // ***** 再生/停止/画質切り替え時のイベントハンドラー *****\r\n\r\n            // 再生/停止されたとき\r\n            // 通知バーからの制御など、画面から以外の外的要因で再生/停止が行われる事もある\r\n            const on_play_or_pause = () => {\r\n\r\n                // まだ設定パネルが表示されていたら非表示にする\r\n                this.player?.setting.hide();\r\n\r\n                // コントロールを表示する\r\n                this.controlDisplayTimer();\r\n            };\r\n            this.player.on('play', on_play_or_pause);\r\n            this.player.on('pause', on_play_or_pause);\r\n\r\n            // 画質の切り替えが開始されたときのイベント\r\n            this.player.on('quality_start', async () => {\r\n\r\n                // ローディング中の背景画像をランダムで設定\r\n                this.background_url = PlayerUtils.generatePlayerBackgroundURL();\r\n\r\n                // イベントソースを閉じる\r\n                if (this.eventsource !== null) {\r\n                    this.eventsource.close();\r\n                    this.eventsource = null;\r\n                }\r\n\r\n                // 新しい EventSource を作成\r\n                // 画質ごとにイベント API は異なるため、一度破棄してから作り直す\r\n                await this.initEventHandler();\r\n            });\r\n\r\n            // 停止状態でかつ再生時間からバッファが 30 秒以上離れていないかを監視し、そうなっていたら強制的にシークする\r\n            // mpegts.js の仕様上、MSE に未再生のバッファがたまり過ぎると SourceBuffer が追加できなくなるため、強制的に接続が切断されてしまう\r\n            // LL-HLS 再生時も、ずっと停止したままだとプレイリストやセグメントに HTTP リクエストされなくなり、サーバー側でタイムアウトさせられてしまう\r\n            // mpegts.js 再生時は 60 秒、LL-HLS 再生時は 30 秒おきに監視する (LL-HLS 再生時はバッファの状態に関わらずシークする)\r\n            if (this.is_mpegts_supported === true) {\r\n                this.interval_ids.push(window.setInterval(() => {\r\n                    if (this.player === null) return;\r\n                    if ((this.player.video.paused && this.player.video.buffered.length >= 1) &&\r\n                        (this.player.video.buffered.end(0) - this.player.video.currentTime > 30)) {\r\n                        this.player.sync();\r\n                    }\r\n                }, 60 * 1000));\r\n            } else {\r\n                this.interval_ids.push(window.setInterval(() => {\r\n                    if (this.player === null) return;\r\n                    if (this.player.video.paused) {\r\n                        this.player.sync();\r\n                    }\r\n                }, 30 * 1000));\r\n            }\r\n        },\r\n\r\n        // イベントハンドラーを初期化する\r\n        async initEventHandler() {\r\n\r\n            // ***** プレイヤー再生開始時のイベントハンドラー *****\r\n\r\n            if (this.player === null) return;\r\n\r\n            // データ放送マネージャーを初期化\r\n            // TODO: これは暫定的なものでリファクタリング時は周囲含めて総取っ替えする\r\n            if (this.data_broadcasting_manager !== null) {\r\n                await this.data_broadcasting_manager.destroy();\r\n            }\r\n            this.data_broadcasting_manager = new LiveDataBroadcastingManager(this.player);\r\n            await this.data_broadcasting_manager.init();\r\n\r\n            // 必ず最初はローディング状態とする\r\n            this.is_loading = true;\r\n\r\n            // 音量を 0 に設定\r\n            this.player.video.volume = 0;\r\n\r\n            // mpegts.js 再生時のみ、mpegts.js のログハンドラーを設定する\r\n            if (this.is_mpegts_supported === true && this.player.plugins.mpegts !== undefined) {\r\n                this.player.plugins.mpegts.on(mpegts.Events.ERROR, async (error_type: mpegts.ErrorTypes, detail: mpegts.ErrorDetails) => {\r\n                    // 再生中にエラーが発生した場合\r\n                    // ワークアラウンドとして通知した後にページをリロードする\r\n                    // TODO: ロジックを整理してストリーミングを再起動できるようにする\r\n                    this.player!.notice(`再生中にエラーが発生しました。(${error_type}: ${detail}) 3秒後にリロードします。`, -1, undefined, '#FF6F6A');\r\n                    await Utils.sleep(3);\r\n                    location.reload();\r\n                });\r\n            // LL-HLS 再生時は、error イベントを監視してエラーが発生したらページをリロードする\r\n            } else if (this.is_mpegts_supported === false) {\r\n                this.player.on('error', async () => {\r\n                    // オフライン状態では実行しない\r\n                    if (this.is_offline === true) {\r\n                        return;\r\n                    }\r\n                    // エラーイベントが発生したが、エラー情報が取得できない場合は何もしない\r\n                    if (!this.player?.video.error) {\r\n                        return;\r\n                    }\r\n                    this.player.notice(`再生中にエラーが発生しました。(${this.player.video.error.code}: ${this.player.video.error.message}) 3秒後にリロードします。`, -1, undefined, '#FF6F6A');\r\n                    await Utils.sleep(3);\r\n                    location.reload();\r\n                });\r\n            }\r\n\r\n            // LL-HLS 再生時のみ、ローディングが終わるまでは表示上再生状態を維持する\r\n            // play() が正常に実行できればいいのだが、Safari の自動再生制限により失敗することがあるので、\r\n            // その際はアイコンの HTML を書き換えたりして強制的に再生状態にする (苦肉の策)\r\n            const force_play = () => {\r\n                this.player?.video.play().catch(() => {\r\n                    console.warn('HTMLVideoElement.play() rejected. run fallback.');\r\n                    const pause_icon = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 17 32\"><path d=\"M14.080 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048zM2.88 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048z\"></path></svg>';\r\n                    this.player!.template.playButton.innerHTML = pause_icon;\r\n                    this.player!.template.mobilePlayButton.innerHTML = pause_icon;\r\n                    this.player!.container.classList.remove('dplayer-paused');\r\n                    this.player!.container.classList.add('dplayer-playing');\r\n                    this.player!.danmaku!.play();\r\n                });\r\n                // ローディング表示が消えたタイミングでイベントを登録解除\r\n                if (this.is_loading === false) {\r\n                    this.player!.video.removeEventListener('pause', force_play);\r\n                    return;\r\n                }\r\n            };\r\n            if (this.is_mpegts_supported === false) {\r\n                this.player.video.addEventListener('pause', force_play);\r\n                force_play();  // 一度実行しておく\r\n            }\r\n\r\n            // 再生準備ができていない場合に復旧を試みる\r\n            const recover = async () => {\r\n                await Utils.sleep(0.5);\r\n                // この時点で映像が停止している場合、復旧を試みる\r\n                if (this.player?.video.readyState! < 3) {\r\n                    console.log('player.video.readyState < HAVE_FUTURE_DATA. trying to recover.');\r\n                    this.player?.video.pause();\r\n                    await Utils.sleep(0.1);\r\n                    this.player?.video.play().catch(() => {\r\n                        console.warn('HTMLVideoElement.play() rejected. paused.');\r\n                        this.player?.pause();\r\n                    });\r\n                }\r\n            };\r\n\r\n            // 再生バッファを調整し、再生準備ができた段階でプレイヤーの背景を非表示にするイベントを登録\r\n            // 実際に再生可能になるのを待ってから実行する\r\n            // 画質切り替え時にも実行する必要があるので、あえてこの位置に記述している\r\n            const on_canplay = async () => {\r\n\r\n                // 自分自身のイベントを登録解除 (重複実行を避ける)\r\n                if (this.player === null) return;\r\n                this.player.video.oncanplay = null;\r\n                this.player.video.oncanplaythrough = null;\r\n\r\n                // mpegts.js 利用時のみ実行\r\n                if (this.is_mpegts_supported === true) {\r\n\r\n                    // 再生バッファ調整のため、一旦停止させる\r\n                    // this.player.video.pause() を使うとプレイヤーの UI アイコンが停止してしまうので、代わりに playbackRate を使う\r\n                    this.player.video.playbackRate = 0;\r\n\r\n                    // 再生バッファを取得する (取得に失敗した場合は 0 を返す)\r\n                    const get_playback_buffer_sec = (): number => {\r\n                        let buffered_end = 0;\r\n                        if (this.player!.video.buffered.length >= 1) {\r\n                            buffered_end = this.player!.video.buffered.end(0);\r\n                        }\r\n                        return (Math.round((buffered_end - this.player!.video.currentTime) * 1000) / 1000);\r\n                    };\r\n\r\n                    // 低遅延モードであれば低遅延向けの再生バッファを、そうでなければ通常の再生バッファをセット (秒単位)\r\n                    const playback_buffer_sec = this.settingsStore.settings.tv_low_latency_mode ?\r\n                        PLAYBACK_BUFFER_SEC_LOW_LATENCY : PLAYBACK_BUFFER_SEC;\r\n\r\n                    // 再生バッファが playback_buffer_sec を超えるまで 0.1 秒おきに再生バッファをチェックする\r\n                    // 再生バッファが playback_buffer_sec を切ると再生が途切れやすくなるので (特に動きの激しい映像)、\r\n                    // 再生開始までの時間を若干犠牲にして、再生バッファの調整と同期に時間を割く\r\n                    // playback_buffer_sec の値は mpegts.js に渡す liveSyncTargetLatency プロパティに渡す値と共通\r\n                    let current_playback_buffer_sec = get_playback_buffer_sec();\r\n                    while (current_playback_buffer_sec < playback_buffer_sec) {\r\n                        await Utils.sleep(0.1);\r\n                        current_playback_buffer_sec = get_playback_buffer_sec();\r\n                    }\r\n\r\n                    // 再生開始\r\n                    this.player.video.playbackRate = 1;\r\n                }\r\n\r\n                // 再生が一時的に止まってバッファリングしているとき/再び再生されはじめたときのイベント\r\n                // バッファリングの Progress Circular の表示を制御する\r\n                // 同期が終わってからの方が都合が良い\r\n                this.player.video.addEventListener('waiting', () => this.is_video_buffering = true);\r\n                this.player.video.addEventListener('playing', () => {\r\n                    this.is_video_buffering = false;\r\n                    recover();\r\n                });\r\n\r\n                // ローディング状態を解除し、映像を表示する\r\n                this.is_loading = false;\r\n\r\n                // ローディングが終わったので強制的に見かけ上再生状態に見せるのをやめる\r\n                if (this.is_mpegts_supported === false) {\r\n                    this.player!.video.removeEventListener('pause', force_play);\r\n                }\r\n\r\n                // バッファリング中の Progress Circular を非表示にする\r\n                this.is_video_buffering = false;\r\n                recover();\r\n\r\n                if (this.channelsStore.channel.current.is_radiochannel) {\r\n                    // ラジオチャンネルでは引き続き映像の代わりとして背景画像を表示し続ける\r\n                    this.is_background_display = true;\r\n                } else {\r\n                    // 背景画像をフェードアウト\r\n                    this.is_background_display = false;\r\n                }\r\n\r\n                // 再生開始時に音量を徐々に上げる\r\n                // いきなり再生されるよりも体験が良い\r\n                const current_volume = this.player.user.get('volume');\r\n                while ((this.player.video.volume + 0.05) < current_volume) {\r\n                    // 小数第2位以下を切り捨てて、浮動小数の誤差で 1 (100%) を微妙に超えてしまいエラーになるのを避ける\r\n                    this.player.video.volume = Utils.mathFloor(this.player.video.volume + 0.05, 2);\r\n                    await Utils.sleep(0.02);\r\n                }\r\n                this.player.video.volume = current_volume;\r\n            };\r\n            this.player.video.oncanplay = on_canplay;\r\n            this.player.video.oncanplaythrough = on_canplay;\r\n\r\n            // ***** KonomiTV サーバーのイベント API のイベントハンドラー *****\r\n\r\n            // EventSource を作成\r\n            const eventsource_url = (this.player!.quality!.url as string).replace('/mpegts', '/events').replace(/\\/ll-hls.*/, '/events');\r\n            this.eventsource = new EventSource(eventsource_url);\r\n\r\n            // 初回接続時のイベント\r\n            this.eventsource.addEventListener('initial_update', (event_raw: MessageEvent) => {\r\n\r\n                // イベントを取得\r\n                const event = JSON.parse(event_raw.data);\r\n                console.log(`[initial_update] Status: ${event.status} / Detail: ${event.detail}`);\r\n\r\n                // ステータスごとに処理を振り分け\r\n                switch (event.status) {\r\n\r\n                    // Status: Standby\r\n                    case 'Standby': {\r\n\r\n                        // バッファリング中の Progress Circular を表示\r\n                        this.is_video_buffering = true;\r\n\r\n                        // プレイヤーの背景を表示する\r\n                        this.is_background_display = true;\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // ステータスが更新されたときのイベント\r\n            this.eventsource.addEventListener('status_update', async (event_raw: MessageEvent) => {\r\n\r\n                // イベントを取得\r\n                if (this.player === null) return;\r\n                const event = JSON.parse(event_raw.data);\r\n                console.log(`[status_update] Status: ${event.status} / Detail: ${event.detail}`);\r\n\r\n                // 視聴者数を更新\r\n                this.channelsStore.updateChannel(this.channelsStore.display_channel_id, {\r\n                    ...this.channelsStore.channel.current,\r\n                    viewer_count: event.client_count,\r\n                });\r\n\r\n                // ステータスごとに処理を振り分け\r\n                switch (event.status) {\r\n\r\n                    // Status: Standby\r\n                    case 'Standby': {\r\n\r\n                        // ステータス詳細をプレイヤーに表示\r\n                        if (!this.player.template.notice.textContent!.includes('画質を')) {  // 画質切り替えの表示を上書きしない\r\n                            this.player.notice(event.detail, -1);\r\n                        }\r\n\r\n                        // バッファリング中の Progress Circular を表示\r\n                        this.is_video_buffering = true;\r\n\r\n                        // プレイヤーの背景を表示する\r\n                        this.is_background_display = true;\r\n                        break;\r\n                    }\r\n\r\n                    // Status: ONAir\r\n                    case 'ONAir': {\r\n\r\n                        // ステータス詳細をプレイヤーから削除\r\n                        if (!this.player.template.notice.textContent!.includes('画質を')) {  // 画質切り替えの表示を上書きしない\r\n                            this.player.notice(this.player.template.notice.textContent!, 0.000001);\r\n                        }\r\n\r\n                        // LL-HLS ストリーミング時のみ、このタイミングで映像をロードして再生を開始する\r\n                        if (this.is_mpegts_supported === false) {\r\n                            this.player.video.load();\r\n                            this.player.video.play();\r\n                            on_canplay();\r\n                        }\r\n\r\n                        // 再生が開始される前にチャンネルを切り替えた際にコメントが流れない不具合のワークアラウンド\r\n                        if (this.player.container.classList.contains('dplayer-paused')) {\r\n                            this.player.container.classList.remove('dplayer-paused');\r\n                            this.player.container.classList.add('dplayer-playing');\r\n                        }\r\n\r\n                        // 前のプレイヤーインスタンスの Picture-in-Picture ウインドウが残っている場合、終了させてからもう一度切り替える\r\n                        // チャンネル切り替えが完了しても前の Picture-in-Picture ウインドウは再利用されないため、一旦終了させるしかない\r\n                        if (document.pictureInPictureElement) {\r\n                            document.exitPictureInPicture();\r\n                            this.player.video.requestPictureInPicture();\r\n                        }\r\n                        break;\r\n                    }\r\n\r\n                    // Status: Idling\r\n                    case 'Idling': {\r\n\r\n                        // 本来誰も視聴していないことを示す Idling ステータスを受信している場合、何らかの理由で\r\n                        // ストリーミング API への接続が切断された可能性が高いので、ワークアラウンドとして通知した後にページをリロードする\r\n                        // TODO: ロジックを整理してストリーミングを再起動できるようにする\r\n                        this.player.notice('ストリーミング接続が切断されました。3秒後にリロードします。', -1, undefined, '#FF6F6A');\r\n                        await Utils.sleep(3);\r\n                        location.reload();\r\n\r\n                        break;\r\n                    }\r\n\r\n                    // Status: Restart\r\n                    case 'Restart': {\r\n\r\n                        // ステータス詳細をプレイヤーに表示\r\n                        this.player.notice(event.detail, -1);\r\n\r\n                        // プレイヤーを再起動する\r\n                        this.player.switchVideo({\r\n                            url: this.player.quality!.url,\r\n                            type: this.player.quality!.type,\r\n                        });\r\n\r\n                        // 再起動しただけでは自動再生されないので、明示的に\r\n                        this.player.play();\r\n\r\n                        // バッファリング中の Progress Circular を表示\r\n                        this.is_video_buffering = true;\r\n\r\n                        // プレイヤーの背景を表示する\r\n                        this.is_background_display = true;\r\n                        break;\r\n                    }\r\n\r\n                    // Status: Offline\r\n                    // 基本的に Offline は放送休止中やエラーなどで復帰の見込みがない状態\r\n                    case 'Offline': {\r\n\r\n                        // 「ライブストリームは Offline です。」のステータス詳細を受信すること自体が不正な状態\r\n                        // ストリーミング API への接続が切断された可能性が高いので、ワークアラウンドとして通知した後にページをリロードする\r\n                        // TODO: ロジックを整理してストリーミングを再起動できるようにする\r\n                        if (event.detail === 'ライブストリームは Offline です。') {\r\n                            this.player?.notice('ストリーミング接続が切断されました。3秒後にリロードします。', -1, undefined, '#FF6F6A');\r\n                            await Utils.sleep(3);\r\n                            location.reload();\r\n                        }\r\n\r\n                        if (this.player !== null) {\r\n\r\n                            // ステータス詳細をプレイヤーに表示\r\n                            // 動画の読み込みエラーが送出された時にメッセージを上書きする\r\n                            this.player.notice(event.detail, -1);\r\n                            this.player.video.onerror = () => {\r\n                                this.player!.notice(event.detail, -1);\r\n                                this.player!.video.onerror = null;\r\n                            };\r\n\r\n                            // 描画されたコメントをクリア\r\n                            this.player?.danmaku?.clear();\r\n\r\n                            // 動画を停止する\r\n                            this.player.video.pause();\r\n                        }\r\n\r\n                        // イベントソースを閉じる（復帰の見込みがないため）\r\n                        if (this.eventsource !== null) {\r\n                            this.eventsource.close();\r\n                            this.eventsource = null;\r\n                        }\r\n\r\n                        // プレイヤーの背景を表示する\r\n                        this.is_background_display = true;\r\n\r\n                        // バッファリング中の Progress Circular を非表示にする\r\n                        this.is_loading = false;\r\n                        this.is_video_buffering = false;\r\n\r\n                        this.is_offline = true;\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // ステータス詳細が更新されたときのイベント\r\n            this.eventsource.addEventListener('detail_update', (event_raw: MessageEvent) => {\r\n\r\n                // イベントを取得\r\n                if (this.player === null) return;\r\n                const event = JSON.parse(event_raw.data);\r\n                console.log(`[detail_update] Status: ${event.status} Detail:${event.detail}`);\r\n\r\n                // 視聴者数を更新\r\n                this.channelsStore.updateChannel(this.channelsStore.display_channel_id, {\r\n                    ...this.channelsStore.channel.current,\r\n                    viewer_count: event.client_count,\r\n                });\r\n\r\n                // ステータスごとに処理を振り分け\r\n                switch (event.status) {\r\n\r\n                    // Status: Standby\r\n                    case 'Standby': {\r\n\r\n                        // ステータス詳細をプレイヤーに表示\r\n                        this.player.notice(event.detail, -1);\r\n\r\n                        // プレイヤーの背景を表示する\r\n                        if (!this.is_background_display) {\r\n                            this.is_background_display = true;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // クライアント数（だけ）が更新されたときのイベント\r\n            this.eventsource.addEventListener('clients_update', (event_raw: MessageEvent) => {\r\n\r\n                // イベントを取得\r\n                const event = JSON.parse(event_raw.data);\r\n\r\n                // 視聴者数を更新\r\n                this.channelsStore.updateChannel(this.channelsStore.display_channel_id, {\r\n                    ...this.channelsStore.channel.current,\r\n                    viewer_count: event.client_count,\r\n                });\r\n            });\r\n        },\r\n\r\n        // ショートカットキーを初期化する\r\n        initShortcutKeyHandler() {\r\n\r\n            const twitter_component = (this.$refs.Twitter as InstanceType<typeof Twitter>)!;\r\n            const tweet_form_element = twitter_component.$el.querySelector<HTMLDivElement>('.tweet-form__textarea')!;\r\n\r\n            // IME 変換中の状態を保存する\r\n            for (const element of document.querySelectorAll('input[type=text],input[type=search],textarea')) {\r\n                element.addEventListener('compositionstart', () => this.is_ime_composing = true);\r\n                element.addEventListener('compositionend', () => this.is_ime_composing = false);\r\n            }\r\n\r\n            // ショートカットキーハンドラー\r\n            this.shortcut_key_handler = async (event: KeyboardEvent) => {\r\n\r\n                const tag = document.activeElement!.tagName.toUpperCase();\r\n                const editable = document.activeElement!.getAttribute('contenteditable');\r\n\r\n                // 矢印キーのデフォルトの挙動（スクロール）を抑制\r\n                // キーリピート周りで間引かれるイベントでも event.preventDefault() しないとスクロールしてしまうため、\r\n                // 一番最初のタイミングでやっておく\r\n                // input・textarea・contenteditable 状態の要素では実行しない\r\n                if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.code) &&\r\n                    (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true')) {\r\n                    event.preventDefault();\r\n                }\r\n\r\n                // キーリピート（押しっぱなし）状態の場合は基本実行しない\r\n                // 押し続けると何度も同じ動作が実行されて大変な事になる…\r\n                // ただ、キーリピートを使いたい場合もあるので、リピート状態をフラグとして保存する\r\n                let is_repeat = false;\r\n                if (event.repeat) is_repeat = true;\r\n\r\n                // キーリピート状態は event.repeat を見る事でだいたい検知できるが、最初の何回かは検知できないこともある\r\n                // そこで、0.05 秒以内に連続して発火したキーイベントは間引きも兼ねて実行しない\r\n                const now = Utils.time();\r\n                if (now - this.shortcut_key_pressed_at < 0.05) return;\r\n                this.shortcut_key_pressed_at = now;  // 最終押下時刻を更新\r\n\r\n                // 無名関数の中で実行する\r\n                const result = await (async (): Promise<boolean> => {\r\n\r\n                    // ***** ツイート入力フォームにフォーカスを当てる/フォーカスを外す *****\r\n\r\n                    // ツイート入力フォームにフォーカスしているときもこのショートカットが動くようにする\r\n                    // 以降の if 文で textarea フォーカス時のイベントをすべて弾いてしまっているため、前に持ってきている\r\n                    // Tab キーに割り当てている関係で、IME 変換中は実行しない（IME 変換中に実行すると文字変換ができなくなる）\r\n                    if (((tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') ||\r\n                        (document.activeElement === tweet_form_element)) && this.is_ime_composing === false) {\r\n                        if (event.code === 'Tab') {\r\n\r\n                            // ツイート入力フォームにフォーカスがすでに当たっていたら、フォーカスを外して終了\r\n                            if (document.activeElement === tweet_form_element) {\r\n                                tweet_form_element.blur();\r\n                                return true;\r\n                            }\r\n\r\n                            // パネルを開く\r\n                            this.is_panel_display = true;\r\n\r\n                            // どのタブを開いていたかに関係なく Twitter タブに切り替える\r\n                            this.tv_panel_active_tab = 'Twitter';\r\n\r\n                            // ツイート入力フォームの textarea 要素にフォーカスを当てる\r\n                            tweet_form_element.focus();\r\n\r\n                            // フォーカスを当てると勝手に横方向にスクロールされてしまうので、元に戻す\r\n                            this.$el.scrollLeft = 0;\r\n\r\n                            window.setTimeout(() => {\r\n\r\n                                // 他のタブから切り替えると一発でフォーカスが当たらないことがあるので、ちょっとだけ待ってから念押し\r\n                                // $nextTick() だと上手くいかなかった…\r\n                                tweet_form_element.focus();\r\n\r\n                                // フォーカスを当てると勝手に横方向にスクロールされてしまうので、元に戻す\r\n                                this.$el.scrollLeft = 0;\r\n\r\n                            }, 100);  // 0.1秒\r\n\r\n                            return true;\r\n                        }\r\n                    }\r\n\r\n                    // ***** ツイートを送信する *****\r\n\r\n                    // ツイート入力フォームにフォーカスしているときもこのショートカットが動くようにする\r\n                    // Twitter タブ以外を開いているときは実行しない\r\n                    // 以降の if 文で textarea フォーカス時のイベントをすべて弾いてしまっているため、前に持ってきている\r\n                    if (((tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') ||\r\n                        (document.activeElement === tweet_form_element)) &&\r\n                        this.tv_panel_active_tab === 'Twitter' &&\r\n                        this.is_ime_composing === false) {\r\n                        // (Ctrl or Cmd or Shift) + Enter\r\n                        // Shift + Enter は隠し機能（間違えたとき用）\r\n                        if ((event.ctrlKey || event.metaKey || event.shiftKey) && event.code === 'Enter') {\r\n                            twitter_component.$el.querySelector<HTMLDivElement>('.tweet-button')!.click();\r\n                            return true;\r\n                        }\r\n                    }\r\n\r\n                    // ***** コメント入力フォームを閉じる *****\r\n\r\n                    // プレイヤーが初期化されていない時・Shift / Alt キーが一緒に押された時に作動しないように\r\n                    if (this.player !== null && !event.shiftKey && !event.altKey) {\r\n\r\n                        // コメント入力フォームが表示されているときのみ\r\n                        if (this.player.template.controller.classList.contains('dplayer-controller-comment')) {\r\n                            // Ctrl or Cmd + M\r\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'KeyM') {\r\n                                this.player.comment!.hide();\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // input・textarea・contenteditable 状態の要素でなければ\r\n                    // 文字入力中にショートカットキーが作動してしまわないように\r\n                    if (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') {\r\n\r\n                        // キーリピートでない時・Ctrl / Cmd キーが一緒に押された時に作動しないように\r\n                        // チャンネル選局のキーボードショートカットを Alt or Option + 数字キー/テンキーに変更する設定が有効なときは、\r\n                        // Alt or Option キーが押されていることを条件に追加する\r\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey &&\r\n                            (this.settingsStore.settings.tv_channel_selection_requires_alt_key === false || (event.altKey))) {\r\n\r\n                            // ***** 数字キーでチャンネルを切り替える *****\r\n\r\n                            // Shift キーが同時押しされていたら BS チャンネルの方を選局する\r\n                            const switch_channel_type = (event.shiftKey) ? 'BS' : 'GR';\r\n\r\n                            // 1～9キー\r\n                            let switch_remocon_id: number | null = null;\r\n                            if (event.code === 'Digit1' || event.code === 'Digit2' || event.code === 'Digit3' ||\r\n                                event.code === 'Digit4' || event.code === 'Digit5' || event.code === 'Digit6' ||\r\n                                event.code === 'Digit7' || event.code === 'Digit8' || event.code === 'Digit9') {\r\n                                switch_remocon_id = Number(event.code.replace('Digit', ''));\r\n                            }\r\n                            // 0キー: 10に割り当て\r\n                            if (event.code === 'Digit0') switch_remocon_id = 10;\r\n                            // -キー: 11に割り当て\r\n                            if (event.code === 'Minus') switch_remocon_id = 11;\r\n                            // ^キー: 12に割り当て\r\n                            if (event.code === 'Equal') switch_remocon_id = 12;\r\n                            // 1～9キー (テンキー)\r\n                            if (event.code === 'Numpad1' || event.code === 'Numpad2' || event.code === 'Numpad3' ||\r\n                                event.code === 'Numpad4' || event.code === 'Numpad5' || event.code === 'Numpad6' ||\r\n                                event.code === 'Numpad7' || event.code === 'Numpad8' || event.code === 'Numpad9') {\r\n                                switch_remocon_id = Number(event.code.replace('Numpad', ''));\r\n                            }\r\n                            // 0キー (テンキー): 10に割り当て\r\n                            if (event.code === 'Numpad0') switch_remocon_id = 10;\r\n\r\n                            // この時点でリモコン番号が取得できていたら実行\r\n                            if (switch_remocon_id !== null) {\r\n\r\n                                // 切り替え先のチャンネルを取得する\r\n                                const switch_channel = this.channelsStore.getChannelByRemoconID(switch_channel_type, switch_remocon_id);\r\n\r\n                                // チャンネルが取得できていれば、ルーティングをそのチャンネルに置き換える\r\n                                // 押されたキーに対応するリモコン番号のチャンネルがない場合や、現在と同じチャンネル ID の場合は何も起こらない\r\n                                if (switch_channel !== null && switch_channel.display_channel_id !== this.channelsStore.display_channel_id) {\r\n                                    await this.$router.push({path: `/tv/watch/${switch_channel.display_channel_id}`});\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        // キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\r\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\r\n\r\n                            // ***** キーボードショートカットの一覧を表示する *****\r\n\r\n                            // /(?)キー: キーボードショートカットの一覧を表示する\r\n                            if (event.code === 'Slash') {\r\n                                this.shortcut_key_modal = !this.shortcut_key_modal;\r\n                                return true;\r\n                            }\r\n\r\n                            // ***** パネルのタブを切り替える *****\r\n\r\n                            // Pキー: パネルの表示切り替え\r\n                            if (event.code === 'KeyP') {\r\n                                this.is_panel_display = !this.is_panel_display;\r\n                                return true;\r\n                            }\r\n                            // Kキー: 番組情報タブ\r\n                            if (event.code === 'KeyK') {\r\n                                this.tv_panel_active_tab = 'Program';\r\n                                return true;\r\n                            }\r\n                            // Lキー: チャンネルタブ\r\n                            if (event.code === 'KeyL') {\r\n                                this.tv_panel_active_tab = 'Channel';\r\n                                return true;\r\n                            }\r\n                            // ;(+)キー: コメントタブ\r\n                            if (event.code === 'Semicolon') {\r\n                                this.tv_panel_active_tab = 'Comment';\r\n                                return true;\r\n                            }\r\n                            // :(*)キー: Twitterタブ\r\n                            if (event.code === 'Quote') {\r\n                                this.tv_panel_active_tab = 'Twitter';\r\n                                return true;\r\n                            }\r\n\r\n                            // ***** Twitter タブ内のタブを切り替える *****\r\n\r\n                            // [(「): ツイート検索タブ\r\n                            if (event.code === 'BracketRight') {\r\n                                twitter_component.twitter_active_tab = 'Search';\r\n                                return true;\r\n                            }\r\n                            // ](」): タイムラインタブ\r\n                            if (event.code === 'Backslash') {\r\n                                twitter_component.twitter_active_tab = 'Timeline';\r\n                                return true;\r\n                            }\r\n                            // \\(￥)キー: キャプチャタブ\r\n                            if (event.code === 'IntlRo') {\r\n                                twitter_component.twitter_active_tab = 'Capture';\r\n                                return true;\r\n                            }\r\n                        }\r\n\r\n                        // Twitter タブ内のキャプチャタブが表示されている & Ctrl / Cmd / Shift / Alt のいずれも押されていないときだけ\r\n                        // キャプチャタブが表示されている時は、プレイヤー操作側の矢印キー/スペースキーのショートカットは動作しない（キーが重複するため）\r\n                        if (this.tv_panel_active_tab === 'Twitter' && twitter_component.twitter_active_tab === 'Capture' &&\r\n                            (!event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey)) {\r\n\r\n                            // ***** キャプチャにフォーカスする *****\r\n\r\n                            if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.code)) {\r\n\r\n                                // キャプチャリストに一枚もキャプチャがない\r\n                                if (twitter_component.captures.length === 0) return false;\r\n\r\n                                // まだどのキャプチャにもフォーカスされていない場合は、一番新しいキャプチャにフォーカスして終了\r\n                                if (twitter_component.captures.some(capture => capture.focused === true) === false) {\r\n                                    twitter_component.captures[twitter_component.captures.length - 1].focused = true;\r\n                                    return true;\r\n                                }\r\n\r\n                                // 現在フォーカスされているキャプチャのインデックスを取得\r\n                                const focused_capture_index = twitter_component.captures.findIndex(capture => capture.focused === true);\r\n\r\n                                // ↑キー: 2つ前のキャプチャにフォーカスする\r\n                                // キャプチャリストは2列で並んでいるので、2つ後のキャプチャが現在フォーカスされているキャプチャの直上になる\r\n                                if (event.code === 'ArrowUp') {\r\n                                    // 2つ前のキャプチャがないなら実行しない\r\n                                    if (focused_capture_index - 2 < 0) return false;\r\n                                    twitter_component.captures[focused_capture_index - 2].focused = true;\r\n                                }\r\n\r\n                                // ↓キー: 2つ後のキャプチャにフォーカスする\r\n                                // キャプチャリストは2列で並んでいるので、2つ後のキャプチャが現在フォーカスされているキャプチャの直下になる\r\n                                if (event.code === 'ArrowDown') {\r\n                                    // 2つ後のキャプチャがないなら実行しない\r\n                                    if (focused_capture_index + 2 > (twitter_component.captures.length - 1)) return false;\r\n                                    twitter_component.captures[focused_capture_index + 2].focused = true;\r\n                                }\r\n\r\n                                // ←キー: 1つ前のキャプチャにフォーカスする\r\n                                if (event.code === 'ArrowLeft') {\r\n                                    // 1つ前のキャプチャがないなら実行しない\r\n                                    if (focused_capture_index - 1 < 0) return false;\r\n                                    twitter_component.captures[focused_capture_index - 1].focused = true;\r\n                                }\r\n\r\n                                // ←キー: 1つ後のキャプチャにフォーカスする\r\n                                if (event.code === 'ArrowRight') {\r\n                                    // 1つ後のキャプチャがないなら実行しない\r\n                                    if (focused_capture_index + 1 > (twitter_component.captures.length - 1)) return false;\r\n                                    twitter_component.captures[focused_capture_index + 1].focused = true;\r\n                                }\r\n\r\n                                // 現在フォーカスされているキャプチャのフォーカスを外す\r\n                                twitter_component.captures[focused_capture_index].focused = false;\r\n\r\n                                // 拡大表示のモーダルが開かれている場合は、フォーカスしたキャプチャをモーダルにセット\r\n                                // こうすることで、QuickLook みたいな挙動になる\r\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true)!;\r\n                                if (twitter_component.zoom_capture_modal === true) {\r\n                                    twitter_component.zoom_capture = focused_capture;\r\n                                }\r\n\r\n                                // 現在フォーカスされているキャプチャが見える位置までスクロール\r\n                                // block: 'nearest' の指定で、上下どちらにスクロールしてもフォーカスされているキャプチャが常に表示されるようになる\r\n                                const focused_capture_element =\r\n                                    twitter_component.$el.querySelector(`img[src=\"${focused_capture.image_url}\"]`)!.parentElement!;\r\n                                if (is_repeat) {\r\n                                    // キーリピート状態ではスムーズスクロールがフォーカスの移動に追いつけずスクロールの挙動がおかしくなるため、\r\n                                    // スムーズスクロールは無効にしてある\r\n                                    focused_capture_element.scrollIntoView({block: 'nearest', inline: 'nearest', behavior: 'auto'});\r\n                                } else {\r\n                                    focused_capture_element.scrollIntoView({block: 'nearest', inline: 'nearest', behavior: 'smooth'});\r\n                                }\r\n                                return true;\r\n                            }\r\n\r\n                            // ***** キャプチャを拡大表示する/拡大表示を閉じる *****\r\n\r\n                            if (event.code === 'Enter') {\r\n\r\n                                // Enter キーの押下がプレイヤー側のコメント送信由来のイベントの場合は実行しない\r\n                                if (this.is_comment_send_just_did) return false;\r\n\r\n                                // すでにモーダルが開かれている場合は、どのキャプチャが拡大表示されているかに関わらず閉じる\r\n                                if (twitter_component.zoom_capture_modal === true) {\r\n                                    twitter_component.zoom_capture_modal = false;\r\n                                    return true;\r\n                                }\r\n\r\n                                // 現在フォーカスされているキャプチャを取得\r\n                                // まだどのキャプチャにもフォーカスされていない場合は実行しない\r\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\r\n                                if (focused_capture === undefined) return false;\r\n\r\n                                // モーダルを開き、モーダルで拡大表示するキャプチャとしてセット\r\n                                twitter_component.zoom_capture = focused_capture;\r\n                                twitter_component.zoom_capture_modal = true;\r\n                                return true;\r\n                            }\r\n\r\n                            // ***** キャプチャを選択する/選択を解除する *****\r\n\r\n                            if (event.code === 'Space') {\r\n\r\n                                // 現在フォーカスされているキャプチャを取得\r\n                                // まだどのキャプチャにもフォーカスされていない場合は実行しない\r\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\r\n                                if (focused_capture === undefined) return false;\r\n\r\n                                // 「キャプチャリスト内のキャプチャがクリックされたときのイベント」を呼ぶ\r\n                                // 選択されていなければ選択され、選択されていれば選択が解除される\r\n                                // キャプチャの枚数制限などはすべて clickCapture() の中で処理される\r\n                                twitter_component.clickCapture(focused_capture);\r\n                                return true;\r\n                            }\r\n                        }\r\n\r\n                        // ***** 上下キーでチャンネルを切り替える *****\r\n\r\n                        // キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\r\n                        // キャプチャ関連のショートカットの後に持ってこないとキャプチャ関連のショートカットが動作しなくなる\r\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\r\n\r\n                            // ↑キー: 前のチャンネルに切り替え\r\n                            if (event.code === 'ArrowUp') {\r\n                                this.is_zapping = true;\r\n                                await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.previous.display_channel_id}`});\r\n                                return true;\r\n                            }\r\n                            // ↓キー: 次のチャンネルに切り替え\r\n                            if (event.code === 'ArrowDown') {\r\n                                this.is_zapping = true;\r\n                                await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.next.display_channel_id}`});\r\n                                return true;\r\n                            }\r\n                        }\r\n\r\n                        // ***** プレイヤーのショートカットキー *****\r\n\r\n                        // プレイヤーが初期化されていない時・Shift / Alt キーが一緒に押された時に作動しないように\r\n                        if (this.player !== null && !event.shiftKey && !event.altKey) {\r\n\r\n                            // Ctrl / Cmd + ↑キー: プレイヤーの音量を上げる\r\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowUp') {\r\n                                this.player.volume(this.player.volume() + 0.05);\r\n                                return true;\r\n                            }\r\n                            // Ctrl / Cmd + ↓キー: プレイヤーの音量を下げる\r\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowDown') {\r\n                                this.player.volume(this.player.volume() - 0.05);\r\n                                return true;\r\n                            }\r\n                            // Ctrl / Cmd + ←キー: 停止して0.5秒巻き戻し\r\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowLeft') {\r\n                                if (this.player.video.paused === false) this.player.video.pause();\r\n                                this.player.video.currentTime = this.player.video.currentTime - 0.5;\r\n                                return true;\r\n                            }\r\n                            // Ctrl / Cmd + →キー: 停止して0.5秒早送り\r\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowRight') {\r\n                                if (this.player.video.paused === false) this.player.video.pause();\r\n                                this.player.video.currentTime = this.player.video.currentTime + 0.5;\r\n                                return true;\r\n                            }\r\n                        }\r\n\r\n                        // プレイヤーが初期化されていない時・Ctrl / Cmd / Alt キーが一緒に押された時に作動しないように\r\n                        if (this.player !== null && !event.ctrlKey && !event.metaKey && !event.altKey) {\r\n\r\n                            // Shift + Spaceキー + キーリピートでない時 + Twitter タブ表示時 + キャプチャタブ表示時: 再生/停止\r\n                            if (event.shiftKey === true && event.code === 'Space' && is_repeat === false &&\r\n                                this.tv_panel_active_tab === 'Twitter' && twitter_component.twitter_active_tab === 'Capture') {\r\n                                this.player.toggle();\r\n                                return true;\r\n                            }\r\n                        }\r\n\r\n                        // プレイヤーが初期化されていない時・キーリピートでない時・Ctrl / Cmd / Alt キーが一緒に押された時に作動しないように\r\n                        if (this.player !== null && is_repeat === false && !event.ctrlKey && !event.metaKey && !event.altKey) {\r\n\r\n                            // Spaceキー: 再生/停止\r\n                            if (event.code === 'Space') {\r\n                                this.player.toggle();\r\n                                return true;\r\n                            }\r\n                            // Fキー: フルスクリーンの切り替え\r\n                            if (event.code === 'KeyF') {\r\n                                this.player.fullScreen.toggle();\r\n                                return true;\r\n                            }\r\n                            // Wキー: ライブストリームの同期\r\n                            if (event.code === 'KeyW') {\r\n                                this.player.sync();\r\n                                return true;\r\n                            }\r\n                            // Eキー: Picture-in-Picture の表示切り替え\r\n                            if (event.code === 'KeyE') {\r\n                                if (document.pictureInPictureEnabled) {\r\n                                    this.player.template.pipButton.click();\r\n                                }\r\n                                return true;\r\n                            }\r\n                            // Sキー: 字幕の表示切り替え\r\n                            if (event.code === 'KeyS') {\r\n                                this.player.subtitle!.toggle();\r\n                                if (!this.player.subtitle!.container.classList.contains('dplayer-subtitle-hide')) {\r\n                                    this.player.notice(`${this.player.tran('Show subtitle')}`);\r\n                                } else {\r\n                                    this.player.notice(`${this.player.tran('Hide subtitle')}`);\r\n                                }\r\n                                return true;\r\n                            }\r\n                            // Dキー: コメントの表示切り替え\r\n                            if (event.code === 'KeyD') {\r\n                                this.player.template.showDanmaku.click();\r\n                                if (this.player.template.showDanmakuToggle.checked) {\r\n                                    this.player.notice(`${this.player.tran('Show comment')}`);\r\n                                } else {\r\n                                    this.player.notice(`${this.player.tran('Hide comment')}`);\r\n                                }\r\n                                return true;\r\n                            }\r\n                            // Cキー: 映像をキャプチャ\r\n                            if (event.code === 'KeyC') {\r\n                                await this.capture_manager!.captureAndSave(false);\r\n                                return true;\r\n                            }\r\n                            // Vキー: 映像を実況コメントを付けてキャプチャ\r\n                            if (event.code === 'KeyV') {\r\n                                await this.capture_manager!.captureAndSave(true);\r\n                                return true;\r\n                            }\r\n                            // Mキー: コメント入力フォームにフォーカス\r\n                            if (event.code === 'KeyM') {\r\n                                this.player.controller.show();\r\n                                this.player.comment!.show();\r\n                                this.controlDisplayTimer();\r\n                                window.setTimeout(() => this.player!.template.commentInput.focus(), 100);\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                })();\r\n\r\n                // 無名関数を実行した後の戻り値が true ならショートカットキーの操作を実行したことになるので、デフォルトのキー操作を封じる\r\n                if (result === true) {\r\n                    event.preventDefault();\r\n                }\r\n            };\r\n\r\n            // ページ上でキーが押されたときのイベントを登録\r\n            document.addEventListener('keydown', this.shortcut_key_handler);\r\n        },\r\n\r\n        // キャプチャ関連のイベントを初期化する\r\n        initCaptureManager() {\r\n\r\n            // キャプチャマネージャーを初期化\r\n            this.capture_manager = new CaptureManager({\r\n                player: this.player!,\r\n                captured_callback: (blob: Blob, filename: string) => {\r\n                    // キャプチャが撮られたら、随時 Twitter タブのキャプチャリストに追加する\r\n                    (this.$refs.Twitter as InstanceType<typeof Twitter>).addCaptureList(blob, filename);\r\n                }\r\n            });\r\n\r\n            // キャプチャボタンがクリックされたときのイベント\r\n            // ショートカットからのキャプチャでも同じイベントがトリガーされる\r\n            const capture_button = this.$el.querySelector('.dplayer-icon.dplayer-capture-icon')!;\r\n            capture_button.addEventListener('click', async () => {\r\n                await this.capture_manager!.captureAndSave(false);\r\n            });\r\n\r\n            // コメント付きキャプチャボタンがクリックされたときのイベント\r\n            // ショートカットからのキャプチャでも同じイベントがトリガーされる\r\n            const comment_capture_button = this.$el.querySelector('.dplayer-icon.dplayer-comment-capture-icon')!;\r\n            comment_capture_button.addEventListener('click', async () => {\r\n                await this.capture_manager!.captureAndSave(true);\r\n            });\r\n        },\r\n\r\n\r\n        // 再生セッションを破棄する\r\n        // チャンネルを切り替える際に実行される\r\n        async destroy(is_destroy_player = false, is_zapping_continuously = false) {\r\n\r\n            // ニコニコ実況セッションを破棄し、コメント受信を終了する\r\n            (this.$refs.Comment as InstanceType<typeof Comment>).destroy();\r\n\r\n            // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\r\n            // clearInterval() と clearTimeout() は中身共通なので問題ない\r\n            for (const interval_id of this.interval_ids) {\r\n                window.clearInterval(interval_id);\r\n            }\r\n\r\n            // コントロール表示制御用タイマーを止める\r\n            window.clearTimeout(this.control_interval_id);\r\n\r\n            // interval_ids をクリア\r\n            this.interval_ids = [];\r\n\r\n            // データ放送マネージャーを破棄\r\n            // CSS アニメーションの関係上、ローディング状態にする前に破棄する必要がある\r\n            if (this.data_broadcasting_manager !== null) {\r\n                await this.data_broadcasting_manager.destroy();\r\n                this.data_broadcasting_manager = null;\r\n            }\r\n\r\n            // 再びローディング状態にする\r\n            this.is_loading = true;\r\n\r\n            // プレイヤーの背景を隠す\r\n            this.is_background_display = false;\r\n\r\n            // プレイヤーの破棄を許可する\r\n            if (this.player !== null) {\r\n                this.player_can_be_destroyed = true;\r\n            }\r\n\r\n            // イベントソースを閉じる\r\n            if (this.eventsource !== null) {\r\n                this.eventsource.close();\r\n                this.eventsource = null;\r\n            }\r\n\r\n            // 映像がフェードアウトするアニメーション (0.2秒) 分待ってから実行\r\n            // この 0.2 秒の間に音量をフェードアウトさせる\r\n            // なお、ザッピングでチャンネルを連続で切り替えている場合は実行しない (実行しても意味がないため)\r\n            if (is_zapping_continuously === false) {\r\n                const current_volume = this.player!.user.get('volume');\r\n                // 20回 (0.01秒おき) に分けて音量を下げる\r\n                for (let i = 0; i < 20; i++) {\r\n                    await Utils.sleep(0.01);\r\n                    this.player!.video.volume = current_volume * (1 - (i + 1) / 20);\r\n                }\r\n            }\r\n\r\n            // is_destroy_player が true の時は、ここで DPlayer 自体を破棄する\r\n            // false の時は次の initPlayer() が実行されるまで破棄されない\r\n            // 次のプレイヤーの初期化の直前に前のプレイヤーを破棄することで、プレイヤーの HTML が消えることによるちらつきを防ぐ\r\n            if (is_destroy_player === true && this.player !== null) {\r\n                try {\r\n                    this.player.destroy();\r\n                } catch (error) {\r\n                    // mpegts.js をうまく破棄できない場合\r\n                    if (this.player.plugins.mpegts !== undefined) {\r\n                        this.player.plugins.mpegts.destroy();\r\n                    }\r\n                }\r\n                this.player_can_be_destroyed = false;\r\n                this.player = null;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n// DPlayer のスタイルの上書き\r\n.watch-player__dplayer {\r\n    svg circle, svg path {\r\n        fill: var(--v-text-base) !important;\r\n    }\r\n    .dplayer-video-wrap {\r\n        background: transparent !important;\r\n        .dplayer-video-wrap-aspect {\r\n            transition: opacity 0.2s cubic-bezier(0.4, 0.38, 0.49, 0.94);\r\n            opacity: 1;\r\n        }\r\n        .dplayer-danmaku {\r\n            max-width: 100%;\r\n            max-height: calc(100% - var(--comment-area-vertical-margin, 0px));\r\n            aspect-ratio: var(--comment-area-aspect-ratio, 16 / 9);\r\n            transition: max-height 0.5s cubic-bezier(0.42, 0.19, 0.53, 0.87), aspect-ratio 0.5s cubic-bezier(0.42, 0.19, 0.53, 0.87);\r\n            will-change: aspect-ratio;\r\n            overflow: hidden;\r\n        }\r\n        .dplayer-bml-browser {\r\n            display: block;\r\n            position: absolute;\r\n            width: var(--bml-browser-width, 960px);\r\n            height: var(--bml-browser-height, 540px);\r\n            color: rgb(0, 0, 0);\r\n            overflow: hidden;\r\n            transform-origin: center;\r\n            transform: scale(var(--bml-browser-scale-factor-width, 1), var(--bml-browser-scale-factor-height, 1));\r\n            aspect-ratio: 16 / 9;\r\n        }\r\n        .dplayer-danloading {\r\n            display: none !important;\r\n        }\r\n        .dplayer-loading-icon {\r\n            // ローディング表示は自前でやるため不要\r\n            display: none !important;\r\n        }\r\n    }\r\n    .dplayer-controller-mask {\r\n        height: 82px !important;\r\n        background: linear-gradient(to bottom, transparent, #000000cf) !important;\r\n        opacity: 0 !important;\r\n        visibility: hidden;\r\n        transition: opacity 0.3s ease, visibility 0.3s ease !important;\r\n        @include tablet-vertical {\r\n            height: 66px !important;\r\n        }\r\n        @include smartphone-horizontal {\r\n            height: 66px !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            height: 66px !important;\r\n        }\r\n    }\r\n\r\n    .dplayer-controller {\r\n        padding-left: calc(68px + 18px) !important;\r\n        padding-bottom: 6px !important;\r\n        transition: opacity 0.3s ease, visibility 0.3s ease;\r\n        opacity: 0 !important;\r\n        visibility: hidden;\r\n        @include tablet-vertical {\r\n            padding-left: calc(0px + 18px) !important;\r\n        }\r\n        @include smartphone-horizontal {\r\n            padding-left: calc(0px + 18px) !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            padding-left: calc(0px + 18px) !important;\r\n        }\r\n\r\n        .dplayer-time, .dplayer-live-badge {\r\n            color: var(--v-text-base) !important;\r\n        }\r\n        .dplayer-volume-bar {\r\n            background: var(--v-text-base) !important;\r\n        }\r\n        .dplayer-icons {\r\n            bottom: auto !important;\r\n            &.dplayer-icons-right {\r\n                right: 22px !important;\r\n                @include tablet-vertical {\r\n                    right: 11px !important;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    right: 11px !important;\r\n                }\r\n                @include smartphone-vertical {\r\n                    right: 11px !important;\r\n                }\r\n            }\r\n            // ブラウザフルスクリーンボタンを削除（実質あまり意味がないため）\r\n            .dplayer-icon.dplayer-full-in-icon {\r\n                display: none !important;\r\n            }\r\n            .dplayer-icon {\r\n                @include tablet-vertical {\r\n                    &.dplayer-pip-icon:after {\r\n                        left: 25%;\r\n                    }\r\n                    &.dplayer-full-icon:after {\r\n                        left: -20%;\r\n                    }\r\n                }\r\n                @include smartphone-horizontal {\r\n                    &.dplayer-pip-icon:after {\r\n                        left: 25%;\r\n                    }\r\n                    &.dplayer-full-icon:after {\r\n                        left: -20%;\r\n                    }\r\n                }\r\n                @include smartphone-vertical {\r\n                    &.dplayer-pip-icon:after {\r\n                        left: 25%;\r\n                    }\r\n                    &.dplayer-full-icon:after {\r\n                        left: -20%;\r\n                    }\r\n                }\r\n                &.dplayer-capture-icon, &.dplayer-comment-capture-icon {\r\n                    transition: background-color 0.08s ease;\r\n                    border-radius: 6px;\r\n                    &.dplayer-capturing {\r\n                        background: var(--v-secondary-lighten1);\r\n                        .dplayer-icon-content {\r\n                            opacity: 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        .dplayer-comment-box {\r\n            transition: opacity 0.3s ease, visibility 0.3s ease !important;\r\n            .dplayer-comment-setting-icon {\r\n                z-index: 5;\r\n            }\r\n            .dplayer-comment-input {\r\n                transition: box-shadow 0.09s ease;\r\n                appearance: none;\r\n                -webkit-appearance: none;\r\n                &:focus {\r\n                    box-shadow: rgba(79, 130, 230, 60%) 0 0 0 3.5px;\r\n                }\r\n                // iOS Safari でフォーカス時にズームされる問題への対処\r\n                @supports (-webkit-touch-callout: none) {\r\n                    @include smartphone-horizontal {\r\n                        width: calc(100% * 1.142857) !important;\r\n                        height: calc(100% * 1.142857) !important;\r\n                        font-size: 16px !important;\r\n                        transform: scale(0.875);\r\n                        transform-origin: 0 0;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        width: calc(100% * 1.142857) !important;\r\n                        height: calc(100% * 1.142857) !important;\r\n                        font-size: 16px !important;\r\n                        transform: scale(0.875);\r\n                        transform-origin: 0 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .dplayer-notice {\r\n        padding: 16px 22px !important;\r\n        margin-right: 30px;\r\n        border-radius: 4px !important;\r\n        font-size: 15px !important;\r\n        line-height: 1.6;\r\n        @include tablet-vertical {\r\n            top: auto;\r\n            left: 16px !important;\r\n            padding: 12px 16px !important;\r\n            margin-right: 16px;\r\n            font-size: 13.5px !important;\r\n        }\r\n        @include smartphone-horizontal {\r\n            padding: 12px 16px !important;\r\n            margin-right: 16px;\r\n            font-size: 13.5px !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            top: auto;\r\n            left: 16px !important;\r\n            padding: 12px 16px !important;\r\n            margin-right: 16px;\r\n            font-size: 13.5px !important;\r\n        }\r\n    }\r\n    .dplayer-info-panel {\r\n        transition: top 0.3s, left 0.3s;\r\n    }\r\n    .dplayer-setting-box {\r\n        z-index: 10 !important;\r\n        @include tablet-vertical {\r\n            height: calc(100% - 60px) !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            height: calc(100% - 60px) !important;\r\n        }\r\n        .dplayer-setting-audio-panel {\r\n            // 副音声がない番組で副音声を選択できないように\r\n            .dplayer-setting-audio-item.dplayer-setting-audio-item--disabled {\r\n                pointer-events: none;  // クリックイベントを無効化\r\n                .dplayer-label {\r\n                    color: #AAAAAA;  // グレーアウト\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .dplayer-comment-setting-box {\r\n        .dplayer-comment-setting-title {\r\n            color: var(--v-text-base);\r\n        }\r\n        .dplayer-comment-setting-type, .dplayer-comment-setting-size {\r\n            span {\r\n                border: 1px solid (--v-text-base);\r\n            }\r\n            input:checked + span {\r\n                background: var(--v-text-base);\r\n            }\r\n        }\r\n    }\r\n\r\n    // モバイルのみ適用されるスタイル\r\n    &.dplayer-mobile {\r\n        .dplayer-controller {\r\n            padding-left: calc(68px + 30px) !important;\r\n            @include tablet-vertical {\r\n                padding-left: calc(0px + 18px) !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                padding-left: calc(0px + 18px) !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                padding-left: calc(0px + 18px) !important;\r\n            }\r\n        }\r\n        &.dplayer-hide-controller .dplayer-controller {\r\n            transform: none !important;\r\n        }\r\n        // 画面の狭いデバイスのみに適用されるスタイル\r\n        &.dplayer-narrow .dplayer-icon {\r\n            margin: 0px -4px !important;\r\n        }\r\n    }\r\n}\r\n\r\n// ロード中は動画を非表示にする\r\n.watch-player--loading .dplayer-video-wrap-aspect {\r\n    opacity: 0 !important;\r\n}\r\n\r\n// Safari のみ、アイコンに hover しても opacity が変わらないようにする\r\n// hover すると 1px ずれてしまい見苦しくなる Safari の描画バグを回避するための苦肉の策\r\n// ref: https://qiita.com/Butterthon/items/10e6b58d883236aa3838\r\n_::-webkit-full-page-media, _:future, :root .dplayer-icon:hover .dplayer-icon-content {\r\n    opacity: 0.8 !important;\r\n}\r\n\r\n// コントロール表示時\r\n.watch-container.watch-container--control-display {\r\n    .watch-player__dplayer {\r\n        .dplayer-controller-mask, .dplayer-controller {\r\n            opacity: 1 !important;\r\n            visibility: visible !important;\r\n            .dplayer-comment-box {\r\n                left: calc(68px + 20px);\r\n                @include tablet-vertical {\r\n                    left: calc(0px + 16px);\r\n                }\r\n                @include smartphone-horizontal {\r\n                    left: calc(0px + 16px);\r\n                }\r\n                @include smartphone-vertical {\r\n                    left: calc(0px + 16px);\r\n                }\r\n            }\r\n        }\r\n        .dplayer-notice {\r\n            left: calc(68px + 30px);\r\n            bottom: 62px;\r\n            @include tablet-vertical {\r\n                left: calc(0px + 16px);\r\n                bottom: 62px !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-vertical {\r\n                left: calc(0px + 16px);\r\n                bottom: 62px !important;\r\n            }\r\n        }\r\n        .dplayer-info-panel {\r\n            top: 82px;\r\n            left: calc(68px + 30px);\r\n            @include tablet-horizontal {\r\n                left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-horizontal {\r\n                left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-vertical {\r\n                left: calc(0px + 16px);\r\n            }\r\n        }\r\n        .dplayer-comment-setting-box {\r\n            left: calc(68px + 20px);\r\n            @include tablet-vertical {\r\n                left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-horizontal {\r\n                left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-vertical {\r\n                left: calc(0px + 16px);\r\n            }\r\n        }\r\n        .dplayer-mobile .dplayer-mobile-icon-wrap {\r\n            opacity: 0.7 !important;\r\n            visibility: visible !important;\r\n        }\r\n    }\r\n}\r\n// コントロール非表示時\r\n.watch-container:not(.watch-container--control-display) {\r\n    .watch-player__dplayer {\r\n        .dplayer-danmaku {\r\n            max-height: 100% !important;\r\n            aspect-ratio: 16 / 9 !important;\r\n        }\r\n        .dplayer-notice {\r\n            bottom: 20px !important;\r\n        }\r\n    }\r\n}\r\n// フルスクリーン時\r\n.watch-container.watch-container--fullscreen {\r\n    .watch-player__dplayer {\r\n        .dplayer-controller {\r\n            padding-left: 20px !important;\r\n        }\r\n        &.dplayer-mobile .dplayer-controller {\r\n            padding-left: 30px !important;\r\n            @include tablet-vertical {\r\n                padding-left: 16px !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                padding-left: 16px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                padding-left: 16px !important;\r\n            }\r\n        }\r\n        .dplayer-comment-box, .dplayer-comment-setting-box {\r\n            left: 20px !important;\r\n            @include tablet-vertical {\r\n                left: 16px !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                left: 16px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                left: 16px !important;\r\n            }\r\n        }\r\n    }\r\n    .watch-header__back-icon {\r\n        display: none !important;\r\n    }\r\n}\r\n// フルスクリーン+コントロール表示時\r\n.watch-container.watch-container--fullscreen.watch-container--control-display {\r\n    .watch-player__dplayer {\r\n        .dplayer-notice, .dplayer-info-panel {\r\n            left: 30px !important;\r\n            @include tablet-vertical {\r\n                left: 16px !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                left: 16px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                left: 16px !important;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// 仮想キーボード表示時\r\n.watch-player.watch-player--virtual-keyboard-display {\r\n    .watch-player__dplayer {\r\n        .dplayer-controller-mask {\r\n            position: absolute;\r\n            bottom: env(keyboard-inset-height, 0px) !important;\r\n            @include tablet-vertical {\r\n                bottom: 0px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                bottom: 0px !important;\r\n            }\r\n        }\r\n        .dplayer-icons.dplayer-comment-box {\r\n            position: absolute;\r\n            bottom: calc(env(keyboard-inset-height, 0px) + 4px) !important;\r\n            @include tablet-vertical {\r\n                bottom: 6px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                bottom: 6px !important;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n\r\n// ショートカットキーの表示スタイル\r\n.shortcut-key {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-shrink: 0;\r\n    min-width: 32px;\r\n    min-height: 28px;\r\n    padding: 3px 8px;\r\n    border-radius: 5px;\r\n    background-color: var(--v-background-lighten2);\r\n    font-size: 14.5px;\r\n    text-align: center;\r\n}\r\n.shortcut-key-plus {\r\n    display: inline-block;\r\n    margin: 0px 5px;\r\n    flex-shrink: 0;\r\n}\r\n\r\n.route-container {\r\n    height: 100vh !important;\r\n    height: 100dvh !important;\r\n    background: var(--v-black-base) !important;\r\n    overflow: hidden;\r\n    // iOS Safari で 100vh にアドレスバーが含まれてしまう問題を回避する\r\n    @supports (-webkit-touch-callout: none) {\r\n        height: -webkit-fill-available !important;\r\n    }\r\n}\r\n.watch-container {\r\n    display: flex;\r\n    width: calc(100% + 352px);  // パネルの幅分はみ出す\r\n    height: 100%;\r\n    transition: width 0.4s cubic-bezier(0.26, 0.68, 0.55, 0.99);\r\n    @include tablet-vertical {\r\n        flex-direction: column;\r\n        width: 100%;\r\n    }\r\n    @include smartphone-horizontal {\r\n        width: calc(100% + 310px); // パネルの幅分はみ出す\r\n    }\r\n    @include smartphone-vertical {\r\n        flex-direction: column;\r\n        width: 100%;\r\n        padding-bottom: 56px;\r\n    }\r\n\r\n    // コントロール表示時\r\n    &.watch-container--control-display {\r\n        .watch-content {\r\n            cursor: auto !important;\r\n        }\r\n        .watch-navigation, .watch-header, .watch-player__button {\r\n            opacity: 1 !important;\r\n            visibility: visible !important;\r\n        }\r\n    }\r\n\r\n    // パネル表示時\r\n    &.watch-container--panel-display {\r\n        width: 100%;  // 画面幅に収めるように\r\n\r\n        // パネルアイコンをハイライト\r\n        .switch-button-panel .switch-button-icon {\r\n            color: var(--v-primary-base);\r\n        }\r\n\r\n        // タッチデバイスのみ、content-visibility: visible で明示的にパネルを描画する\r\n        .watch-panel {\r\n            @media (hover: none) {\r\n                content-visibility: auto;\r\n            }\r\n        }\r\n    }\r\n    @include tablet-vertical {\r\n        width: 100%;\r\n        .watch-panel {\r\n            @media (hover: none) {\r\n                content-visibility: auto;\r\n            }\r\n        }\r\n    }\r\n    @include smartphone-vertical {\r\n        width: 100%;\r\n        .watch-panel {\r\n            @media (hover: none) {\r\n                content-visibility: auto;\r\n            }\r\n        }\r\n    }\r\n\r\n    // フルスクリーン時\r\n    &.watch-container--fullscreen {\r\n\r\n        // ナビゲーションを非表示\r\n        .watch-navigation {\r\n            display: none;\r\n        }\r\n        // ナビゲーションの分の余白を削除\r\n        .watch-content {\r\n            .watch-header {\r\n                padding-left: 30px;\r\n                @include tablet-vertical {\r\n                    padding-left: 16px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    padding-left: 16px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    padding-left: 16px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .watch-navigation {\r\n        display: flex;\r\n        flex-direction: column;\r\n        position: fixed;\r\n        width: 68px;\r\n        top: 0px;\r\n        left: 0px;\r\n        // スマホ・タブレットのブラウザでアドレスバーが完全に引っ込むまでビューポートの高さが更新されず、\r\n        // その間下に何も背景がない部分ができてしまうのを防ぐ\r\n        bottom: -100px;\r\n        padding: 18px 8px 122px;\r\n        background: #2F221F80;\r\n        transition: opacity 0.3s, visibility 0.3s;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        z-index: 10;\r\n        @include tablet-vertical {\r\n            display: none;\r\n        }\r\n        @include smartphone-horizontal {\r\n            display: none;\r\n        }\r\n        @include smartphone-vertical {\r\n            display: none;\r\n        }\r\n\r\n        .watch-navigation__icon {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 52px;\r\n            margin-bottom: 17px;\r\n            border-radius: 11px;\r\n            font-size: 16px;\r\n            color: var(--v-text-base);\r\n            transition: background-color 0.15s;\r\n            text-decoration: none;\r\n            user-select: none;\r\n            @include smartphone-horizontal {\r\n                height: 32px;\r\n                border-radius: 10px;\r\n            }\r\n        }\r\n\r\n        @include smartphone-horizontal {\r\n            // スペースを確保するため、スペーサーを非表示に\r\n            div.spacer {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        .watch-navigation__link {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 52px;\r\n            border-radius: 11px;\r\n            font-size: 16px;\r\n            color: var(--v-text-base);\r\n            transition: background-color 0.15s;\r\n            text-decoration: none;\r\n            user-select: none;\r\n            @include smartphone-horizontal {\r\n                height: 44px;\r\n                border-radius: 10px;\r\n                // スペースを確保するため、設定・バージョン情報のアイコンを非表示に\r\n                &:nth-last-child(1), &:nth-last-child(2) {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            &:hover {\r\n                background: #433532A0;\r\n            }\r\n\r\n            @include smartphone-horizontal {\r\n                &-icon {\r\n                    width: 26px;\r\n                    height: 26px;\r\n                }\r\n            }\r\n\r\n            &--active {\r\n                color: var(--v-primary-base);\r\n                background: #433532A0;\r\n            }\r\n            + .watch-navigation__link {\r\n                margin-top: 4px;\r\n                @include smartphone-horizontal {\r\n                    margin-top: auto;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .watch-content {\r\n        display: flex;\r\n        position: relative;\r\n        width: 100%;\r\n        cursor: none;\r\n\r\n        .watch-header {\r\n            display: flex;\r\n            align-items: center;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 82px;\r\n            padding-left: calc(68px + 30px);\r\n            padding-right: 30px;\r\n            background: linear-gradient(to bottom, #000000cf, transparent);\r\n            transition: opacity 0.3s, visibility 0.3s;\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            z-index: 5;\r\n\r\n            @include tablet-vertical {\r\n                height: 66px;\r\n                padding-left: 16px;\r\n                padding-right: 16px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                padding-left: calc(68px + 16px);\r\n                padding-right: 16px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                height: 66px;\r\n                padding-left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-vertical {\r\n                display: none;\r\n                height: 50px;\r\n                padding-left: 16px;\r\n                padding-right: 16px;\r\n            }\r\n\r\n            .watch-header__back-icon {\r\n                display: none;\r\n                @include tablet-vertical {\r\n                    display: flex;\r\n                    position: relative !important;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    flex-shrink: 0;\r\n                    width: 40px;\r\n                    height: 40px;\r\n                    left: -6px;\r\n                    padding: 6px;\r\n                    margin-right: 2px;\r\n                    border-radius: 50%;\r\n                    color: var(--v-text-base);\r\n                }\r\n                @include smartphone-horizontal {\r\n                    display: flex;\r\n                    position: relative !important;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    flex-shrink: 0;\r\n                    width: 36px;\r\n                    height: 36px;\r\n                    left: -6px;\r\n                    padding: 6px;\r\n                    margin-right: 2px;\r\n                    border-radius: 50%;\r\n                    color: var(--v-text-base);\r\n                }\r\n                @include smartphone-vertical {\r\n                    display: flex;\r\n                    position: relative !important;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    flex-shrink: 0;\r\n                    width: 36px;\r\n                    height: 36px;\r\n                    left: -6px;\r\n                    padding: 6px;\r\n                    margin-right: 2px;\r\n                    border-radius: 50%;\r\n                    color: var(--v-text-base);\r\n                }\r\n            }\r\n\r\n            .watch-header__broadcaster {\r\n                display: inline-block;\r\n                flex-shrink: 0;\r\n                width: 64px;\r\n                height: 36px;\r\n                border-radius: 5px;\r\n                background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n                object-fit: cover;\r\n                user-select: none;\r\n\r\n                @include tablet-vertical {\r\n                    width: 48px;\r\n                    height: 28px;\r\n                    border-radius: 4px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    width: 48px;\r\n                    height: 28px;\r\n                    border-radius: 4px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            .watch-header__program-title {\r\n                margin-left: 18px;\r\n                font-size: 18px;\r\n                font-weight: bold;\r\n                font-feature-settings: \"palt\" 1;  // 文字詰め\r\n                letter-spacing: 0.05em;  // 字間を少し空ける\r\n                overflow: hidden;\r\n                white-space: nowrap;\r\n                text-overflow: ellipsis;\r\n\r\n                @include tablet-vertical {\r\n                    margin-left: 12px;\r\n                    font-size: 16px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    margin-left: 12px;\r\n                    font-size: 16px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    margin-left: 0px;\r\n                    font-size: 16px;\r\n                }\r\n            }\r\n\r\n            .watch-header__program-time {\r\n                flex-shrink: 0;\r\n                margin-left: 16px;\r\n                font-size: 15px;\r\n                font-weight: 500;\r\n\r\n                @include smartphone-horizontal {\r\n                    margin-left: 8px;\r\n                    font-size: 14px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    margin-left: 8px;\r\n                    font-size: 14px;\r\n                }\r\n            }\r\n\r\n            .watch-header__now {\r\n                flex-shrink: 0;\r\n                margin-left: 16px;\r\n                font-size: 13px;\r\n                font-weight: 500;\r\n\r\n                @include smartphone-horizontal {\r\n                    display: none;\r\n                }\r\n                @include smartphone-vertical {\r\n                    display: none;\r\n                }\r\n            }\r\n        }\r\n\r\n        .watch-player {\r\n            display: flex;\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-size: contain;\r\n            background-position: center;\r\n            @include tablet-vertical {\r\n                aspect-ratio: 16 / 9;\r\n            }\r\n            @include smartphone-vertical {\r\n                aspect-ratio: 16 / 9;\r\n            }\r\n\r\n            .watch-player__background-wrapper {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 100%;\r\n\r\n                .watch-player__background {\r\n                    position: relative;\r\n                    top: 50%;\r\n                    left: 50%;\r\n                    max-height: 100%;\r\n                    aspect-ratio: 16 / 9;\r\n                    transform: translate(-50%, -50%);\r\n                    background-blend-mode: overlay;\r\n                    background-color: rgba(14, 14, 18, 0.35);\r\n                    background-size: cover;\r\n                    background-image: none;\r\n                    opacity: 0;\r\n                    visibility: hidden;\r\n                    transition: opacity 0.4s cubic-bezier(0.4, 0.38, 0.49, 0.94), visibility 0.4s cubic-bezier(0.4, 0.38, 0.49, 0.94);\r\n                    will-change: opacity;\r\n\r\n                    &--display {\r\n                        opacity: 1;\r\n                        visibility: visible;\r\n                    }\r\n\r\n                    .watch-player__background-logo {\r\n                        display: inline-block;\r\n                        position: absolute;\r\n                        height: 34px;\r\n                        right: 56px;\r\n                        bottom: 44px;\r\n                        filter: drop-shadow(0px 0px 5px var(--v-black-base));\r\n\r\n                        @include tablet-vertical {\r\n                            height: 30px;\r\n                            right: 34px;\r\n                            bottom: 30px;\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            height: 25px;\r\n                            right: 30px;\r\n                            bottom: 24px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            height: 22px;\r\n                            right: 30px;\r\n                            bottom: 24px;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            .watch-player__buffering {\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n                color: var(--v-background-lighten3);\r\n                filter: drop-shadow(0px 0px 3px rgba(0, 0, 0, 0.3));\r\n                opacity: 0;\r\n                visibility: hidden;\r\n                transition: opacity 0.2s cubic-bezier(0.4, 0.38, 0.49, 0.94), visibility 0.2s cubic-bezier(0.4, 0.38, 0.49, 0.94);\r\n                will-change: opacity;\r\n                z-index: 3;\r\n\r\n                &--display {\r\n                    opacity: 1;\r\n                    visibility: visible;\r\n                }\r\n            }\r\n\r\n            .watch-player__dplayer {\r\n                width: 100%;\r\n            }\r\n\r\n            .watch-player__button {\r\n                display: flex;\r\n                justify-content: space-around;\r\n                flex-direction: column;\r\n                position: absolute;\r\n                top: 50%;\r\n                right: 28px;\r\n                height: 190px;\r\n                transform: translateY(-50%);\r\n                opacity: 0;\r\n                visibility: hidden;\r\n                transition: opacity 0.3s, visibility 0.3s;\r\n                @include tablet-vertical {\r\n                    right: 15px;\r\n                    height: 128px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    right: 15px;\r\n                    height: 155px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    right: 15px;\r\n                    height: 100px;\r\n                }\r\n\r\n                .switch-button {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    width: 48px;\r\n                    height: 48px;\r\n                    color: var(--v-text-base);\r\n                    background: #2F221FC0;\r\n                    border-radius: 7px;\r\n                    transition: background-color 0.15s;\r\n                    user-select: none;\r\n                    cursor: pointer;\r\n                    @include smartphone-horizontal {\r\n                        width: 38px;\r\n                        height: 38px;\r\n                        border-radius: 5px;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        width: 38px;\r\n                        height: 38px;\r\n                        border-radius: 5px;\r\n                    }\r\n\r\n                    &:hover {\r\n                        background: #2F221FF0;\r\n                    }\r\n                    // タッチデバイスで hover を無効にする\r\n                    @media (hover: none) {\r\n                        &:hover {\r\n                            background: #2F221FC0;\r\n                        }\r\n                    }\r\n\r\n                    svg {\r\n                        @include smartphone-horizontal {\r\n                            height: 27px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            height: 27px;\r\n                        }\r\n                    }\r\n\r\n                    .switch-button-icon {\r\n                        position: relative;\r\n                    }\r\n\r\n                    &-up > .switch-button-icon {\r\n                        top: 6px;\r\n                    }\r\n                    &-panel {\r\n                        @include tablet-vertical {\r\n                            display: none;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            display: none;\r\n                        }\r\n                    }\r\n                    &-panel > .switch-button-icon {\r\n                        top: 1.5px;\r\n                        transition: color 0.4s cubic-bezier(0.26, 0.68, 0.55, 0.99);\r\n                    }\r\n                    &-down > .switch-button-icon {\r\n                        bottom: 4px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .watch-panel {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex-shrink: 0;\r\n        width: 352px;\r\n        height: 100%;\r\n        background: var(--v-background-base);\r\n        @include tablet-vertical {\r\n            width: 100%;\r\n            height: auto;\r\n            flex-grow: 1;\r\n        }\r\n        @include smartphone-horizontal {\r\n            width: 310px;\r\n        }\r\n        @include smartphone-vertical {\r\n            width: 100%;\r\n            height: auto;\r\n            flex-grow: 1;\r\n        }\r\n\r\n        // タッチデバイスのみ、content-visibility: hidden でパネルを折り畳んでいるときの描画パフォーマンスを上げる\r\n        @media (hover: none) {\r\n            content-visibility: hidden;\r\n        }\r\n\r\n        .watch-panel__header {\r\n            display: flex;\r\n            align-items: center;\r\n            flex-shrink: 0;\r\n            width: 100%;\r\n            height: 70px;\r\n            padding-left: 16px;\r\n            padding-right: 16px;\r\n            @include tablet-vertical {\r\n                display: none;\r\n            }\r\n            @include smartphone-horizontal {\r\n                display: none;\r\n            }\r\n            @include smartphone-vertical {\r\n                display: none;\r\n            }\r\n\r\n            .panel-close-button {\r\n                display: flex;\r\n                position: relative;\r\n                align-items: center;\r\n                flex-shrink: 0;\r\n                left: -4px;\r\n                height: 35px;\r\n                padding: 0 4px;\r\n                border-radius: 5px;\r\n                font-size: 16px;\r\n                user-select: none;\r\n                cursor: pointer;\r\n\r\n                &__icon {\r\n                    position: relative;\r\n                    left: -4px;\r\n                }\r\n                &__text {\r\n                    font-weight: bold;\r\n                }\r\n            }\r\n\r\n            .panel-broadcaster {\r\n                display: flex;\r\n                align-items: center;\r\n                min-width: 0;\r\n                margin-left: 16px;\r\n\r\n                &__icon {\r\n                    display: inline-block;\r\n                    flex-shrink: 0;\r\n                    width: 43px;\r\n                    height: 24px;\r\n                    border-radius: 3px;\r\n                    background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n                    object-fit: cover;\r\n                    user-select: none;\r\n                }\r\n\r\n                &__number {\r\n                    flex-shrink: 0;\r\n                    margin-left: 8px;\r\n                    font-size: 16px;\r\n                }\r\n\r\n                &__name {\r\n                    margin-left: 5px;\r\n                    font-size: 16px;\r\n                    overflow: hidden;\r\n                    white-space: nowrap;\r\n                    text-overflow: ellipsis;\r\n                    @include smartphone-horizontal {\r\n                        font-size: 14px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .watch-panel__content-container {\r\n            position: relative;\r\n            height: 100%;\r\n\r\n            .watch-panel__content {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background: var(--v-background-base);\r\n                transition: opacity 0.2s, visibility 0.2s;\r\n                opacity: 0;\r\n                visibility: hidden;\r\n\r\n                // スマホ・タブレット (タッチデバイス) ではアニメーションが重めなので、アニメーションを無効化\r\n                // アクティブなタブ以外は明示的に描画しない\r\n                @media (hover: none) {\r\n                    transition: none;\r\n                    content-visibility: hidden;\r\n                }\r\n                &--active {\r\n                    opacity: 1;\r\n                    visibility: visible;\r\n                    content-visibility: auto;\r\n                }\r\n            }\r\n\r\n            .watch-panel__content-remocon-button {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                position: absolute;\r\n                right: 16px;\r\n                bottom: 16px;\r\n                width: 48px;\r\n                height: 48px;\r\n                border-radius: 50%;\r\n                background: var(--v-background-lighten1);\r\n                outline: none;\r\n                transition: opacity 0.2s, visibility 0.2s;\r\n                opacity: 0;\r\n                visibility: hidden;\r\n\r\n                @media (hover: none) {\r\n                    transition: none;\r\n                }\r\n                &--active {\r\n                    opacity: 1;\r\n                    visibility: visible;\r\n                }\r\n            }\r\n        }\r\n\r\n        .watch-panel__navigation {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-evenly;\r\n            flex-shrink: 0;\r\n            height: 77px;\r\n            background: var(--v-background-lighten1);\r\n            @include tablet-vertical {\r\n                height: 48px;\r\n                background: var(--v-background-base);\r\n            }\r\n            @include smartphone-horizontal {\r\n                height: 34px;\r\n            }\r\n            @include smartphone-vertical {\r\n                height: 44px;\r\n                background: var(--v-background-base);\r\n            }\r\n\r\n            .panel-navigation-button {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                flex-direction: column;\r\n                width: 77px;\r\n                height: 56px;\r\n                padding: 6px 0px;\r\n                border-radius: 5px;\r\n                color: var(--v-text-base);\r\n                box-sizing: content-box;\r\n                transition: color 0.3s;\r\n                user-select: none;\r\n                cursor: pointer;\r\n                @include tablet-vertical {\r\n                    width: 100px;\r\n                    height: 40px;\r\n                    padding: 5px 0px;\r\n                    box-sizing: border-box;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    height: 34px;\r\n                    padding: 5px 0px;\r\n                    box-sizing: border-box;\r\n                }\r\n                @include smartphone-vertical {\r\n                    height: 34px;\r\n                    padding: 5px 0px;\r\n                    box-sizing: border-box;\r\n                }\r\n\r\n                &--active {\r\n                    color: var(--v-primary-base);\r\n                    .panel-navigation-button__icon {\r\n                        color: var(--v-primary-base);\r\n                    }\r\n                    @include tablet-vertical {\r\n                        background: #5b2d3c;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        background: #5b2d3c;\r\n                    }\r\n                }\r\n\r\n                &__icon {\r\n                    height: 34px;\r\n                    @include tablet-vertical {\r\n                        color: var(--v-text-base);\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        color: var(--v-text-base);\r\n                    }\r\n                }\r\n                &__text {\r\n                    margin-top: 5px;\r\n                    font-size: 13px;\r\n                    @include tablet-vertical {\r\n                        display: none;\r\n                    }\r\n                    @include smartphone-horizontal {\r\n                        display: none;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        display: none;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Watch.vue?vue&type=template&id=1e95586c&scoped=true\"\nimport script from \"./Watch.vue?vue&type=script&lang=ts\"\nexport * from \"./Watch.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Watch.vue?vue&type=style&index=0&id=1e95586c&prod&lang=scss\"\nimport style1 from \"./Watch.vue?vue&type=style&index=1&id=1e95586c&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1e95586c\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('main',{staticClass:\"watch-container\",class:{\n            'watch-container--control-display': _vm.playerStore.is_control_display,\n            'watch-container--panel-display': _vm.Utils.isSmartphoneVertical() || _vm.Utils.isTabletVertical() ? true : _vm.is_panel_display,\n            'watch-container--fullscreen': _vm.playerStore.is_fullscreen,\n        }},[_c('nav',{staticClass:\"watch-navigation\",on:{\"mousemove\":($event) => _vm.player_wrapper?.handlePlayerControlUIVisibility($event),\"touchmove\":($event) => _vm.player_wrapper?.handlePlayerControlUIVisibility($event),\"click\":($event) => _vm.player_wrapper?.handlePlayerControlUIVisibility($event)}},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-navigation__icon\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"watch-navigation__icon-image\",attrs:{\"src\":\"/assets/images/icon.svg\",\"width\":\"23px\"}})]),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('テレビをみる'),expression:\"'テレビをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('ビデオをみる'),expression:\"'ビデオをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('番組表'),expression:\"'番組表'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('録画予約'),expression:\"'録画予約'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/reserves/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",staticStyle:{\"padding\":\"0.5px\"},attrs:{\"icon\":\"fluent:timer-16-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('マイリスト'),expression:\"'マイリスト'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/mylist/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('キャプチャ'),expression:\"'キャプチャ'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}})],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('設定'),expression:\"'設定'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}})],1)],1),_c('div',{staticClass:\"watch-content\",on:{\"mousemove\":($event) => _vm.player_wrapper?.handlePlayerControlUIVisibility($event, true),\"touchmove\":($event) => _vm.player_wrapper?.handlePlayerControlUIVisibility($event, true),\"click\":($event) => _vm.player_wrapper?.handlePlayerControlUIVisibility($event, true)}},[_c('header',{staticClass:\"watch-header\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-header__back-icon\",attrs:{\"to\":\"/tv/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('img',{staticClass:\"watch-header__broadcaster\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.display_channel_id)}/logo`}}),_c('span',{staticClass:\"watch-header__program-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_present, 'title'))}}),_c('span',{staticClass:\"watch-header__program-time\"},[_vm._v(\" \"+_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channelsStore.channel.current.program_present, true))+\" \")]),_c('v-spacer'),_c('span',{staticClass:\"watch-header__now\"},[_vm._v(_vm._s(_vm.time))])],1),_c('div',{staticClass:\"watch-player\",class:{\n                'watch-player--loading': _vm.playerStore.is_loading,\n                'watch-player--virtual-keyboard-display': _vm.playerStore.is_virtual_keyboard_display && _vm.Utils.hasActiveElementClass('dplayer-comment-input'),\n            }},[_c('div',{staticClass:\"watch-player__background-wrapper\"},[_c('div',{staticClass:\"watch-player__background\",class:{'watch-player__background--display': _vm.playerStore.is_background_display},style:({backgroundImage: `url(${_vm.playerStore.background_url})`})},[_c('img',{staticClass:\"watch-player__background-logo\",attrs:{\"src\":\"/assets/images/logo.svg\"}})])]),_c('v-progress-circular',{staticClass:\"watch-player__buffering\",class:{'watch-player__buffering--display': _vm.playerStore.is_video_buffering && (_vm.playerStore.is_loading || _vm.playerStore.is_video_paused)},attrs:{\"indeterminate\":\"\",\"size\":\"60\",\"width\":\"6\"}}),_c('div',{staticClass:\"watch-player__dplayer\"}),_c('div',{staticClass:\"watch-player__button\",on:{\"mousemove\":($event) => _vm.player_wrapper?.handlePlayerControlUIVisibility($event),\"touchmove\":($event) => _vm.player_wrapper?.handlePlayerControlUIVisibility($event),\"click\":($event) => _vm.player_wrapper?.handlePlayerControlUIVisibility($event)}},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.top\",value:('前のチャンネル'),expression:\"'前のチャンネル'\",modifiers:{\"top\":true}}],staticClass:\"switch-button switch-button-up\",on:{\"click\":function($event){_vm.is_zapping = true; _vm.$router.push({path: `/tv/watch2/${_vm.channelsStore.channel.previous.display_channel_id}`})}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-left-24-filled\",\"width\":\"32px\",\"rotate\":\"1\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"switch-button switch-button-panel switch-button-panel--open\",on:{\"click\":function($event){_vm.is_panel_display = !_vm.is_panel_display}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:navigation-16-filled\",\"width\":\"32px\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.bottom\",value:('次のチャンネル'),expression:\"'次のチャンネル'\",modifiers:{\"bottom\":true}}],staticClass:\"switch-button switch-button-down\",on:{\"click\":function($event){_vm.is_zapping = true; _vm.$router.push({path: `/tv/watch2/${_vm.channelsStore.channel.next.display_channel_id}`})}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-right-24-filled\",\"width\":\"33px\",\"rotate\":\"1\"}})],1)])],1)]),_c('div',{staticClass:\"watch-panel\",on:{\"mousemove\":($event) => _vm.player_wrapper?.handlePlayerControlUIVisibility($event)}},[_c('div',{staticClass:\"watch-panel__header\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-close-button\",on:{\"click\":function($event){_vm.is_panel_display = false}}},[_c('Icon',{staticClass:\"panel-close-button__icon\",attrs:{\"icon\":\"akar-icons:chevron-right\",\"width\":\"25px\"}}),_c('span',{staticClass:\"panel-close-button__text\"},[_vm._v(\"閉じる\")])],1),_c('v-spacer'),_c('div',{staticClass:\"panel-broadcaster\"},[_c('img',{staticClass:\"panel-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.display_channel_id)}/logo`}}),_c('div',{staticClass:\"panel-broadcaster__number\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.channel_number))]),_c('div',{staticClass:\"panel-broadcaster__name\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.name))])])],1),_c('div',{staticClass:\"watch-panel__content-container\"},[_c('Program',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Program'}}),_c('Channel',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Channel'}}),_c('Comment',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Comment'},attrs:{\"playback_mode\":'Live'}}),_c('Twitter',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Twitter'},attrs:{\"playback_mode\":'Live'},on:{\"panel_folding_requested\":function($event){_vm.is_panel_display = false}}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-panel__content-remocon-button elevation-8\",class:{'watch-panel__content-remocon-button--active': _vm.tv_panel_active_tab === 'Program' || _vm.tv_panel_active_tab === 'Channel'},on:{\"click\":function($event){_vm.is_remocon_display = !_vm.is_remocon_display}}},[_c('Icon',{staticClass:\"panel-close-button__icon\",attrs:{\"icon\":\"material-symbols:remote-gen\",\"width\":\"25px\"}})],1),_c('Remocon',{staticClass:\"watch-panel__remocon\",attrs:{\"showing\":(_vm.tv_panel_active_tab === 'Program' || _vm.tv_panel_active_tab === 'Channel') && _vm.is_remocon_display === true},on:{\"close\":function($event){_vm.is_remocon_display = false}}})],1),_c('div',{staticClass:\"watch-panel__navigation\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Program'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Program'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:info-circle\",\"width\":\"33px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"番組情報\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Channel'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Channel'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:broadcast-tower\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"チャンネル\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Comment'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Comment'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"29px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"コメント\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Twitter'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Twitter'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"Twitter\")])],1)])])]),_c('v-dialog',{attrs:{\"max-width\":\"1050\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.playerStore.shortcut_key_modal),callback:function ($$v) {_vm.$set(_vm.playerStore, \"shortcut_key_modal\", $$v)},expression:\"playerStore.shortcut_key_modal\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"px-5 pt-4 pb-3 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":\"fluent:keyboard-20-filled\",\"height\":\"28px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"キーボードショートカット\")]),_c('v-spacer'),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\",on:{\"click\":function($event){_vm.playerStore.shortcut_key_modal = false}}},[_c('Icon',{attrs:{\"icon\":\"fluent:dismiss-12-filled\",\"width\":\"23px\",\"height\":\"23px\"}})],1)],1),_c('div',{staticClass:\"px-5 pb-4\"},[_c('v-row',_vm._l((_vm.shortcut_key_list),function(shortcut_key_column,shortcut_key_column_name){return _c('v-col',{key:shortcut_key_column_name,attrs:{\"cols\":\"6\"}},_vm._l((shortcut_key_column),function(shortcut_keys){return _c('div',{key:shortcut_keys.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":shortcut_keys.icon,\"height\":shortcut_keys.icon_height}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(shortcut_keys.name))])],1),_vm._l((shortcut_keys.shortcuts),function(shortcut){return _c('div',{key:shortcut.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-2 mt-2 d-flex align-center font-weight-medium\"},[_c('span',{staticClass:\"mr-2\",domProps:{\"innerHTML\":_vm._s(shortcut.name)}}),_c('div',{staticClass:\"ml-auto d-flex align-center flex-shrink-0\"},_vm._l((shortcut.keys),function(key,index){return _c('div',{key:key.name,staticClass:\"ml-auto d-flex align-center\"},[_c('span',{staticClass:\"shortcut-key\"},[_vm._l((key.name.split(';')),function(key_name){return _c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(key.icon === true),expression:\"key.icon === true\"}],key:key_name,attrs:{\"icon\":key_name,\"height\":\"18px\"}})}),(key.icon === false)?_c('span',{domProps:{\"innerHTML\":_vm._s(key.name)}}):_vm._e()],2),(index < (shortcut.keys.length - 1))?_c('span',{staticClass:\"shortcut-key-plus\"},[_vm._v(\"+\")]):_vm._e()])}),0)])])})],2)}),0)}),1)],1)],1)],1),_c('BottomNavigation')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-container\"},[_c('section',{staticClass:\"comment-header\"},[_c('h2',{staticClass:\"comment-header__title\"},[_c('Icon',{staticClass:\"comment-header__title-icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"height\":\"18.5px\"}}),_c('span',{staticClass:\"comment-header__title-text\"},[_vm._v(\"コメント\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-header__button ml-auto\",on:{\"click\":function($event){_vm.comment_mute_settings_modal = !_vm.comment_mute_settings_modal}}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ミュート設定\")])],1)]),_c('section',{ref:\"comment_list_wrapper\",staticClass:\"comment-list-wrapper\"},[_c('div',{staticClass:\"comment-list-dropdown\",class:{'comment-list-dropdown--display': _vm.is_comment_list_dropdown_display},style:({'--comment-list-dropdown-top': `${_vm.comment_list_dropdown_top}px`})},[_c('v-list',{staticStyle:{\"background\":\"var(--v-background-lighten1)\"}},[_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){return _vm.copyTextToClipboard()}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:clipboard-paste-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"クリップボードにコピー\")])],1)],1),_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){return _vm.addMutedKeywords()}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:comment-dismiss-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"このコメントをミュート\")])],1)],1),_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){return _vm.addMutedNiconicoUserIds()}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-prohibited-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"このコメントの投稿者をミュート\")])],1)],1)],1)],1),_c('div',{staticClass:\"comment-list-cover\",class:{'comment-list-cover--display': _vm.is_comment_list_dropdown_display},on:{\"click\":function($event){return _vm.hideCommentListDropdown()}}}),_c('DynamicScroller',{staticClass:\"comment-list\",attrs:{\"direction\":'vertical',\"items\":_vm.comment_list,\"min-item-size\":34},scopedSlots:_vm._u([{key:\"default\",fn:function({item, active}){return [_c('DynamicScrollerItem',{attrs:{\"item\":item,\"active\":active,\"size-dependencies\":[item.text]}},[_c('div',{staticClass:\"comment\",class:{'comment--my-post': item.my_post}},[_c('span',{staticClass:\"comment__text\"},[_vm._v(_vm._s(item.text))]),_c('span',{staticClass:\"comment__time\"},[_vm._v(_vm._s(item.time))]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\",value:(!_vm.Utils.isTouchDevice()),expression:\"!Utils.isTouchDevice()\"}],staticClass:\"comment__icon\",on:{\"mouseup\":function($event){return _vm.showCommentListDropdown($event, item)},\"touchend\":function($event){return _vm.showCommentListDropdown($event, item)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:more-vertical-20-filled\",\"width\":\"20px\"}})],1)])])]}}])}),(_vm.playerStore.live_comment_init_failed_message === null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"まだコメントがありません。\")]),_c('div',{staticClass:\"comment-announce__text\"},[(_vm.playback_mode === 'Live')?_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\" このチャンネルに対応するニコニコ実況のコメントが、リアルタイムで表示されます。 \")]):_vm._e(),(_vm.playback_mode === 'Video')?_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\" この録画番組に対応するニコニコ実況の過去ログコメントを読み込んでいます… \")]):_vm._e()])]):_vm._e(),(_vm.playerStore.live_comment_init_failed_message !== null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"コメントがありません。\")]),_c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(_vm._s(_vm.playerStore.live_comment_init_failed_message))])])]):_vm._e()],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-scroll-button elevation-5\",class:{'comment-scroll-button--display': _vm.is_manual_scroll},on:{\"click\":function($event){_vm.is_manual_scroll = false; _vm.scrollCommentList(true);}}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-down-12-filled\",\"height\":\"29px\"}})],1),_c('CommentMuteSettings',{model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"comment-container\">\r\n        <section class=\"comment-header\">\r\n            <h2 class=\"comment-header__title\">\r\n                <Icon class=\"comment-header__title-icon\" icon=\"bi:chat-left-text-fill\" height=\"18.5px\" />\r\n                <span class=\"comment-header__title-text\">コメント</span>\r\n            </h2>\r\n            <button v-ripple class=\"comment-header__button ml-auto\" @click=\"comment_mute_settings_modal = !comment_mute_settings_modal\">\r\n                <Icon icon=\"heroicons-solid:filter\" height=\"11px\" />\r\n                <span class=\"ml-1\">ミュート設定</span>\r\n            </button>\r\n        </section>\r\n        <section class=\"comment-list-wrapper\" ref=\"comment_list_wrapper\">\r\n            <div class=\"comment-list-dropdown\" :class=\"{'comment-list-dropdown--display': is_comment_list_dropdown_display}\"\r\n                :style=\"{'--comment-list-dropdown-top': `${comment_list_dropdown_top}px`}\">\r\n                <v-list style=\"background: var(--v-background-lighten1)\">\r\n                    <v-list-item dense style=\"min-height: 30px\" @click=\"copyTextToClipboard()\">\r\n                        <v-list-item-title class=\"d-flex align-center\">\r\n                            <Icon icon=\"fluent:clipboard-paste-20-filled\" width=\"20px\" />\r\n                            <span class=\"ml-2\">クリップボードにコピー</span>\r\n                        </v-list-item-title>\r\n                    </v-list-item>\r\n                    <v-list-item dense style=\"min-height: 30px\" @click=\"addMutedKeywords()\">\r\n                        <v-list-item-title class=\"d-flex align-center\">\r\n                            <Icon icon=\"fluent:comment-dismiss-20-filled\" width=\"20px\" />\r\n                            <span class=\"ml-2\">このコメントをミュート</span>\r\n                        </v-list-item-title>\r\n                    </v-list-item>\r\n                    <v-list-item dense style=\"min-height: 30px\" @click=\"addMutedNiconicoUserIds()\">\r\n                        <v-list-item-title class=\"d-flex align-center\" >\r\n                            <Icon icon=\"fluent:person-prohibited-20-filled\" width=\"20px\" />\r\n                            <span class=\"ml-2\">このコメントの投稿者をミュート</span>\r\n                        </v-list-item-title>\r\n                    </v-list-item>\r\n                </v-list>\r\n            </div>\r\n            <div class=\"comment-list-cover\" :class=\"{'comment-list-cover--display': is_comment_list_dropdown_display}\"\r\n                @click=\"hideCommentListDropdown()\"></div>\r\n            <DynamicScroller class=\"comment-list\" :direction=\"'vertical'\" :items=\"comment_list\" :min-item-size=\"34\">\r\n                <template v-slot=\"{item, active}\">\r\n                <DynamicScrollerItem :item=\"item\" :active=\"active\" :size-dependencies=\"[item.text]\">\r\n                    <div class=\"comment\" :class=\"{'comment--my-post': item.my_post}\">\r\n                        <span class=\"comment__text\">{{item.text}}</span>\r\n                        <span class=\"comment__time\">{{item.time}}</span>\r\n                        <!-- なぜか @click だとスマホで発火しないので @touchend にしている -->\r\n                        <div class=\"comment__icon\" v-ripple=\"!Utils.isTouchDevice()\"\r\n                            @mouseup=\"showCommentListDropdown($event, item)\"\r\n                            @touchend=\"showCommentListDropdown($event, item)\">\r\n                            <Icon icon=\"fluent:more-vertical-20-filled\" width=\"20px\" />\r\n                        </div>\r\n                    </div>\r\n                </DynamicScrollerItem>\r\n                </template>\r\n            </DynamicScroller>\r\n            <div class=\"comment-announce\" v-if=\"playerStore.live_comment_init_failed_message === null && comment_list.length === 0\">\r\n                <div class=\"comment-announce__heading\">まだコメントがありません。</div>\r\n                <div class=\"comment-announce__text\">\r\n                    <p class=\"mt-0 mb-0\" v-if=\"playback_mode === 'Live'\">\r\n                        このチャンネルに対応するニコニコ実況のコメントが、リアルタイムで表示されます。\r\n                    </p>\r\n                    <p class=\"mt-0 mb-0\" v-if=\"playback_mode === 'Video'\">\r\n                        この録画番組に対応するニコニコ実況の過去ログコメントを読み込んでいます…\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"comment-announce\" v-if=\"playerStore.live_comment_init_failed_message !== null && comment_list.length === 0\">\r\n                <div class=\"comment-announce__heading\">コメントがありません。</div>\r\n                <div class=\"comment-announce__text\">\r\n                    <p class=\"mt-0 mb-0\">{{playerStore.live_comment_init_failed_message}}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        <div v-ripple class=\"comment-scroll-button elevation-5\" @click=\"is_manual_scroll = false; scrollCommentList(true);\"\r\n             :class=\"{'comment-scroll-button--display': is_manual_scroll}\">\r\n            <Icon icon=\"fluent:arrow-down-12-filled\" height=\"29px\" />\r\n        </div>\r\n        <CommentMuteSettings v-model=\"comment_mute_settings_modal\" />\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue, { PropType } from 'vue';\r\n\r\nimport CommentMuteSettings from '@/components/Settings/CommentMuteSettings.vue';\r\nimport { ICommentData } from '@/services/player/managers/LiveCommentManager2';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport usePlayerStore from '@/stores/PlayerStore';\r\nimport Utils, { CommentUtils } from '@/utils';\r\n\r\nexport default Vue.extend({\r\n    name: 'Panel-CommentTab',\r\n    components: {\r\n        CommentMuteSettings,\r\n    },\r\n    props: {\r\n        playback_mode: {\r\n            type: String as PropType<'Live' | 'Video'>,\r\n            required: true,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // ユーティリティをテンプレートで使えるように\r\n            Utils: Utils,\r\n\r\n            // 手動スクロール状態かどうか\r\n            is_manual_scroll: false,\r\n\r\n            // 自動スクロール中かどうか\r\n            // 自動スクロール中の場合、scroll イベントが発火しても無視する\r\n            is_auto_scrolling: false,\r\n\r\n            // コメントリストの配列\r\n            comment_list: [] as ICommentData[],\r\n\r\n            // コメントリストの要素\r\n            comment_list_element: null as HTMLElement | null,\r\n\r\n            // コメントリストのドロップダウン関連\r\n            is_comment_list_dropdown_display: false as boolean,\r\n            comment_list_dropdown_top: 0 as number,\r\n            comment_list_dropdown_comment: null as ICommentData | null,\r\n\r\n            // コメントのミュート設定のモーダルを表示するか\r\n            comment_mute_settings_modal: false,\r\n\r\n            // visibilitychange イベントのリスナー\r\n            visibilitychange_listener: null as (() => void) | null,\r\n        };\r\n    },\r\n    computed: {\r\n        // ChannelsStore / PlayerStore にアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useChannelsStore, usePlayerStore),\r\n    },\r\n    mounted() {\r\n\r\n        // コメントリストの要素を取得\r\n        if (this.comment_list_element === null) {\r\n            this.comment_list_element = this.$el.querySelector('.comment-list')!;\r\n        }\r\n\r\n        // 現在コメントリストがユーザーイベントでスクロールされているかどうか\r\n        let is_user_scrolling = false;\r\n\r\n        // mousedown → mouseup 中: スクロールバーをマウスでドラッグ\r\n        // 残念ながらスクロールバーのドラッグ中は mousemove のイベントが発火しないため、直接 is_user_scrolling を設定する\r\n        this.comment_list_element.onmousedown = (event: MouseEvent) => {\r\n            // コメントリストの要素の左上を起点としたカーソルのX座標を求める\r\n            if (this.comment_list_element === null) return;\r\n            const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\r\n            // 座標が clientWidth 以上であれば、スクロールバー上で mousedown されたものとする\r\n            if (x > this.comment_list_element.clientWidth) is_user_scrolling = true;\r\n        };\r\n        this.comment_list_element.onmouseup = (event: MouseEvent) => {\r\n            // コメントリストの要素の左上を起点としたカーソルのX座標を求める\r\n            if (this.comment_list_element === null) return;\r\n            const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\r\n            // 座標が clientWidth 以上であれば、スクロールバー上で mouseup されたものとする\r\n            if (x > this.comment_list_element.clientWidth) is_user_scrolling = false;\r\n        };\r\n\r\n        // ユーザーによるスクロールイベントで is_user_scrolling を true にする\r\n        // 0.1 秒後に false にする（継続してイベントが発火すれば再び true になる）\r\n        const on_user_scrolling = () => {\r\n            is_user_scrolling = true;\r\n            window.setTimeout(() => is_user_scrolling = false, 100);\r\n        };\r\n\r\n        // 現在コメントリストがドラッグされているかどうか\r\n        let is_dragging = false;\r\n        // touchstart → touchend 中: スクロールバーをタップでドラッグ\r\n        this.comment_list_element.ontouchstart = () => is_dragging = true;\r\n        this.comment_list_element.ontouchend = () => is_dragging = false;\r\n        // touchmove + is_dragging 中: コメントリストをタップでドラッグしてスクロール\r\n        this.comment_list_element.ontouchmove = () => is_dragging === true ? on_user_scrolling(): '';\r\n\r\n        // wheel 中: マウスホイールの回転\r\n        this.comment_list_element.onwheel = on_user_scrolling;\r\n\r\n        // コメントリストがスクロールされた際、自動スクロール中でない&ユーザーイベントで操作されていれば、手動スクロールモードに設定\r\n        // 手動スクロールモードでは自動スクロールを行わず、ユーザーがコメントリストをスクロールできるようにする\r\n        this.comment_list_element.onscroll = async () => {\r\n            if (this.comment_list_element === null) return;\r\n\r\n            // scroll イベントは自動スクロールでも発火してしまうので、ユーザーイベントによるスクロールかを確認しないといけない\r\n            // 自動スクロール中かどうかは is_auto_scrolling が true のときで判定できるはずだが、\r\n            // コメントが多くなると is_auto_scrolling が false なのに scroll イベントが遅れて発火してしまうことがある\r\n            if (this.is_auto_scrolling === false && is_user_scrolling === true) {\r\n\r\n                // 手動スクロールを有効化\r\n                this.is_manual_scroll = true;\r\n\r\n                // イベント発火時点では scrollTop の値が完全に下にスクロールされていない場合があるため、0.1秒だけ待つ\r\n                await Utils.sleep(0.1);\r\n\r\n                // 一番下までスクロールされていたら自動スクロールに戻す\r\n                if ((this.comment_list_element.scrollTop + this.comment_list_element.offsetHeight) >\r\n                    (this.comment_list_element.scrollHeight - 10)) {  // 一番下から 10px 以内\r\n                    this.is_manual_scroll = false;  // 手動スクロールを無効化\r\n                }\r\n            }\r\n        };\r\n\r\n        // ***** イベントリスナーの登録 *****\r\n\r\n        // タブが非表示状態のときにコメントを格納する配列\r\n        // タブが表示状態になったらコメントリストにのみ表示する（遅れているのでプレイヤーには表示しない）\r\n        const comment_list_buffer: ICommentData[] = [];\r\n\r\n        // コメントの最大保持数\r\n        const max_comment_count = 500;\r\n\r\n        // LiveCommentManager からコメントを受信したときのイベントハンドラーを登録\r\n        // 非同期関数で登録することで、気持ち高速化を図る\r\n        this.playerStore.event_emitter.on('LiveCommentReceived', async (event) => {\r\n\r\n            // 初回の過去コメント (最大50件) を受信したとき\r\n            if (event.is_initial_comments === true) {\r\n\r\n                // チャンネルが切り替わった可能性があるので、既存のコメントリストをクリア\r\n                this.comment_list = [];\r\n\r\n                // コメントリストに一括で追加\r\n                this.comment_list.push(...event.comments);\r\n\r\n                // ライブ視聴のみ: コメントリストを一番下までスクロール\r\n                if (this.playback_mode === 'Live') {\r\n                    this.scrollCommentList();\r\n                }\r\n\r\n            // 通常のコメントを受信したとき\r\n            } else {\r\n\r\n                // タブが非表示状態のときは、バッファにコメントを追加するだけで終了する\r\n                // ここで追加すると、タブが表示状態になったときに一斉に描画されて大変なことになる\r\n                if (document.visibilityState === 'hidden') {\r\n                    comment_list_buffer.push(...event.comments);\r\n                    return;\r\n                }\r\n\r\n                // コメントリストのコメント数が max_comment_count 件を超えたら、古いものから順に削除する\r\n                // 仮想スクロールとはいえ、さすがに max_comment_count 件を超えると重くなりそう\r\n                // 手動スクロール時は実行しない\r\n                if (this.comment_list.length >= max_comment_count && this.is_manual_scroll === false) {\r\n                    this.comment_list.splice(0, Math.max(0, this.comment_list.length - max_comment_count));\r\n                }\r\n\r\n                // コメントリストに追加\r\n                // 通常コメントは1つだが、コメントが殺到した場合は DOM 描画負荷軽減のため一括で送信されてくる\r\n                this.comment_list.push(...event.comments);\r\n\r\n                // コメントリストを一番下までスクロール\r\n                // ビデオ視聴では is_initial_comments が true のイベントしか送られてこないので、そもそも実行されない\r\n                this.scrollCommentList();\r\n            }\r\n        });\r\n\r\n        // LiveCommentManager からコメントの送信完了イベントを受信したときのイベントハンドラーを登録\r\n        this.playerStore.event_emitter.on('LiveCommentSendCompleted', async (event) => {\r\n\r\n            // 送信した自分のコメントをコメントリストに追加\r\n            this.comment_list.push(event.comment);\r\n\r\n            // コメントリストを一番下までスクロール\r\n            // ビデオ視聴ではコメントを送信できないので、そもそも実行されない\r\n            this.scrollCommentList();\r\n        });\r\n\r\n        // タブが表示状態になったときのイベントハンドラーを登録\r\n        this.visibilitychange_listener = () => {\r\n            if (document.visibilityState === 'visible') {\r\n\r\n                // コメントリスト + バッファの合計コメント数が max_comment_count 件を超えたら、\r\n                // コメントリスト内のコメントを古いものから順に削除し、max_comment_count 件になるようにする\r\n                const comment_list_and_buffer_length = this.comment_list.length + comment_list_buffer.length;\r\n                if (comment_list_and_buffer_length >= max_comment_count && this.is_manual_scroll === false) {\r\n                    this.comment_list.splice(0, Math.max(0, comment_list_and_buffer_length - max_comment_count));\r\n                }\r\n\r\n                // バッファ内のコメントをコメントリストに一括で追加する\r\n                this.comment_list.push(...comment_list_buffer);\r\n                comment_list_buffer.length = 0;  // バッファを空にする\r\n\r\n                // コメントリストを一番下までスクロール\r\n                this.scrollCommentList();\r\n            }\r\n        };\r\n        document.addEventListener('visibilitychange', this.visibilitychange_listener);\r\n    },\r\n    // 終了前に実行\r\n    beforeDestroy() {\r\n\r\n        // ***** イベントリスナーの登録解除 *****\r\n\r\n        // タブの表示/非表示の状態が切り替わったときのイベントを削除\r\n        if (this.visibilitychange_listener !== null) {\r\n            document.removeEventListener('visibilitychange', this.visibilitychange_listener);\r\n            this.visibilitychange_listener = null;\r\n        }\r\n\r\n        // LiveCommentManager からコメントを受信したときのイベントハンドラーを削除\r\n        this.playerStore.event_emitter.off('LiveCommentReceived');  // LiveCommentReceived イベントの全てのイベントハンドラーを削除\r\n        this.playerStore.event_emitter.off('LiveCommentSendCompleted');  // LiveCommentSendCompleted イベントの全てのイベントハンドラーを削除\r\n\r\n        // コメントリストをクリア\r\n        this.comment_list = [];\r\n    },\r\n    watch: {\r\n\r\n        // ライブ視聴のみ: ChannelsStore の channel.current.id の変更を監視する\r\n        // 現在視聴中のチャンネルが変更されたときにコメントリストをクリアする\r\n        'channelsStore.channel.current.id': {\r\n            handler() {\r\n                if (this.playback_mode === 'Live') {\r\n                    // 明示的に空の配列を入れてクリアしないと、コメントリストが残ったままになる\r\n                    this.comment_list = [];\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        // ドロップダウンメニューを表示する\r\n        showCommentListDropdown(event: Event, comment: ICommentData) {\r\n            const comment_list_wrapper_rect = (this.$refs.comment_list_wrapper as HTMLDivElement).getBoundingClientRect();\r\n            const comment_list_dropdown_height = 106;  // 106px はドロップダウンメニューの高さ\r\n            const comment_button_rect = (event.currentTarget as HTMLElement).getBoundingClientRect();\r\n            // メニューの表示位置をクリックされたコメントに合わせる\r\n            this.comment_list_dropdown_top = comment_button_rect.top - comment_list_wrapper_rect.top;\r\n            // メニューがコメントリストからはみ出るときだけ、表示位置を上側に調整\r\n            if ((this.comment_list_dropdown_top + comment_list_dropdown_height) > comment_list_wrapper_rect.height) {\r\n                this.comment_list_dropdown_top = this.comment_list_dropdown_top - comment_list_dropdown_height + comment_button_rect.height;\r\n            }\r\n            // 表示位置を調整できたので、メニューを表示\r\n            this.comment_list_dropdown_comment = comment;\r\n            this.is_comment_list_dropdown_display = true;\r\n        },\r\n\r\n        // ドロップダウンメニューを非表示にする\r\n        hideCommentListDropdown() {\r\n            this.is_comment_list_dropdown_display = false;\r\n            this.comment_list = this.comment_list.filter((comment) => {\r\n                return CommentUtils.isMutedComment(comment.text, comment.user_id) === false;\r\n            });\r\n        },\r\n\r\n        // コメントのテキストをクリップボードにコピーする\r\n        copyTextToClipboard() {\r\n            if (this.comment_list_dropdown_comment === null) return;\r\n            navigator.clipboard.writeText(this.comment_list_dropdown_comment.text);\r\n            this.hideCommentListDropdown();\r\n        },\r\n\r\n        // ミュートするキーワードを追加する\r\n        addMutedKeywords() {\r\n            if (this.comment_list_dropdown_comment === null) return;\r\n            CommentUtils.addMutedKeywords(this.comment_list_dropdown_comment.text);\r\n            this.hideCommentListDropdown();\r\n        },\r\n\r\n        // ミュートするニコニコユーザー ID を追加する\r\n        addMutedNiconicoUserIds() {\r\n            if (this.comment_list_dropdown_comment === null) return;\r\n            CommentUtils.addMutedNiconicoUserIDs(this.comment_list_dropdown_comment.user_id);\r\n            this.hideCommentListDropdown();\r\n        },\r\n\r\n        // コメントリストを一番下までスクロールする\r\n        async scrollCommentList(smooth: boolean = false) {\r\n            if (this.comment_list_element === null) return;\r\n\r\n            // ドロップダウンメニュー表示中なら手動スクロールモードに設定\r\n            if (this.is_comment_list_dropdown_display === true) {\r\n                this.is_manual_scroll = true;\r\n            }\r\n\r\n            // 手動スクロールモードの時は実行しない\r\n            if (this.is_manual_scroll === true) return;\r\n\r\n            // 自動スクロール中のフラグを立てる\r\n            this.is_auto_scrolling = true;\r\n\r\n            // window.requestAnimationFrame() でアニメーション更新を待ってからスクロールする (重要)\r\n            // すぐに scrollTo() を実行すると、DOM 描画のタイミングの関係なのか、なぜか最後までスクロールされないことがある\r\n            window.requestAnimationFrame(() => {\r\n                if (smooth === true) {  // スムーズスクロール\r\n                    this.comment_list_element?.scrollTo({top: this.comment_list_element.scrollHeight, left: 0, behavior: 'smooth'});\r\n                } else {\r\n                    this.comment_list_element?.scrollTo(0, this.comment_list_element.scrollHeight);\r\n                }\r\n            });\r\n\r\n            // 0.1 秒待つ（重要）\r\n            await Utils.sleep(0.1);\r\n\r\n            // 自動スクロール中のフラグを降ろす\r\n            this.is_auto_scrolling = false;\r\n        },\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.comment-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .comment-header {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-shrink: 0;\r\n        width: 100%;\r\n        height: 26px;\r\n        padding-left: 16px;\r\n        padding-right: 16px;\r\n        @include tablet-vertical {\r\n            margin-top: 20px;\r\n            padding-left: 24px;\r\n            padding-right: 24px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            margin-top: 12px;\r\n        }\r\n        @include smartphone-vertical {\r\n            margin-top: 14px;\r\n        }\r\n\r\n        &__title {\r\n            display: flex;\r\n            align-items: center;\r\n            font-size: 18.5px;\r\n            font-weight: bold;\r\n            line-height: 145%;\r\n            @include tablet-vertical {\r\n                font-size: 19px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                font-size: 16.5px;\r\n            }\r\n            @include smartphone-vertical {\r\n                font-size: 17px;\r\n            }\r\n\r\n            &-icon {\r\n                margin-bottom: -3px;  // 高さ調整\r\n                @include tablet-vertical {\r\n                    width: 24px;\r\n                    height: 24px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    height: 17.5px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    height: 18px;\r\n                }\r\n            }\r\n            &-text {\r\n                margin-left: 12px;\r\n                @include tablet-vertical {\r\n                    margin-left: 16px;\r\n                }\r\n            }\r\n        }\r\n\r\n        &__button {\r\n            display: flex;\r\n            align-items: center;\r\n            height: 26px;\r\n            padding: 0 9px;\r\n            border-radius: 4px;\r\n            background: var(--v-background-lighten3);\r\n            font-size: 11px;\r\n            line-height: 1.8;\r\n            letter-spacing: 0;\r\n        }\r\n    }\r\n\r\n    .comment-list-wrapper {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        min-height: 0;\r\n        margin-top: 16px;\r\n        @include tablet-vertical {\r\n            margin-top: 20px;\r\n        }\r\n        @include smartphone-horizontal {\r\n            margin-top: 12px;\r\n        }\r\n        @include smartphone-vertical {\r\n            margin-top: 14px;\r\n        }\r\n\r\n        .comment-list-dropdown {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: var(--comment-list-dropdown-top, 0px);\r\n            right: 16px;\r\n            border-radius: 4px;\r\n            overflow-x: hidden;\r\n            overflow-y: auto;\r\n            box-shadow: 0px 5px 5px -3px rgb(0 0 0 / 20%),\r\n                        0px 8px 10px 1px rgb(0 0 0 / 14%),\r\n                        0px 3px 14px 2px rgb(0 0 0 / 12%);\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            transition: opacity 0.15s ease, visibility 0.15s ease;\r\n            z-index: 8;\r\n            &--display {\r\n                opacity: 1;\r\n                visibility: visible;\r\n            }\r\n        }\r\n\r\n        .comment-list-cover {\r\n            display: none;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            z-index: 7;\r\n            &--display {\r\n                display: block;\r\n            }\r\n        }\r\n\r\n        .comment-list {\r\n            width: 100%;\r\n            height: 100%;\r\n            padding-left: 16px;\r\n            padding-right: 10px;\r\n            padding-bottom: 12px;\r\n            overflow-y: scroll !important;\r\n            @include tablet-vertical {\r\n                padding-left: 24px;\r\n                padding-right: 18px;\r\n                padding-bottom: 0px;\r\n            }\r\n            @include smartphone-vertical {\r\n                padding-bottom: 0px;\r\n            }\r\n\r\n            .comment {\r\n                display: flex;\r\n                position: relative;\r\n                align-items: center;\r\n                min-height: 28px;\r\n                padding-top: 6px;\r\n                word-break: break-all;\r\n                &--my-post {\r\n                    color: var(--v-secondary-lighten2);\r\n                }\r\n\r\n                &__text {\r\n                    font-size: 13px;\r\n                }\r\n\r\n                &__time {\r\n                    flex-shrink: 0;\r\n                    margin-left: auto;\r\n                    padding-left: 8px;\r\n                    color: var(--v-text-darken1);\r\n                    font-size: 13px;\r\n                }\r\n\r\n                &__icon {\r\n                    width: 20px;\r\n                    height: 20px;\r\n                    margin-left: 8px;\r\n                    border-radius: 5px;\r\n                    color: var(--v-text-base);\r\n                    cursor: pointer;\r\n                }\r\n            }\r\n        }\r\n\r\n        .comment-announce {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            flex-direction: column;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            padding-left: 12px;\r\n            padding-right: 12px;\r\n\r\n            &__heading {\r\n                font-size: 20px;\r\n                font-weight: bold;\r\n                @include smartphone-horizontal {\r\n                    font-size: 16px;\r\n                }\r\n            }\r\n            &__text {\r\n                margin-top: 12px;\r\n                color: var(--v-text-darken1);\r\n                font-size: 13.5px;\r\n                text-align: center;\r\n                @include smartphone-horizontal {\r\n                    font-size: 12px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .comment-scroll-button {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        position: absolute;\r\n        left: 0px;\r\n        right: 0px;\r\n        bottom: 22px;\r\n        width: 42px;\r\n        height: 42px;\r\n        margin: 0 auto;\r\n        border-radius: 50%;\r\n        background: var(--v-primary-base);\r\n        transition: background-color 0.15s, opacity 0.3s, visibility 0.3s;\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        user-select: none;\r\n        cursor: pointer;\r\n\r\n        &--display {\r\n            opacity: 1;\r\n            visibility: visible;\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment2.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment2.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Comment2.vue?vue&type=template&id=832bd750&scoped=true\"\nimport script from \"./Comment2.vue?vue&type=script&lang=ts\"\nexport * from \"./Comment2.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Comment2.vue?vue&type=style&index=0&id=832bd750&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"832bd750\",\n  null\n  \n)\n\nexport default component.exports","\r\nimport * as Comlink from 'comlink';\r\n\r\nimport { ICaptureCompositorConstructor } from '@/workers/CaptureCompositor';\r\n\r\n\r\n// CaptureCompositor を Web Worker 上で動作させるためのラッパー\r\n// Comlink を経由し、Web Worker とメインスレッド間でオブジェクトをやり取りする\r\n// ラップ元と同じファイルに定義すると Webpack から Circler Dependency として警告されブラウザの挙動が不安定になるため、別ファイルに定義している\r\nconst worker = new Worker(new URL('@/workers/CaptureCompositor', import.meta.url));\r\nconst CaptureCompositorProxy = Comlink.wrap<ICaptureCompositorConstructor>(worker);\r\nexport default CaptureCompositorProxy;\r\n","\r\nimport assert from 'assert';\r\n\r\nimport * as Comlink from 'comlink';\r\nimport { convertBlobToPng, copyBlobToClipboard } from 'copy-image-clipboard';\r\nimport DPlayer from 'dplayer';\r\n\r\nimport Captures from '@/services/Captures';\r\nimport PlayerManager from '@/services/player/PlayerManager';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport usePlayerStore from '@/stores/PlayerStore';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils, { dayjs } from '@/utils';\r\nimport { ICaptureCommentData, ICaptureExifData } from '@/workers/CaptureCompositor';\r\nimport CaptureCompositorProxy from '@/workers/CaptureCompositorProxy';\r\n\r\n\r\n/**\r\n * キャプチャボタンとクリックイベントをセットアップし、キャプチャの合成と保存を行う PlayerManager\r\n */\r\nclass CaptureManager implements PlayerManager {\r\n\r\n    // ユーザー操作により DPlayer 側で画質が切り替わった際、この PlayerManager の再起動が必要かどうかを PlayerWrapper に示す値\r\n    public readonly restart_required_when_quality_switched = false;\r\n\r\n    // DPlayer のインスタンス\r\n    // 設計上コンストラクタ以降で変更すべきでないため readonly にしている\r\n    private readonly player: DPlayer;\r\n\r\n    // 再生モード (Live: ライブ視聴, Video: ビデオ視聴)\r\n    private readonly playback_mode: 'Live' | 'Video';\r\n\r\n    // キャプチャボタンの HTML 要素\r\n    private capture_button: HTMLDivElement | null = null;\r\n    private comment_capture_button: HTMLDivElement | null = null;\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * @param player DPlayer のインスタンス\r\n     * @param playback_mode 再生モード (Live: ライブ視聴, Video: ビデオ視聴)\r\n     */\r\n    constructor(player: DPlayer, playback_mode: 'Live' | 'Video') {\r\n        this.player = player;\r\n        this.playback_mode = playback_mode;\r\n    }\r\n\r\n\r\n    /**\r\n     * キャプチャボタンとクリックイベントのセットアップを行う\r\n     */\r\n    public async init(): Promise<void> {\r\n\r\n        // 万が一すでにキャプチャボタンが存在していた場合は削除する\r\n        const current_capture_button = this.player.container.querySelector('.dplayer-capture-icon');\r\n        const current_comment_capture_button = this.player.container.querySelector('.dplayer-comment-capture-icon');\r\n        if (current_capture_button !== null) {\r\n            current_capture_button.remove();\r\n        }\r\n        if (current_comment_capture_button !== null) {\r\n            current_comment_capture_button.remove();\r\n        }\r\n\r\n        // キャプチャボタンの HTML を追加\r\n        // 標準のスクリーンショット機能は貧弱なので、あえて独自に実装している（そのほうが自由度も高くてやりやすい）\r\n        this.player.container.querySelector('.dplayer-player-restart-icon')!.insertAdjacentHTML('afterend', `\r\n            <div class=\"dplayer-icon dplayer-capture-icon\" aria-label=\"キャプチャ\"\r\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\r\n                <span class=\"dplayer-icon-content\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\r\n                </span>\r\n            </div>\r\n        `);\r\n        this.capture_button = this.player.container.querySelector('.dplayer-capture-icon')!;\r\n\r\n        // コメント付きキャプチャボタンの HTML を追加\r\n        this.capture_button.insertAdjacentHTML('afterend', `\r\n            <div class=\"dplayer-icon dplayer-comment-capture-icon\" aria-label=\"コメントを付けてキャプチャ\"\r\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\r\n                <span class=\"dplayer-icon-content\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\r\n                </span>\r\n            </div>\r\n        `);\r\n        this.comment_capture_button = this.player.container.querySelector('.dplayer-comment-capture-icon')!;\r\n\r\n        // キャプチャボタンがクリックされたときのイベントを登録\r\n        // キャプチャボタンがクリックされたら、非同期でキャプチャと保存を行う\r\n        this.capture_button.addEventListener('click', () => this.captureAndSave(false));\r\n        this.comment_capture_button.addEventListener('click', () => this.captureAndSave(true));\r\n\r\n        // 事前に CaptureCompositor 側でフォントをロードしておく\r\n        await CaptureCompositorProxy.loadFonts();\r\n\r\n        console.log('[CaptureManager] Initialized.');\r\n    }\r\n\r\n\r\n    /**\r\n     * キャプチャボタンのハイライト (ボタンの周囲が赤くなる) を追加する\r\n     * @param comment_capture_button_instead 代わりにコメント付きキャプチャボタンの方をハイライトするか\r\n     */\r\n    private addHighlight(comment_capture_button_instead: boolean = false): void {\r\n        assert(this.capture_button !== null && this.comment_capture_button !== null);\r\n        if (comment_capture_button_instead) {\r\n            this.comment_capture_button.classList.add('dplayer-capturing');\r\n        } else {\r\n            this.capture_button.classList.add('dplayer-capturing');\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * キャプチャボタンのハイライト (ボタンの周囲が赤くなる) を外す\r\n     * @param comment_capture_button_instead 代わりにコメント付きキャプチャボタンの方のハイライトを外すか\r\n     */\r\n    private removeHighlight(comment_capture_button_instead: boolean = false): void {\r\n        assert(this.capture_button !== null && this.comment_capture_button !== null);\r\n        if (comment_capture_button_instead) {\r\n            this.comment_capture_button.classList.remove('dplayer-capturing');\r\n        } else {\r\n            this.capture_button.classList.remove('dplayer-capturing');\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * キャプチャに合成する際に必要なコメント情報を生成する\r\n     * @returns キャプチャに合成する際に必要なコメント情報\r\n     */\r\n    private createCaptureCommentData(): ICaptureCommentData {\r\n\r\n        const capture_comment_data: ICaptureCommentData = {\r\n            // DOM 上のコメントのコンテナ要素の幅と高さ (px)\r\n            container_width: this.player.danmaku!.container.offsetWidth,\r\n            container_height: this.player.danmaku!.container.offsetHeight,\r\n            // コメント全体の不透明度 (0.0 ～ 1.0)\r\n            opacity: this.player.danmaku!._opacity,\r\n            // コメントごとの情報\r\n            comments: [],\r\n        };\r\n\r\n        // 各コメントの DOM 要素を取得\r\n        const selector = '.dplayer-danmaku-item:not(.dplayer-danmaku-item--demo)';\r\n        for (const comment_element of this.player.danmaku!.container.querySelectorAll<HTMLDivElement>(selector)) {\r\n\r\n            // コメントのテキストが null の場合はスキップ (基本ないはず)\r\n            if (comment_element.textContent === null) {\r\n                continue;\r\n            }\r\n\r\n            // 取得したスタイル情報を基に、描画する上で必要となるコメント情報を構築\r\n            const computed_style = window.getComputedStyle(comment_element);\r\n            capture_comment_data.comments.push({\r\n                // スクロール中・固定表示中のコメントの表示座標を計算\r\n                top: comment_element.getBoundingClientRect().top - this.player.danmaku!.container.getBoundingClientRect().top,\r\n                left: comment_element.getBoundingClientRect().left - this.player.danmaku!.container.getBoundingClientRect().left,\r\n                // コメントの色\r\n                color: computed_style.color,\r\n                // コメントのフォントサイズ (px)\r\n                font_size: parseFloat(computed_style.fontSize.replaceAll('px', '')),\r\n                // コメントのテキスト\r\n                text: comment_element.textContent.trim(),  // 念のため前後の空白を削除\r\n            });\r\n        }\r\n\r\n        return capture_comment_data;\r\n    }\r\n\r\n\r\n    /**\r\n     * キャプチャした画像の EXIF に書き込むメタデータ情報を生成する\r\n     * ライブ視聴時とビデオ視聴時で設定するメタデータが異なる\r\n     * 現在時刻をキャプチャの撮影時刻として EXIF メタデータに設定するので、このメソッドはキャプチャを撮影する直前にのみ呼び出すこと\r\n     * is_caption_composited / is_comment_composited のみ、実際の状態に合わせて CaptureCompositor 側で上書きされる\r\n     * @returns キャプチャした画像の EXIF に書き込むメタデータ情報\r\n     */\r\n    private createCaptureExifData(): ICaptureExifData {\r\n        const channels_store = useChannelsStore();\r\n        const player_store = usePlayerStore();\r\n\r\n        // 現在の時刻 (ISO8601 フォーマット)\r\n        // 現在時刻をキャプチャの撮影時刻として EXIF に書き込む\r\n        const captured_at = dayjs().format();\r\n\r\n        // 字幕がプレイヤー上で表示されているかどうか\r\n        // 字幕自体は存在するが表示されていない場合は false になる\r\n        const aribb24_caption = this.player.plugins.aribb24Caption!;\r\n        const is_caption_showing = ((aribb24_caption as any).isShowing === true && aribb24_caption.isPresent());\r\n\r\n        // 字幕がプレイヤー上で表示されている場合、表示中の字幕のテキストを取得\r\n        // 取得した字幕のテキストは、キャプチャに字幕が合成されているかに関わらず、常に EXIF メタデータに書き込まれる\r\n        // 字幕が表示されていない場合は null を入れ、キャプチャしたシーンで字幕が表示されていなかったことを明示する\r\n        const caption_text = is_caption_showing ? aribb24_caption.getTextContent() : null;\r\n\r\n        // ライブ視聴: 現在視聴中のチャンネル情報・番組情報を EXIF メタデータに設定\r\n        let capture_exif_data: ICaptureExifData;\r\n        if (this.playback_mode === 'Live') {\r\n            capture_exif_data = {\r\n                captured_at: captured_at,\r\n                captured_playback_position: -1,  // 後の処理で設定するが、ここでは実装上の都合で -1 を入れておく\r\n                network_id: channels_store.channel.current.network_id,\r\n                service_id: channels_store.channel.current.service_id,\r\n                event_id: channels_store.channel.current.program_present?.event_id ?? -1,\r\n                title: channels_store.channel.current.program_present?.title ?? '放送休止',\r\n                description: channels_store.channel.current.program_present?.description ?? '',\r\n                start_time: channels_store.channel.current.program_present?.start_time ?? '2000-01-01T00:00:00+09:00',\r\n                end_time: channels_store.channel.current.program_present?.end_time ?? '2000-01-01T00:00:00+09:00',\r\n                duration: channels_store.channel.current.program_present?.duration ?? 0,\r\n                caption_text: caption_text,\r\n                is_caption_composited: false,  // 字幕が合成されているか (実際の状態に合わせて CaptureCompositor 側で上書きされる)\r\n                is_comment_composited: false,  // コメントが合成されているか (実際の状態に合わせて CaptureCompositor 側で上書きされる)\r\n            };\r\n        // ビデオ視聴: 現在視聴中の録画番組情報を EXIF メタデータに設定\r\n        } else {\r\n            capture_exif_data = {\r\n                captured_at: captured_at,\r\n                captured_playback_position: -1,  // 後の処理で設定するが、ここでは実装上の都合で -1 を入れておく\r\n                network_id: player_store.recorded_program.network_id ?? -1,\r\n                service_id: player_store.recorded_program.service_id ?? -1,\r\n                event_id: player_store.recorded_program.event_id ?? -1,\r\n                title: player_store.recorded_program.title,\r\n                description: player_store.recorded_program.description,\r\n                start_time: player_store.recorded_program.start_time,\r\n                end_time: player_store.recorded_program.end_time,\r\n                duration: player_store.recorded_program.duration,\r\n                caption_text: caption_text,\r\n                is_caption_composited: false,  // 字幕が合成されているか (実際の状態に合わせて CaptureCompositor 側で上書きされる)\r\n                is_comment_composited: false,  // コメントが合成されているか (実際の状態に合わせて CaptureCompositor 側で上書きされる)\r\n            };\r\n        }\r\n\r\n        // 番組開始時刻換算のキャプチャ時刻 (秒) を設定\r\n        // ライブ視聴: 現在進行形で放送されているので、番組開始時刻からの経過時間 (現在時刻 - 番組開始時刻) を設定する\r\n        if (this.playback_mode === 'Live') {\r\n            capture_exif_data.captured_playback_position = dayjs().diff(dayjs(capture_exif_data.start_time), 'second', true);\r\n        // ビデオ視聴: 動画の現在の再生位置から、録画開始マージンを引いた値を設定する\r\n        // これで (録画開始マージンが取得できていない場合以外は) ライブ視聴時と比較可能な値になる\r\n        } else {\r\n            capture_exif_data.captured_playback_position = this.player.video.currentTime - player_store.recorded_program.recording_start_margin;\r\n        }\r\n\r\n        return capture_exif_data;\r\n    }\r\n\r\n\r\n    /**\r\n     * 映像をキャプチャし、設定で指定された方法で保存する\r\n     * 映像のみと字幕付き (字幕表示時のみ) の両方のキャプチャを生成できる\r\n     * @param is_comment_composite キャプチャにコメントを合成するかどうか\r\n     */\r\n    private async captureAndSave(is_comment_composite: boolean): Promise<void> {\r\n        const channels_store = useChannelsStore();\r\n        const player_store = usePlayerStore();\r\n        const settings_store = useSettingsStore();\r\n        const start_time = Utils.time();\r\n\r\n        // ***** バリデーション *****\r\n\r\n        // ラジオチャンネルを視聴している場合 (映像がないのでキャプチャできない)\r\n        // この場合映像の幅/高さも 0 になるので、このチェックは必ず先に行う\r\n        if (this.playback_mode === 'Live' && channels_store.channel.current.is_radiochannel === true) {\r\n            this.player.notice('ラジオチャンネルはキャプチャできません。', undefined, undefined, '#FF6F6A');\r\n            return;\r\n        }\r\n\r\n        // まだ映像の表示準備が終わっていない (映像の幅/高さが 0 のまま)\r\n        if (this.player.video.videoWidth === 0 && this.player.video.videoHeight === 0) {\r\n            this.player.notice('読み込み中はキャプチャできません。', undefined, undefined, '#FF6F6A');\r\n            return;\r\n        }\r\n\r\n        // コメントが表示されていないのにコメント付きキャプチャしようとした\r\n        if (is_comment_composite === true && this.player.danmaku!.showing === false) {\r\n            this.player.notice('コメントを付けてキャプチャするには、コメント表示をオンにしてください。', undefined, undefined, '#FF6F6A');\r\n            return;\r\n        }\r\n\r\n        // ***** キャプチャの事前準備 *****\r\n\r\n        // キャプチャ中はキャプチャボタンをハイライトする\r\n        this.addHighlight(is_comment_composite);\r\n\r\n        // aribb24js.CanvasID3Renderer のインスタンスを取得\r\n        // PlayerWrapper での実装上、aribb24.js (字幕) は必ず有効になっている\r\n        const aribb24_caption = this.player.plugins.aribb24Caption!;\r\n        // aribb24.js (文字スーパー) はビデオ視聴では常に無効なほか、ライブ視聴でも設定によっては無効になる\r\n        const aribb24_superimpose = this.player.plugins.aribb24Superimpose ?? null;\r\n\r\n        // 字幕・文字スーパーの Canvas を取得\r\n        // getRawCanvas() で映像と同じ解像度の Canvas が取得できる\r\n        const caption_canvas = aribb24_caption.getRawCanvas()!;\r\n        const superimpose_canvas = aribb24_superimpose?.getRawCanvas() ?? null;\r\n\r\n        // 字幕/文字スーパーが表示されているか\r\n        const is_caption_showing = ((aribb24_caption as any).isShowing === true && aribb24_caption.isPresent());\r\n        const is_superimpose_showing = (aribb24_superimpose && (aribb24_superimpose as any).isShowing === true && aribb24_superimpose.isPresent());\r\n\r\n        // ***** キャプチャの実行・字幕/文字スーパー/コメントを合成 *****\r\n\r\n        // 高速化のため、Promise.all() で並列に実行する\r\n        const create_image_bitmap_results = await Promise.all([\r\n            // 現在再生中の動画のキャプチャを ImageBitmap として取得\r\n            createImageBitmap(this.player.video),\r\n            // 字幕が表示されていれば、字幕の Canvas を ImageBitmap として取得\r\n            is_caption_showing ? createImageBitmap(caption_canvas) : null,\r\n            // 文字スーパーが表示されていれば、文字スーパーの Canvas を ImageBitmap として取得\r\n            is_superimpose_showing ? createImageBitmap(superimpose_canvas!) : null,\r\n        ]);\r\n        const image_bitmaps = create_image_bitmap_results.filter((image_bitmap) => image_bitmap !== null) as ImageBitmap[];\r\n        const capture_image_bitmap = create_image_bitmap_results[0];\r\n        const caption_image_bitmap = create_image_bitmap_results[1];\r\n        const superimpose_image_bitmap = create_image_bitmap_results[2];\r\n\r\n        // キャプチャにコメントを合成する場合、コメントを取得する\r\n        const capture_comment_data = is_comment_composite ? this.createCaptureCommentData() : null;\r\n\r\n        // キャプチャに書き込む EXIF メタデータを取得\r\n        // is_caption_composited / is_comment_composited のみ、実際の状態に合わせて CaptureCompositor 側で上書きされる\r\n        const capture_exif_data = this.createCaptureExifData();\r\n\r\n        // キャプチャの合成を実行し、字幕なしキャプチャと字幕ありキャプチャを生成する\r\n        // Web Worker 側に ImageBitmap を移譲するため、Comlink.transfer() を使う\r\n        // 第二引数に (第一引数内のオブジェクトに含まれる) 移譲する Transferable オブジェクトを渡す\r\n        console.log('\\u001b[36m[CaptureManager] Composite start:');\r\n        const capture_compositor_start_time = Utils.time();\r\n        const capture_compositor = await new CaptureCompositorProxy(Comlink.transfer({\r\n            mode: settings_store.settings.capture_caption_mode,\r\n            capture: capture_image_bitmap,\r\n            caption: caption_image_bitmap,\r\n            superimpose: superimpose_image_bitmap,\r\n            capture_comment_data: capture_comment_data,\r\n            capture_exif_data: capture_exif_data,\r\n        }, image_bitmaps));\r\n        const result = await capture_compositor.composite();\r\n        console.log('\\u001b[36m[CaptureManager] Composite end:', Utils.mathFloor(Utils.time() - capture_compositor_start_time, 3), 'sec');\r\n\r\n        // ファイル名（拡張子なし）\r\n        // TODO: ファイル名パターンを設定で変更できるようにする\r\n        const filename_base = `Capture_${dayjs().format('YYYYMMDD-HHmmss')}`;\r\n        const filename_normal = `${filename_base}.jpg`;  // 字幕なしキャプチャ\r\n        const filename_caption = `${filename_base}_caption.jpg`;  // 字幕ありキャプチャ\r\n\r\n        // ***** キャプチャの保存 *****\r\n\r\n        // 字幕なしキャプチャ\r\n        // 必ず字幕なしキャプチャから保存する\r\n        if (result.capture_normal !== null) {\r\n\r\n            // 生成した Blob をイベントリスナーに送信する\r\n            player_store.event_emitter.emit('CaptureCompleted', {\r\n                capture: result.capture_normal,\r\n                filename: filename_normal,\r\n            });\r\n\r\n            // キャプチャの保存先: ブラウザでダウンロード or 両方\r\n            if (['Browser', 'Both'].includes(settings_store.settings.capture_save_mode)) {\r\n                Utils.downloadBlobData(result.capture_normal, filename_normal);\r\n            }\r\n\r\n            // キャプチャの保存先: KonomiTV サーバーにアップロード or 両方\r\n            // 時間がかかるし完了を待つ必要がないので非同期\r\n            if (['UploadServer', 'Both'].includes(settings_store.settings.capture_save_mode)) {\r\n                Captures.uploadCapture(result.capture_normal, filename_normal);\r\n            }\r\n        }\r\n\r\n        // 字幕ありキャプチャ\r\n        if (result.capture_caption !== null) {\r\n\r\n            // 生成した Blob をイベントリスナーに送信する\r\n            player_store.event_emitter.emit('CaptureCompleted', {\r\n                capture: result.capture_caption,\r\n                filename: filename_normal,\r\n            });\r\n\r\n            // キャプチャの保存先: ブラウザでダウンロード or 両方\r\n            if (['Browser', 'Both'].includes(settings_store.settings.capture_save_mode)) {\r\n                Utils.downloadBlobData(result.capture_caption, filename_caption);\r\n            }\r\n\r\n            // キャプチャの保存先: KonomiTV サーバーにアップロード or 両方\r\n            // アップロードに時間が掛かる上、完了を待つ必要もないので非同期\r\n            if (['UploadServer', 'Both'].includes(settings_store.settings.capture_save_mode)) {\r\n                Captures.uploadCapture(result.capture_caption, filename_caption);\r\n            }\r\n        }\r\n\r\n        // キャプチャが終わったので、キャプチャボタンのハイライトを削除する\r\n        // ただし、キャプチャに掛かった時間が 0.1 秒未満の場合は、0.1 秒経過後にハイライトを削除する (すぐに削除すると一瞬すぎて見えないため)\r\n        const total_time = Utils.mathFloor(Utils.time() - start_time, 3);\r\n        if (total_time < 0.1) {\r\n            setTimeout(() => this.removeHighlight(is_comment_composite), 100);\r\n        } else {\r\n            this.removeHighlight(is_comment_composite);\r\n        }\r\n        console.log('\\u001b[36m[CaptureManager] Total:', total_time, 'sec');\r\n\r\n        // ***** クリップボードへのキャプチャ画像のコピー *****\r\n\r\n        // キャプチャ画像をクリップボードにコピーする設定が有効な場合、クリップボードにコピーする\r\n        // クリップボードへのコピーにはかなり時間がかかるので、ハイライトを削除してからバックグラウンドで実行する\r\n        // 残念ながらクリップボード操作は Web Worker 上では行えないので、メインスレッド側で実行している\r\n        if (settings_store.settings.capture_copy_to_clipboard === true) {\r\n            for (const capture of [result.capture_normal, result.capture_caption]) {\r\n                if (capture !== null) {\r\n                    try {\r\n                        await copyBlobToClipboard(await convertBlobToPng(capture));\r\n                    } catch (error) {\r\n                        this.player.notice('クリップボードへのキャプチャのコピーに失敗しました。', undefined, undefined, '#FF6F6A');\r\n                        console.error(error);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 何もしない\r\n     * 本来であれば init() で動的に追加したキャプチャボタンの HTML 要素を削除するべきだが、\r\n     * 実装上 PlayerWrapper の破棄が完了する前にボタンを削除してしまうと、キャプチャボタンだけ一瞬消える不恰好な状態になってしまう\r\n     * このため、代わりに init() 側にすでにキャプチャボタンが追加済みであれば一旦削除する処理を入れている\r\n     */\r\n    public async destroy(): Promise<void> {\r\n\r\n        // 何もしない\r\n        console.log('[CaptureManager] Destroyed.');\r\n    }\r\n}\r\n\r\nexport default CaptureManager;\r\n","\r\nimport { throttle } from '@github/mini-throttle';\r\nimport DPlayer, { DPlayerType } from 'dplayer';\r\n\r\nimport Channels from '@/services/Channels';\r\nimport PlayerManager from '@/services/player/PlayerManager';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport usePlayerStore from '@/stores/PlayerStore';\r\nimport useUserStore from '@/stores/UserStore';\r\nimport Utils, { dayjs, CommentUtils } from '@/utils';\r\n\r\n\r\nexport interface ICommentData {\r\n    id: number;\r\n    text: string;\r\n    time: string;\r\n    playback_position: number;\r\n    user_id: string;\r\n    my_post: boolean;\r\n}\r\n\r\ninterface IWatchSessionInfo {\r\n    is_success: boolean;\r\n    detail: string;\r\n    message_server_url?: string;\r\n    thread_id?: string;\r\n    your_post_key?: string;\r\n}\r\n\r\n\r\n/**\r\n * ライブ視聴: ニコニコ実況からリアルタイムに受信したコメントを DPlayer やイベントリスナーに送信する PlayerManager\r\n */\r\nclass LiveCommentManager implements PlayerManager {\r\n\r\n    // ユーザー操作により DPlayer 側で画質が切り替わった際、この PlayerManager の再起動が必要かどうかを PlayerWrapper に示す値\r\n    public readonly restart_required_when_quality_switched = false;\r\n\r\n    // DPlayer のインスタンス\r\n    // 設計上コンストラクタ以降で変更すべきでないため readonly にしている\r\n    private readonly player: DPlayer;\r\n\r\n    // 視聴セッションの WebSocket のインスタンス\r\n    private watch_session: WebSocket | null = null;\r\n\r\n    // コメントセッションの WebSocket のインスタンス\r\n    private comment_session: WebSocket | null = null;\r\n\r\n    // vpos を計算する基準となる時刻のタイムスタンプ\r\n    private vpos_base_timestamp: number = 0;\r\n\r\n    // 座席維持用のタイマーのインターバル ID\r\n    private keep_seat_interval_id: number | null = null;\r\n\r\n    // destroy() 時に EventListener を全解除するための AbortController\r\n    private abort_controller: AbortController = new AbortController();\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * @param player DPlayer のインスタンス\r\n     */\r\n    constructor(player: DPlayer) {\r\n        this.player = player;\r\n    }\r\n\r\n\r\n    /**\r\n     * ニコニコ実況に接続し、セッションを初期化する\r\n     */\r\n    public async init(): Promise<void> {\r\n        const player_store = usePlayerStore();\r\n        const user_store = useUserStore();\r\n\r\n        // ユーザー情報を事前にキャッシュさせておく\r\n        await user_store.fetchUser();\r\n\r\n        // 視聴セッションを初期化\r\n        const watch_session_info = await this.initWatchSession();\r\n        if (watch_session_info.is_success === false) {\r\n\r\n            // 初期化に失敗した際のエラーメッセージを設定する\r\n            // UI 側のエラー表示に利用されるほか、null から string になったことで初期化に失敗したことを示す\r\n            player_store.live_comment_init_failed_message = watch_session_info.detail;\r\n            console.error(`[LiveCommentManager][WatchSession] Error: ${watch_session_info.detail}`);\r\n\r\n            // 通常発生しないエラーメッセージ (サーバーエラーなど) はプレイヤー側にも通知する\r\n            if ((watch_session_info.detail !== 'このチャンネルはニコニコ実況に対応していません。') &&\r\n                (watch_session_info.detail !== '現在放送中のニコニコ実況がありません。')) {\r\n                if (this.player.template.notice.textContent!.includes('プレイヤーロジックを再起動しています…') === false) {\r\n                    this.player.notice(watch_session_info.detail, undefined, undefined, '#FF6F6A');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        // 視聴セッションを初期化できた場合のみ、\r\n        // 取得したコメントサーバーへの接続情報を使い、非同期でコメントセッションを初期化\r\n        this.initCommentSession(watch_session_info);\r\n\r\n        console.log('[LiveCommentManager] Initialized.');\r\n    }\r\n\r\n\r\n    /**\r\n     * 視聴セッションを初期化する\r\n     * @returns コメントサーバーへの接続情報 or エラー情報\r\n     */\r\n    private async initWatchSession(): Promise<IWatchSessionInfo> {\r\n        const channels_store = useChannelsStore();\r\n\r\n        // サーバーから disconnect メッセージが送られてきた際のフラグ\r\n        let is_disconnect_message_received = false;\r\n\r\n        // セッション情報を取得\r\n        const watch_session_info = await Channels.fetchJikkyoSession(channels_store.display_channel_id);\r\n        if (watch_session_info === null) {\r\n            return {\r\n                is_success: false,\r\n                detail: 'ニコニコ実況のセッション情報を取得できませんでした。',\r\n            };\r\n        }\r\n        if (watch_session_info.is_success === false) {\r\n            return {\r\n                is_success: false,\r\n                detail: watch_session_info.detail,\r\n            };\r\n        }\r\n\r\n        // 視聴セッション WebSocket を開く\r\n        this.watch_session = new WebSocket(watch_session_info.audience_token!);\r\n\r\n        // 視聴セッションの接続が開かれたとき\r\n        this.watch_session.addEventListener('open', () => {\r\n\r\n            // 視聴セッションをリクエスト\r\n            // 公式ドキュメントいわく、stream フィールドは Optional らしい\r\n            // サーバー負荷軽減のため、映像が不要な場合は必ず省略してくださいとのこと\r\n            this.watch_session?.send(JSON.stringify({\r\n                type: 'startWatching',\r\n                data: {\r\n                    'reconnect': false,\r\n                },\r\n            }));\r\n\r\n        }, { signal: this.abort_controller.signal });\r\n\r\n        // 視聴セッションの接続が閉じられたとき（ネットワークが切断された場合など）\r\n        this.watch_session.addEventListener('close', async (event) => {\r\n\r\n            // すでに disconnect メッセージが送られてきている場合は何もしない\r\n            if (is_disconnect_message_received === true) {\r\n                return;\r\n            }\r\n\r\n            // 接続切断の理由を表示\r\n            if (this.player.template.notice.textContent!.includes('プレイヤーロジックを再起動しています…') === false) {\r\n                this.player.notice(`ニコニコ実況との接続が切断されました。(Code: ${event.code})`, undefined, undefined, '#FF6F6A');\r\n            }\r\n            console.error(`[LiveCommentManager][WatchSession] Connection closed. (Code: ${event.code})`);\r\n\r\n            // 10 秒ほど待ってから再接続する\r\n            // ニコ生側から切断された場合と異なりネットワークが切断された可能性が高いので、間を多めに取る\r\n            await Utils.sleep(10);\r\n            await this.reconnect();\r\n\r\n        }, { signal: this.abort_controller.signal });\r\n\r\n        // 視聴セッション WebSocket からメッセージを受信したとき\r\n        // 視聴セッションはコメント送信時のために維持し続ける必要がある\r\n        // 以下はいずれも視聴セッションを維持し続けたり、エラーが発生した際に再接続するための処理\r\n        this.watch_session.addEventListener('message', async (event) => {\r\n            if (this.watch_session === null) return;\r\n\r\n            // 各メッセージタイプに対応する処理を実行\r\n            const message = JSON.parse(event.data);\r\n            switch (message.type) {\r\n\r\n                // 座席情報\r\n                case 'seat': {\r\n                    // すでにタイマーが設定されている場合は何もしない\r\n                    if (this.keep_seat_interval_id !== null) {\r\n                        break;\r\n                    }\r\n                    // keepIntervalSec の秒数ごとに keepSeat を送信して座席を維持する\r\n                    this.keep_seat_interval_id = window.setInterval(() => {\r\n                        if (this.watch_session && this.watch_session.readyState === WebSocket.OPEN) {\r\n                            // セッションがまだ開いていれば、座席を維持する\r\n                            this.watch_session.send(JSON.stringify({type: 'keepSeat'}));\r\n                        } else {\r\n                            // セッションが閉じられている場合は、タイマーを停止する\r\n                            window.clearInterval(this.keep_seat_interval_id ?? 0);\r\n                        }\r\n                    }, message.data.keepIntervalSec * 1000);\r\n                    break;\r\n                }\r\n\r\n                // ping-pong\r\n                case 'ping': {\r\n                    // pong を返してセッションを維持する\r\n                    // 送り返さなかった場合、勝手にセッションが閉じられてしまう\r\n                    this.watch_session.send(JSON.stringify({type: 'pong'}));\r\n                    break;\r\n                }\r\n\r\n                // エラー情報\r\n                case 'error': {\r\n                    // COMMENT_POST_NOT_ALLOWED と INVALID_MESSAGE に関しては sendComment() の方で処理するので、ここでは何もしない\r\n                    if (message.data.code === 'COMMENT_POST_NOT_ALLOWED' || message.data.code === 'INVALID_MESSAGE') {\r\n                        break;\r\n                    }\r\n\r\n                    let error = `ニコニコ実況でエラーが発生しています。(Code: ${message.data.code})`;\r\n                    switch (message.data.code) {\r\n                        case 'CONNECT_ERROR':\r\n                            error = 'ニコニコ実況のコメントサーバーに接続できません。';\r\n                            break;\r\n                        case 'CONTENT_NOT_READY':\r\n                            error = 'ニコニコ実況が配信できない状態です。';\r\n                            break;\r\n                        case 'NO_THREAD_AVAILABLE':\r\n                            error = 'ニコニコ実況のコメントスレッドを取得できません。';\r\n                            break;\r\n                        case 'NO_ROOM_AVAILABLE':\r\n                            error = 'ニコニコ実況のコメント部屋を取得できません。';\r\n                            break;\r\n                        case 'NO_PERMISSION':\r\n                            error = 'ニコニコ実況の API にアクセスする権限がありません。';\r\n                            break;\r\n                        case 'NOT_ON_AIR':\r\n                            error = 'ニコニコ実況が放送中ではありません。';\r\n                            break;\r\n                        case 'BROADCAST_NOT_FOUND':\r\n                            error = 'ニコニコ実況の配信情報を取得できません。';\r\n                            break;\r\n                        case 'INTERNAL_SERVERERROR':\r\n                            error = 'ニコニコ実況でサーバーエラーが発生しています。';\r\n                            break;\r\n                    }\r\n\r\n                    // エラー情報を表示\r\n                    if (this.player.template.notice.textContent!.includes('プレイヤーロジックを再起動しています…') === false) {\r\n                        this.player.notice(error, undefined, undefined, '#FF6F6A');\r\n                    }\r\n                    console.error(`[LiveCommentManager][WatchSession] Error occurred. (Code: ${message.data.code})`);\r\n\r\n                    // 5 秒ほど待ってから再接続する\r\n                    await Utils.sleep(5);\r\n                    await this.reconnect();\r\n                    break;\r\n                }\r\n\r\n                // 再接続を求められた\r\n                case 'reconnect': {\r\n                    // waitTimeSec に記載の秒数だけ待ってから再接続する\r\n                    // 公式ドキュメントには reconnect で送られてくる audienceToken で再接続しろと書いてあるんだけど、\r\n                    // 確実性的な面で実装が面倒なので当面このままにしておく\r\n                    await this.reconnect();\r\n                    break;\r\n                }\r\n\r\n                // 視聴セッションが閉じられた（4時のリセットなど）\r\n                case 'disconnect': {\r\n                    // 実際に接続が閉じられる前に disconnect メッセージが送られてきたので、\r\n                    // WebSocket の close メッセージを実行させないようにする\r\n                    is_disconnect_message_received = true;\r\n\r\n                    // 接続切断の理由\r\n                    let disconnect_reason = `ニコニコ実況との接続が切断されました。(${message.data.reason})`;\r\n                    switch (message.data.reason) {\r\n                        case 'TAKEOVER':\r\n                            disconnect_reason = 'ニコニコ実況の番組から追い出されました。';\r\n                            break;\r\n                        case 'NO_PERMISSION':\r\n                            disconnect_reason = 'ニコニコ実況の番組の座席を取得できませんでした。';\r\n                            break;\r\n                        case 'END_PROGRAM':\r\n                            disconnect_reason = 'ニコニコ実況がリセットされたか、コミュニティの番組が終了しました。';\r\n                            break;\r\n                        case 'PING_TIMEOUT':\r\n                            disconnect_reason = 'コメントサーバーとの接続生存確認に失敗しました。';\r\n                            break;\r\n                        case 'TOO_MANY_CONNECTIONS':\r\n                            disconnect_reason = 'ニコニコ実況の同一ユーザからの接続数上限を越えています。';\r\n                            break;\r\n                        case 'TOO_MANY_WATCHINGS':\r\n                            disconnect_reason = 'ニコニコ実況の同一ユーザからの視聴番組数上限を越えています。';\r\n                            break;\r\n                        case 'CROWDED':\r\n                            disconnect_reason = 'ニコニコ実況の番組が満席です。';\r\n                            break;\r\n                        case 'MAINTENANCE_IN':\r\n                            disconnect_reason = 'ニコニコ実況はメンテナンス中です。';\r\n                            break;\r\n                        case 'SERVICE_TEMPORARILY_UNAVAILABLE':\r\n                            disconnect_reason = 'ニコニコ実況で一時的にサーバーエラーが発生しています。';\r\n                            break;\r\n                    }\r\n\r\n                    // 接続切断の理由を表示\r\n                    if (this.player.template.notice.textContent!.includes('プレイヤーロジックを再起動しています…') === false) {\r\n                        this.player.notice(disconnect_reason, undefined, undefined, '#FF6F6A');\r\n                    }\r\n                    console.error(`[LiveCommentManager][WatchSession] Disconnected. (Reason: ${message.data.reason})`);\r\n\r\n                    // 5 秒ほど待ってから再接続する\r\n                    await Utils.sleep(5);\r\n                    await this.reconnect();\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }, { signal: this.abort_controller.signal });\r\n\r\n        // コメントサーバーへの接続情報を返す\r\n        // イベント内で値を返すため、Promise で包む\r\n        return new Promise((resolve) => {\r\n            this.watch_session!.addEventListener('message', async (event) => {\r\n                const message = JSON.parse(event.data);\r\n                if (message.type === 'room') {\r\n\r\n                    // vpos の基準時刻のタイムスタンプを取得 (ミリ秒単位)\r\n                    // vpos は番組開始時間からの累計秒数\r\n                    this.vpos_base_timestamp = dayjs(message.data.vposBaseTime).valueOf();\r\n\r\n                    // コメントサーバーへの接続情報を返す\r\n                    console.log(`[LiveCommentManager][WatchSession] Connected.\\nThread ID: ${message.data.threadId}\\n`);\r\n                    return resolve({\r\n                        is_success: true,\r\n                        detail: '視聴セッションを取得しました。',\r\n                        // コメントサーバーへの接続情報\r\n                        message_server_url: message.data.messageServer.uri,\r\n                        // コメントサーバー上のスレッド ID\r\n                        thread_id: message.data.threadId,\r\n                        // メッセージサーバーから受信するコメント (chat メッセージ) に yourpost フラグを付けるためのキー\r\n                        your_post_key: (message.data.yourPostKey ? message.data.yourPostKey : null),\r\n                    });\r\n                }\r\n            }, { signal: this.abort_controller.signal });\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * コメントセッションを初期化する\r\n     * @param comment_session_info コメントサーバーへの接続情報\r\n     */\r\n    private initCommentSession(comment_session_info: IWatchSessionInfo): void {\r\n        const player_store = usePlayerStore();\r\n\r\n        // 初回接続時に一括で送信されてくる過去コメントを受信し終えるまで格納するバッファ\r\n        const initial_comments_buffer: ICommentData[] = [];\r\n\r\n        // 初回接続時に一括で送信されてくる過去コメントを受信し終えたかどうかのフラグ\r\n        let initial_comments_received = false;\r\n\r\n        // 受信したコメントを一時的に格納するバッファ (スロットル用)\r\n        const comments_buffer: ICommentData[] = [];\r\n\r\n        // コメントセッション WebSocket を開く\r\n        this.comment_session = new WebSocket(comment_session_info.message_server_url!);\r\n\r\n        // コメントセッション WebSocket を開いたとき\r\n        this.comment_session.addEventListener('open', () => {\r\n            if (this.comment_session === null) return;\r\n\r\n            // コメント送信をリクエスト\r\n            // このコマンドを送らないとコメントが送信されてこない\r\n            this.comment_session.send(JSON.stringify([\r\n                {ping: {content: 'rs:0'}},\r\n                {ping: {content: 'ps:0'}},\r\n                {\r\n                    thread: {\r\n                        version: '20061206',  // 設定必須\r\n                        thread: comment_session_info.thread_id,  // スレッド ID\r\n                        threadkey: comment_session_info.your_post_key,  // スレッドキー\r\n                        user_id: '',  // ユーザー ID（設定不要らしい）\r\n                        res_from: -50,  // 最初にコメントを 50 個送信する\r\n                    }\r\n                },\r\n                {ping: {content: 'pf:0'}},\r\n                {ping: {content: 'rf:0'}},\r\n            ]));\r\n\r\n        }, { signal: this.abort_controller.signal });\r\n\r\n        // 受信したコメントをイベントリスナーに送信する関数\r\n        // スロットルを設定し、333ms 未満の間隔でイベントが発火しないようにする\r\n        const emit_comments = throttle(() => {\r\n            if (Utils.isSafari() === false) {\r\n                console.debug('[LiveCommentManager][CommentSession] Comments buffer length:', comments_buffer.length);\r\n            }\r\n            player_store.event_emitter.emit('LiveCommentReceived', {\r\n                is_initial_comments: false,\r\n                comments: comments_buffer,\r\n            });\r\n            // バッファを空にする\r\n            comments_buffer.length = 0;\r\n        }, 333);\r\n\r\n        // コメントセッション WebSocket からメッセージを受信したとき\r\n        this.comment_session.addEventListener('message', async (event) => {\r\n\r\n            // メッセージを取得\r\n            const message = JSON.parse(event.data);\r\n\r\n            // 接続失敗\r\n            if (message.thread !== undefined) {\r\n                if (message.thread.resultcode !== 0) {\r\n                    console.error(`[LiveCommentManager][CommentSession] Connection failed. (Code: ${message.thread.resultcode})`);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // ping メッセージのみ\r\n            // rf:0 が送られてきたら初回接続時に一括で送信されてくる過去コメントの受信は完了している\r\n            // この時点で初期コメントを一気にイベントリスナーに送信する\r\n            if (message.ping !== undefined && message.ping.content === 'rf:0') {\r\n                initial_comments_received = true;\r\n                player_store.event_emitter.emit('LiveCommentReceived', {\r\n                    is_initial_comments: true,\r\n                    comments: initial_comments_buffer,\r\n                });\r\n                return;\r\n            }\r\n\r\n            // コメントデータを取得\r\n            const comment = message.chat;\r\n\r\n            // コメントデータが不正な場合 or 自分のコメントの場合は弾く\r\n            if ((comment === undefined || comment.content === undefined || comment.content === '') ||\r\n                (comment.yourpost && comment.yourpost === 1)) {\r\n                return;\r\n            }\r\n\r\n            // コメントコマンドをパース\r\n            const { color, position, size } = CommentUtils.parseCommentCommand(comment.mail);\r\n\r\n            // ミュート対象のコメントかどうかを判定し、もしそうならここで弾く\r\n            if (CommentUtils.isMutedComment(comment.content, comment.user_id, color, position, size)) {\r\n                return;\r\n            }\r\n\r\n            // コメントリストへ追加するオブジェクト\r\n            const comment_data: ICommentData = {\r\n                id: comment.no,\r\n                text: comment.content,\r\n                time: dayjs(comment.date * 1000).format('HH:mm:ss'),\r\n                playback_position: this.player.video.currentTime,\r\n                user_id: comment.user_id,\r\n                my_post: false,\r\n            };\r\n\r\n            // もしまだ初期コメントを受信し終えていないなら、バッファに格納して終了\r\n            // 初期コメントはプレイヤーには描画しないため問題ない\r\n            if (initial_comments_received === false) {\r\n                initial_comments_buffer.push(comment_data);\r\n                return;\r\n            }\r\n\r\n            // 配信で発生する遅延分待ってから\r\n            // おおよその遅延時間は video.buffered.end(0) - video.currentTime で取得できる\r\n            let buffered_end = 0;\r\n            if (this.player.video.buffered.length >= 1) {\r\n                buffered_end = this.player.video.buffered.end(0);\r\n            }\r\n            const comment_delay_time = Math.max(buffered_end - this.player.video.currentTime, 0);\r\n            if (Utils.isSafari() === false) {\r\n                console.debug(`[LiveCommentManager][CommentSession] Delay: ${comment_delay_time} sec.`);\r\n            }\r\n            await Utils.sleep(comment_delay_time);\r\n\r\n            // コメントを一時バッファに格納し、スロットルを設定してイベントリスナーに送信する\r\n            // コメントの受信間隔が 333ms 以上あれば、今回のコールバックで取得したコメントがダイレクトにイベントリスナーに送信される\r\n            comments_buffer.push(comment_data);\r\n            emit_comments();\r\n\r\n            // プレイヤーにコメントを描画する (映像再生時のみ)\r\n            if (this.player.video.paused === false) {\r\n                this.player.danmaku!.draw({\r\n                    text: comment.content,\r\n                    color: color,\r\n                    type: position,\r\n                    size: size,\r\n                });\r\n            }\r\n\r\n        }, { signal: this.abort_controller.signal });\r\n    }\r\n\r\n\r\n    /**\r\n     * ニコニコ実況にコメントを送信する\r\n     * @param options DPlayer のコメントオプション\r\n     */\r\n    public sendComment(options: DPlayerType.APIBackendSendOptions): void {\r\n        const player_store = usePlayerStore();\r\n        const user_store = useUserStore();\r\n\r\n        // 初期化に失敗しているときは実行せず、保存しておいたエラーメッセージを表示する\r\n        if (player_store.live_comment_init_failed_message !== null) {\r\n            options.error(player_store.live_comment_init_failed_message);\r\n            return;\r\n        }\r\n\r\n        // ログイン関連のバリデーション\r\n        if (user_store.user === null) {\r\n            options.error('コメントするには、KonomiTV アカウントにログインしてください。');\r\n            return;\r\n        }\r\n        if (user_store.user.niconico_user_id === null) {\r\n            options.error('コメントするには、ニコニコアカウントと連携してください。');\r\n            return;\r\n        }\r\n        if (user_store.user.niconico_user_premium === false && (options.data.type === 'top' || options.data.type === 'bottom')) {\r\n            options.error('コメントを上下に固定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\r\n            return;\r\n        }\r\n        if (user_store.user.niconico_user_premium === false && options.data.size === 'big') {\r\n            options.error('コメントサイズを大きめに設定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\r\n            return;\r\n        }\r\n\r\n        // 視聴セッションが null か、接続が既に切れている場合\r\n        if (this.watch_session === null || this.watch_session.readyState !== WebSocket.OPEN) {\r\n            console.error('[LiveCommentManager][WatchSession] Comment sending failed. (Connection is not established.)');\r\n            options.error('コメントの送信に失敗しました。WebSocket 接続が確立されていません。');\r\n            return;\r\n        }\r\n\r\n        // DPlayer 上のコメント色（カラーコード）とニコニコの色コマンド定義のマッピング\r\n        const color_table = {\r\n            '#FFEAEA': 'white',\r\n            '#F02840': 'red',\r\n            '#FD7E80': 'pink',\r\n            '#FDA708': 'orange',\r\n            '#FFE133': 'yellow',\r\n            '#64DD17': 'green',\r\n            '#00D4F5': 'cyan',\r\n            '#4763FF': 'blue',\r\n        };\r\n\r\n        // DPlayer 上のコメント位置を表す値とニコニコの位置コマンド定義のマッピング\r\n        const position_table = {\r\n            'top': 'ue',\r\n            'right': 'naka',\r\n            'bottom': 'shita',\r\n        };\r\n\r\n        // vpos を計算 (10ミリ秒単位)\r\n        // 番組開始時間からの累計秒らしいけど、なぜ指定しないといけないのかは不明\r\n        // 小数点以下は丸めないとコメントサーバー側で投稿エラーになる\r\n        const vpos = Math.round((dayjs().valueOf() - this.vpos_base_timestamp) / 10);\r\n\r\n        // コメントを送信\r\n        this.watch_session.send(JSON.stringify({\r\n            'type': 'postComment',\r\n            'data': {\r\n                // コメント本文\r\n                'text': options.data.text,\r\n                // コメントの色\r\n                'color': color_table[options.data.color.toUpperCase()],\r\n                // コメント位置\r\n                'position': position_table[options.data.type],\r\n                // コメントサイズ (DPlayer とニコニコで表現が共通なため、変換不要)\r\n                'size': options.data.size,\r\n                // 番組開始時間からの累計秒 (10ミリ秒単位)\r\n                'vpos': vpos,\r\n                // 匿名コメント (184) にするかどうか\r\n                'isAnonymous': true,\r\n            }\r\n        }));\r\n\r\n        // コメント送信のレスポンスを取得\r\n        const abort_controller = new AbortController();\r\n        this.watch_session.addEventListener('message', (event) => {\r\n            const message = JSON.parse(event.data);\r\n            switch (message.type) {\r\n\r\n                // postCommentResult が送られてきた → コメント送信に成功している\r\n                case 'postCommentResult': {\r\n                    // コメント成功を DPlayer にコールバックで通知\r\n                    options.success();\r\n\r\n                    // 送信したコメントを整形してコメントリストに送信\r\n                    player_store.event_emitter.emit('LiveCommentSendCompleted', {\r\n                        comment: {\r\n                            id: Utils.time(),  // ID は取得できないので現在の時間をユニークな ID として利用する\r\n                            text: options.data.text,  // コメント本文\r\n                            time: dayjs().format('HH:mm:ss'),  // 現在時刻\r\n                            playback_position: this.player.video.currentTime,  // 現在の再生位置\r\n                            user_id: `${user_store.user!.niconico_user_id!}`,  // ニコニコユーザー ID\r\n                            my_post: true,  // 自分のコメントであることを示すフラグ\r\n                        }\r\n                    });\r\n\r\n                    // イベントリスナーを削除\r\n                    abort_controller.abort();\r\n                    break;\r\n                }\r\n\r\n                // コメント送信直後に error が送られてきた → コメント送信に失敗している\r\n                case 'error': {\r\n                    // コメント失敗を DPlayer にコールバックで通知\r\n                    let error = `コメントの送信に失敗しました。(${message.data.code})`;\r\n                    switch (message.data.code) {\r\n                        case 'COMMENT_POST_NOT_ALLOWED':\r\n                            error = 'コメントが許可されていません。';\r\n                            break;\r\n                        case 'INVALID_MESSAGE':\r\n                            error = 'コメント内容が無効です。';\r\n                            break;\r\n                    }\r\n                    console.error(`[LiveCommentManager][WatchSession] Comment sending failed. (Code: ${message.data.code})`);\r\n                    options.error(error);\r\n\r\n                    // イベントリスナーを解除\r\n                    abort_controller.abort();\r\n                    break;\r\n                }\r\n            }\r\n        }, { signal: abort_controller.signal });\r\n    }\r\n\r\n\r\n    /**\r\n     * 同じ設定でニコニコ実況に再接続する\r\n     */\r\n    private async reconnect(): Promise<void> {\r\n        const player_store = usePlayerStore();\r\n\r\n        // 再接続を開始\r\n        console.warn('[LiveCommentManager] Reconnecting...');\r\n        if (this.player.template.notice.textContent!.includes('プレイヤーロジックを再起動しています…') === false) {\r\n            this.player.notice('ニコニコ実況に再接続しています…');\r\n        }\r\n\r\n        // 前の視聴セッション・コメントセッションを破棄\r\n        await this.destroy();\r\n\r\n        // 視聴セッションを再初期化\r\n        const watch_session_info = await this.initWatchSession();\r\n        if (watch_session_info.is_success === false) {\r\n\r\n            // 初期化に失敗した際のエラーメッセージを設定する\r\n            // UI 側のエラー表示に利用されるほか、null から string になったことで初期化に失敗したことを示す\r\n            player_store.live_comment_init_failed_message = watch_session_info.detail;\r\n            console.error('[LiveCommentManager] Reconnection failed.');\r\n\r\n            // 無条件にエラーメッセージをプレイヤーに通知\r\n            if (this.player.template.notice.textContent!.includes('プレイヤーロジックを再起動しています…') === false) {\r\n                this.player.notice(watch_session_info.detail, undefined, undefined, '#FF6F6A');\r\n            }\r\n            return;\r\n        }\r\n\r\n        // 視聴セッションを初期化できた場合のみ、\r\n        // 取得したコメントサーバーへの接続情報を使い、非同期でコメントセッションを初期化\r\n        this.initCommentSession(watch_session_info);\r\n\r\n        console.warn('[LiveCommentManager] Reconnected.');\r\n    }\r\n\r\n\r\n    /**\r\n     * 視聴セッションとコメントセッションをそれぞれ閉じる\r\n     */\r\n    public async destroy(): Promise<void> {\r\n        const player_store = usePlayerStore();\r\n\r\n        // セッションに紐いているすべての EventListener を解除\r\n        // 再接続する場合に備えて AbortController を作り直す\r\n        this.abort_controller.abort();\r\n        this.abort_controller = new AbortController();\r\n\r\n        // 視聴セッションを閉じる\r\n        if (this.watch_session !== null) {\r\n            this.watch_session.close();  // WebSocket を閉じる\r\n            this.watch_session = null;  // null に戻す\r\n        }\r\n\r\n        // コメントセッションを閉じる\r\n        if (this.comment_session !== null) {\r\n            this.comment_session.close();  // WebSocket を閉じる\r\n            this.comment_session = null;  // null に戻す\r\n        }\r\n\r\n        // 座席保持用のタイマーをクリア\r\n        if (this.keep_seat_interval_id !== null) {\r\n            window.clearInterval(this.keep_seat_interval_id);\r\n            this.keep_seat_interval_id = null;\r\n        }\r\n        this.vpos_base_timestamp = 0;\r\n\r\n        // 初期化に失敗した際のエラーメッセージを削除\r\n        player_store.live_comment_init_failed_message = null;\r\n\r\n        console.log('[LiveCommentManager] Destroyed.');\r\n    }\r\n}\r\n\r\nexport default LiveCommentManager;\r\n","\r\n\r\nimport DPlayer from 'dplayer';\r\n\r\nimport PlayerManager from '@/services/player/PlayerManager';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport usePlayerStore from '@/stores/PlayerStore';\r\n\r\n\r\n/** ライブストリームステータス API から受信するイベントのインターフェイス */\r\ninterface ILiveStreamStatusEvent {\r\n    // 現在のライブストリームのステータス\r\n    status: 'Offline' | 'Standby' | 'ONAir' | 'Idling' | 'Restart';\r\n    // 現在のライブストリームのステータス詳細\r\n    detail: string;\r\n    // ライブストリームの開始時刻 (UNIX タイムスタンプ)\r\n    started_at: number;\r\n    // ライブストリームの最終更新時刻 (UNIX タイムスタンプ)\r\n    updated_at: number;\r\n    // このライブストリームを視聴しているクライアント数\r\n    client_count: number;\r\n}\r\n\r\n\r\n/**\r\n * ライブ視聴: ライブストリームのステータスを監視し随時 UI に反映する PlayerManager\r\n */\r\nclass LiveEventManager implements PlayerManager {\r\n\r\n    // ユーザー操作により DPlayer 側で画質が切り替わった際、この PlayerManager の再起動が必要かどうかを PlayerWrapper に示す値\r\n    public readonly restart_required_when_quality_switched = true;\r\n\r\n    // DPlayer のインスタンス\r\n    // 設計上コンストラクタ以降で変更すべきでないため readonly にしている\r\n    private readonly player: DPlayer;\r\n\r\n    // EventSource のインスタンス\r\n    private eventsource: EventSource | null = null;\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * @param player DPlayer のインスタンス\r\n     */\r\n    constructor(player: DPlayer) {\r\n        this.player = player;\r\n    }\r\n\r\n\r\n    /**\r\n     * サーバー側のライブストリームステータス API (Server-Sent Events) に接続し、ライブストリームのステータス監視を開始する\r\n     */\r\n    public async init(): Promise<void> {\r\n        const channels_store = useChannelsStore();\r\n        const player_store = usePlayerStore();\r\n\r\n        // EventSource を初期化し、Server-Sent Events のストリーミングを開始する\r\n        // PlayerManager の設計上、同一の PlayerManager インスタンスはチャンネルが変更されない限り再利用される可能性がある\r\n        // 接続先の API URL は DPlayer 上で再生中の画質設定によって変化するため、\r\n        // 画質切り替え後の再起動も想定しコンストラクタではなくあえて init() 内で API URL を取得している\r\n        const eventsource_url = this.player.quality!.url.replace('/mpegts', '/events');\r\n        this.eventsource = new EventSource(eventsource_url);\r\n\r\n        // 初回接続時のイベント\r\n        this.eventsource.addEventListener('initial_update', (event_raw: MessageEvent) => {\r\n\r\n            // イベントを取得\r\n            const event: ILiveStreamStatusEvent = JSON.parse(event_raw.data);\r\n            console.log('\\u001b[33m[LiveEventManager][initial_update]', `\\nStatus: ${event.status} / Detail: ${event.detail}`);\r\n\r\n            // ライブストリームのステータスを設定\r\n            player_store.live_stream_status = event.status;\r\n\r\n            // ステータスごとに処理を振り分け\r\n            switch (event.status) {\r\n\r\n                // Status: Standby\r\n                case 'Standby': {\r\n\r\n                    // バッファリング中の Progress Circular を表示\r\n                    player_store.is_video_buffering = true;\r\n\r\n                    // プレイヤーの背景を表示する\r\n                    player_store.is_background_display = true;\r\n\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        // ステータスが更新されたときのイベント\r\n        this.eventsource.addEventListener('status_update', async (event_raw: MessageEvent) => {\r\n\r\n            // イベントを取得\r\n            const event: ILiveStreamStatusEvent = JSON.parse(event_raw.data);\r\n            console.log('\\u001b[33m[LiveEventManager][status_update]', `\\nStatus: ${event.status} / Detail: ${event.detail}`);\r\n\r\n            // ライブストリームのステータスを設定\r\n            player_store.live_stream_status = event.status;\r\n\r\n            // 視聴者数を更新\r\n            channels_store.updateChannel(channels_store.display_channel_id, {\r\n                ...channels_store.channel.current,\r\n                viewer_count: event.client_count,\r\n            });\r\n\r\n            // ステータスごとに処理を振り分け\r\n            switch (event.status) {\r\n\r\n                // Status: Standby\r\n                case 'Standby': {\r\n\r\n                    // ステータス詳細をプレイヤーに表示\r\n                    // 画質切り替え or エンコードタスクの再起動通知が既に表示されている場合は上書きしない\r\n                    if ((this.player.template.notice.textContent!.includes('画質を') === false &&\r\n                         this.player.template.notice.textContent!.includes('(ER-') === false)) {\r\n                        this.player.notice(event.detail, -1);\r\n                    }\r\n\r\n                    // バッファリング中の Progress Circular を表示\r\n                    player_store.is_video_buffering = true;\r\n\r\n                    // プレイヤーの背景を表示する\r\n                    player_store.is_background_display = true;\r\n\r\n                    break;\r\n                }\r\n\r\n                // Status: ONAir\r\n                case 'ONAir': {\r\n\r\n                    // ステータス詳細をプレイヤーから削除\r\n                    // 画質切り替えの通知が既に表示されている場合は上書きしない\r\n                    if (this.player.template.notice.textContent!.includes('画質を') === false) {\r\n                        this.player.hideNotice();\r\n                    }\r\n\r\n                    // ライブストリーミングが開始される前にチャンネルを切り替えた際、稀にコメントが流れないことがある不具合のワークアラウンド\r\n                    // TODO: リファクタリングで不要になってるかも？\r\n                    if (this.player.container.classList.contains('dplayer-paused')) {\r\n                        this.player.container.classList.remove('dplayer-paused');\r\n                        this.player.container.classList.add('dplayer-playing');\r\n                    }\r\n\r\n                    // 前のプレイヤーインスタンスの Picture-in-Picture ウインドウが残っている場合、終了させてからもう一度切り替える\r\n                    // チャンネル切り替えが完了しても前の Picture-in-Picture ウインドウは再利用されないため、一旦終了させるしかない\r\n                    if (document.pictureInPictureElement) {\r\n                        document.exitPictureInPicture();\r\n                        this.player.video.requestPictureInPicture();\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                // Status: Idling\r\n                case 'Idling': {\r\n\r\n                    // 本来誰も視聴していないことを示す Idling ステータスを受信している場合、何らかの理由で\r\n                    // ライブストリーミング API への接続が切断された可能性が高いので、PlayerWrapper にプレイヤーロジックの再起動を要求する\r\n                    player_store.event_emitter.emit('PlayerRestartRequired', {\r\n                        message: 'ストリーミング接続が切断されました。(Status: Idling) プレイヤーロジックを再起動しています…',\r\n                    });\r\n\r\n                    break;\r\n                }\r\n\r\n                // Status: Restart\r\n                case 'Restart': {\r\n\r\n                    // エンコーダーがクラッシュしたなどの理由でライブストリームが再起動中なので、\r\n                    // PlayerWrapper にプレイヤーロジックの再起動を要求する\r\n                    player_store.event_emitter.emit('PlayerRestartRequired', {\r\n                        // ステータス詳細 (再起動に至った理由) をプレイヤーに表示\r\n                        message: event.detail,\r\n                    });\r\n\r\n                    // バッファリング中の Progress Circular を表示 (不要だとは思うけど念のため)\r\n                    player_store.is_video_buffering = true;\r\n\r\n                    // プレイヤーの背景を表示する (不要だとは思うけど念のため)\r\n                    player_store.is_background_display = true;\r\n\r\n                    break;\r\n                }\r\n\r\n                // Status: Offline\r\n                // 基本的に Offline は放送休止中やエラーなどで復帰の見込みがない状態\r\n                case 'Offline': {\r\n\r\n                    // 「ライブストリームは Offline です。」のステータス詳細を受信すること自体が不正な状態\r\n                    // ストリーミング API への接続が切断された可能性が高いので、PlayerWrapper にプレイヤーロジックの再起動を要求する\r\n                    if (event.detail === 'ライブストリームは Offline です。') {\r\n                        player_store.event_emitter.emit('PlayerRestartRequired', {\r\n                            message: 'ストリーミング接続が切断されました。(Status: Offline) プレイヤーロジックを再起動しています…',\r\n                        });\r\n                    }\r\n\r\n                    // ステータス詳細をプレイヤーに表示\r\n                    this.player.notice(event.detail, -1);\r\n                    this.player.video.onerror = () => {\r\n                        // 動画の読み込みエラーが送出された際に DPlayer に表示中の通知メッセージを上書きする\r\n                        this.player.notice(event.detail, -1);\r\n                        this.player.video.onerror = null;\r\n                    };\r\n\r\n                    // 既に描画されたコメントをクリア\r\n                    this.player.danmaku!.clear();\r\n\r\n                    // 動画を停止する\r\n                    this.player.video.pause();\r\n\r\n                    // プレイヤーの背景を表示する\r\n                    player_store.is_background_display = true;\r\n\r\n                    // バッファリング中の Progress Circular を非表示にする\r\n                    player_store.is_loading = false;\r\n                    player_store.is_video_buffering = false;\r\n\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        // ステータス詳細が更新されたときのイベント\r\n        this.eventsource.addEventListener('detail_update', (event_raw: MessageEvent) => {\r\n\r\n            // イベントを取得\r\n            const event: ILiveStreamStatusEvent = JSON.parse(event_raw.data);\r\n            console.log('\\u001b[33m[LiveEventManager][detail_update]', `\\nStatus: ${event.status} Detail:${event.detail}`);\r\n\r\n            // 視聴者数を更新\r\n            channels_store.updateChannel(channels_store.display_channel_id, {\r\n                ...channels_store.channel.current,\r\n                viewer_count: event.client_count,\r\n            });\r\n\r\n            // ステータスごとに処理を振り分け\r\n            switch (event.status) {\r\n\r\n                // Status: Standby\r\n                case 'Standby': {\r\n\r\n                    // ステータス詳細をプレイヤーに表示\r\n                    // 画質切り替え or エンコードタスクの再起動通知が既に表示されている場合は上書きしない\r\n                    if ((this.player.template.notice.textContent!.includes('画質を') === false &&\r\n                         this.player.template.notice.textContent!.includes('(ER-') === false)) {\r\n                        this.player.notice(event.detail, -1);\r\n                    }\r\n\r\n                    // プレイヤーの背景を表示する\r\n                    player_store.is_background_display = true;\r\n\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        // クライアント数 (だけ) が更新されたときのイベント\r\n        this.eventsource.addEventListener('clients_update', (event_raw: MessageEvent) => {\r\n\r\n            // イベントを取得\r\n            const event: ILiveStreamStatusEvent = JSON.parse(event_raw.data);\r\n\r\n            // 視聴者数を更新\r\n            channels_store.updateChannel(channels_store.display_channel_id, {\r\n                ...channels_store.channel.current,\r\n                viewer_count: event.client_count,\r\n            });\r\n        });\r\n\r\n        console.log('\\u001b[33m[LiveEventManager] Initialized.');\r\n    }\r\n\r\n\r\n    /**\r\n     * サーバー側のライブストリームステータス API (Server-Sent Events) への接続を切断し、ライブストリームのステータス監視を停止する\r\n     */\r\n    public async destroy(): Promise<void> {\r\n\r\n        // ライブストリームのステータスを null に戻す\r\n        const player_store = usePlayerStore();\r\n        player_store.live_stream_status = null;\r\n\r\n        // EventSource を破棄し、Server-Sent Events のストリーミングを終了する\r\n        if (this.eventsource !== null) {\r\n            this.eventsource.close();\r\n            this.eventsource = null;\r\n        }\r\n\r\n        console.log('\\u001b[33m[LiveEventManager] Destroyed.');\r\n    }\r\n}\r\n\r\nexport default LiveEventManager;\r\n","\r\n\r\nimport DPlayer from 'dplayer';\r\n\r\nimport router from '@/router';\r\nimport PlayerManager from '@/services/player/PlayerManager';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport usePlayerStore from '@/stores/PlayerStore';\r\nimport Utils from '@/utils';\r\n\r\n\r\n/**\r\n * MediaSession API を使いメディア通知を管理する PlayerManager\r\n */\r\nclass MediaSessionManager implements PlayerManager {\r\n\r\n    // ユーザー操作により DPlayer 側で画質が切り替わった際、この PlayerManager の再起動が必要かどうかを PlayerWrapper に示す値\r\n    public readonly restart_required_when_quality_switched = false;\r\n\r\n    // DPlayer のインスタンス\r\n    // 設計上コンストラクタ以降で変更すべきでないため readonly にしている\r\n    private readonly player: DPlayer;\r\n\r\n    // 再生モード (Live: ライブ視聴, Video: ビデオ視聴)\r\n    private readonly playback_mode: 'Live' | 'Video';\r\n\r\n    // 破棄済みかどうか\r\n    private destroyed = false;\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * @param player DPlayer のインスタンス\r\n     * @param playback_mode 再生モード (Live: ライブ視聴, Video: ビデオ視聴)\r\n     */\r\n    constructor(player: DPlayer, playback_mode: 'Live' | 'Video') {\r\n        this.player = player;\r\n        this.playback_mode = playback_mode;\r\n    }\r\n\r\n\r\n    /**\r\n     * MediaSession 情報をブラウザに登録する\r\n     * 再生中のチャンネル情報・番組情報・録画番組情報が変更された場合は、一度破棄してから再度実行する必要がある\r\n     */\r\n    public async init(): Promise<void> {\r\n        const channels_store = useChannelsStore();\r\n        const player_store = usePlayerStore();\r\n\r\n        // 破棄済みかどうかのフラグを下ろす\r\n        this.destroyed = false;\r\n\r\n        // MediaSession API を使い、メディア通知の表示をカスタマイズ\r\n        if ('mediaSession' in navigator) {\r\n\r\n            // ライブ視聴でアートワークとして表示するアイコン\r\n            const live_artwork = [\r\n                {src: '/assets/images/icons/icon-maskable-192px.png', sizes: '192x192', type: 'image/png'},\r\n                {src: '/assets/images/icons/icon-maskable-512px.png', sizes: '512x512', type: 'image/png'},\r\n            ];\r\n\r\n            // ビデオ視聴でアートワークとして表示する番組サムネイル\r\n            // TODO: ちゃんと録画番組のサムネイルを設定すべき\r\n            const video_artwork = [\r\n                {src: '/assets/images/icons/icon-maskable-192px.png', sizes: '192x192', type: 'image/png'},\r\n                {src: '/assets/images/icons/icon-maskable-512px.png', sizes: '512x512', type: 'image/png'},\r\n            ];\r\n\r\n            // メディア通知の表示をカスタマイズ\r\n            // ライブ視聴: 番組タイトル・チャンネル名・アイコンを表示\r\n            if (this.playback_mode === 'Live') {\r\n                navigator.mediaSession.metadata = new MediaMetadata({\r\n                    title: channels_store.channel.current.program_present?.title ?? '放送休止',\r\n                    artist: channels_store.channel.current.name,\r\n                    artwork: live_artwork,\r\n                });\r\n            // ビデオ視聴: 番組タイトル・シリーズタイトル・サムネイルを表示\r\n            // シリーズタイトルが取得できていない場合は番組タイトルが代わりに設定される\r\n            } else {\r\n                navigator.mediaSession.metadata = new MediaMetadata({\r\n                    title: player_store.recorded_program.title,\r\n                    artist: player_store.recorded_program.series_title ?? player_store.recorded_program.title,\r\n                    artwork: video_artwork,\r\n                });\r\n            }\r\n\r\n            // 再生速度や再生位置が変更された際に MediaSession の情報を更新する\r\n            // ライブ視聴時は再生位置自体が無限なので何も起こらない\r\n            this.player.on('ratechange', this.updateMediaSessionPositionState.bind(this));\r\n            this.player.on('seeking', this.updateMediaSessionPositionState.bind(this));\r\n            this.player.on('seeked', this.updateMediaSessionPositionState.bind(this));\r\n\r\n            // メディア通知上のボタンが押されたときのイベント\r\n            // 再生\r\n            navigator.mediaSession.setActionHandler('play', () => this.player?.play());\r\n            // 停止\r\n            navigator.mediaSession.setActionHandler('pause', () => this.player?.pause());\r\n            // 前/次の再生位置にシーク (ビデオ視聴時のみ)\r\n            if (this.playback_mode === 'Video') {\r\n                // 前の再生位置にシーク\r\n                navigator.mediaSession.setActionHandler('seekbackward', (details) => {\r\n                    const seek_offset = details.seekOffset ?? 10;  // デフォルト: 10 秒早戻し\r\n                    this.player.seek(this.player.video.currentTime - seek_offset);\r\n                });\r\n                // 次の再生位置にシーク\r\n                navigator.mediaSession.setActionHandler('seekforward', (details) => {\r\n                    const seek_offset = details.seekOffset ?? 10;  // デフォルト: 10 秒早送り\r\n                    this.player.seek(this.player.video.currentTime + seek_offset);\r\n                });\r\n                // イベントで渡された再生位置にシーク\r\n                navigator.mediaSession.setActionHandler('seekto', (details) => {\r\n                    this.player.seek(details.seekTime!);\r\n                });\r\n            }\r\n            // 前のトラックに移動\r\n            navigator.mediaSession.setActionHandler('previoustrack', async () => {\r\n                // ライブ視聴: 前のチャンネルに切り替え\r\n                if (this.playback_mode === 'Live') {\r\n                    navigator.mediaSession.metadata = new MediaMetadata({\r\n                        title: channels_store.channel.previous.program_present?.title ?? '放送休止',\r\n                        artist: channels_store.channel.previous.name,\r\n                        artwork: live_artwork,\r\n                    });\r\n                    // ルーティングを前のチャンネルに置き換える\r\n                    await router.push({path: `/tv/watch2/${channels_store.channel.previous.display_channel_id}`});\r\n                // ビデオ視聴: シリーズ番組の前の話数に切り替え\r\n                } else {\r\n                    // TODO: 未実装\r\n                }\r\n            });\r\n            // 次のトラックに移動\r\n            navigator.mediaSession.setActionHandler('nexttrack', async () => {  // 次のチャンネルに切り替え\r\n                // ライブ視聴: 次のチャンネルに切り替え\r\n                if (this.playback_mode === 'Live') {\r\n                    navigator.mediaSession.metadata = new MediaMetadata({\r\n                        title: channels_store.channel.next.program_present?.title ?? '放送休止',\r\n                        artist: channels_store.channel.next.name,\r\n                        artwork: live_artwork,\r\n                    });\r\n                    // ルーティングを次のチャンネルに置き換える\r\n                    await router.push({path: `/tv/watch2/${channels_store.channel.next.display_channel_id}`});\r\n                // ビデオ視聴: シリーズ番組の次の話数に切り替え\r\n                } else {\r\n                    // TODO: 未実装\r\n                }\r\n            });\r\n        }\r\n\r\n        console.log('[MediaSessionManager] Initialized.');\r\n    }\r\n\r\n\r\n    /**\r\n     * メディア通知上の再生位置を更新する\r\n     */\r\n    private updateMediaSessionPositionState(): void {\r\n\r\n        // 破棄済みなら何もしない\r\n        // DPlayer に登録したイベントから破棄後のタイミングでこのメソッドが呼ばれる可能性がなくもないので、念のため\r\n        if (this.destroyed === true) {\r\n            return;\r\n        }\r\n\r\n        if ('setPositionState' in navigator.mediaSession) {\r\n            // ビデオ視聴のみ\r\n            if (this.playback_mode === 'Video') {\r\n                navigator.mediaSession.setPositionState({\r\n                    // 現在の動画の長さ\r\n                    duration: this.player.video.duration,\r\n                    // 現在の動画の再生速度\r\n                    playbackRate: this.player.video.playbackRate,\r\n                    // 現在の動画の再生位置\r\n                    position: this.player.video.currentTime,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * MediaSession 情報をブラウザから削除する\r\n     */\r\n    public async destroy(): Promise<void> {\r\n\r\n        // DPlayer からイベントを削除\r\n        this.player.off('ratechange', this.updateMediaSessionPositionState.bind(this));\r\n        this.player.off('seeking', this.updateMediaSessionPositionState.bind(this));\r\n        this.player.off('seeked', this.updateMediaSessionPositionState.bind(this));\r\n\r\n        // MediaSession API を使い、メディア通知の表示をリセット\r\n        if ('mediaSession' in navigator) {\r\n            navigator.mediaSession.metadata = null;\r\n            navigator.mediaSession.setActionHandler('play', null);\r\n            navigator.mediaSession.setActionHandler('pause', null);\r\n            navigator.mediaSession.setActionHandler('seekbackward', null);\r\n            navigator.mediaSession.setActionHandler('seekforward', null);\r\n            navigator.mediaSession.setActionHandler('previoustrack', null);\r\n            navigator.mediaSession.setActionHandler('nexttrack', null);\r\n            if ('setPositionState' in navigator.mediaSession) {\r\n                // Safari ではなぜかエラーになるので実行しない\r\n                if (Utils.isSafari() === false) {\r\n                    navigator.mediaSession.setPositionState({});  // 空のオブジェクトを渡して状態をリセット\r\n                }\r\n            }\r\n        }\r\n\r\n        // 破棄済みかどうかのフラグを立てる\r\n        this.destroyed = true;\r\n\r\n        console.log('[MediaSessionManager] Destroyed.');\r\n    }\r\n}\r\n\r\nexport default MediaSessionManager;\r\n","\r\nimport assert from 'assert';\r\n\r\nimport DPlayer, { DPlayerType } from 'dplayer';\r\nimport mpegts from 'mpegts.js';\r\n\r\nimport APIClient from '@/services/APIClient';\r\nimport CaptureManager from '@/services/player/managers/CaptureManager2';\r\nimport LiveCommentManager from '@/services/player/managers/LiveCommentManager2';\r\nimport LiveDataBroadcastingManager from '@/services/player/managers/LiveDataBroadcastingManager';\r\nimport LiveEventManager from '@/services/player/managers/LiveEventManager';\r\nimport MediaSessionManager from '@/services/player/managers/MediaSessionManager';\r\nimport PlayerManager from '@/services/player/PlayerManager';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport usePlayerStore from '@/stores/PlayerStore';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils, { PlayerUtils } from '@/utils';\r\n\r\n\r\n/**\r\n * 動画プレイヤーである DPlayer に関連するロジックを丸ごとラップするクラスで、プレイヤーロジックの中核を担う\r\n * DPlayer の初期化後は DPlayer が発行するイベントなどに合わせ、各イベントハンドラーや PlayerManager を管理する\r\n *\r\n * このクラスはコンストラクタで指定されたチャンネル or 録画番組の再生に責任を持つ\r\n * await destroy() 後に再度 await init() すると、コンストラクタに渡したのと同じチャンネル or 録画番組のプレイヤーロジックを再起動できる\r\n * 再生対象が他のチャンネル or 録画番組に切り替えられた際は、既存の PlayerWrapper を破棄し、新たに PlayerWrapper を作り直す必要がある\r\n * 実装上、このクラスのインスタンスは必ずアプリケーション上で1つだけ存在するように実装する必要がある\r\n */\r\nclass PlayerWrapper {\r\n\r\n    // ライブ視聴: 低遅延モードオンでの再生バッファ (秒単位)\r\n    // 0.8 秒程度余裕を持たせる\r\n    private static readonly LIVE_PLAYBACK_BUFFER_SECONDS_LOW_LATENCY = 0.8;\r\n\r\n    // ライブ視聴: 低遅延モードオフでの再生バッファ (秒単位)\r\n    // 5秒程度の遅延を許容する\r\n    private static readonly LIVE_PLAYBACK_BUFFER_SECONDS = 5.0;\r\n\r\n    // DPlayer のインスタンス\r\n    private player: DPlayer | null = null;\r\n\r\n    // それぞれの PlayerManager のインスタンスのリスト\r\n    private player_managers: PlayerManager[] = [];\r\n\r\n    // 再生モード (Live: ライブ視聴, Video: ビデオ視聴)\r\n    private readonly playback_mode: 'Live' | 'Video';\r\n\r\n    // ライブ視聴: 許容する HTMLMediaElement の内部再生バッファの秒数\r\n    // 設計上コンストラクタ以降で変更すべきでないため readonly にしている\r\n    private readonly live_playback_buffer_seconds: number;\r\n\r\n    // ライブ視聴: mpegts.js のバッファ詰まり対策で定期的に強制シークするインターバルのタイマー ID\r\n    // 保持しておかないと clearInterval() でタイマーを止められない\r\n    private live_force_seek_interval_timer_id: number = 0;\r\n\r\n    // setupPlayerContainerResizeHandler() で利用する ResizeObserver\r\n    // 保持しておかないと disconnect() で ResizeObserver を止められない\r\n    private player_container_resize_observer: ResizeObserver | null = null;\r\n\r\n    // handlePlayerControlUIVisibility() で利用するタイマー ID\r\n    // 保持しておかないと clearTimeout() でタイマーを止められない\r\n    private player_control_ui_hide_timer_id: number = 0;\r\n\r\n    // RomSound の AudioContext と AudioBuffer のリスト\r\n    private readonly romsounds_context: AudioContext = new AudioContext();\r\n    private readonly romsounds_buffers: AudioBuffer[] = [];\r\n\r\n    // 破棄中かどうか\r\n    // 破棄中は destroy() が呼ばれても何もしない\r\n    private destroying = false;\r\n\r\n    // 破棄済みかどうか\r\n    private destroyed = false;\r\n\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * 実際の DPlayer の初期化処理は await init() で行われる\r\n     */\r\n    constructor(playback_mode: 'Live' | 'Video') {\r\n\r\n        // 再生モードをセット\r\n        this.playback_mode = playback_mode;\r\n\r\n        // 低遅延モードであれば低遅延向けの再生バッファを、そうでなければ通常の再生バッファをセット (秒単位)\r\n        const settings_store = useSettingsStore();\r\n        this.live_playback_buffer_seconds = settings_store.settings.tv_low_latency_mode ?\r\n            PlayerWrapper.LIVE_PLAYBACK_BUFFER_SECONDS_LOW_LATENCY : PlayerWrapper.LIVE_PLAYBACK_BUFFER_SECONDS;\r\n\r\n        // Safari の Media Source Extensions API の実装はどうもバッファの揺らぎが大きい (?) ようなので、バッファ詰まり対策で\r\n        // さらに 0.3 秒程度余裕を持たせる\r\n        if (Utils.isSafari() === true) {\r\n            this.live_playback_buffer_seconds += 0.3;\r\n        }\r\n\r\n        // 01 ~ 14 まですべての RomSound を読み込む\r\n        for (let index = 1; index <= 14; index++) {\r\n            (async () => {\r\n                // ArrayBuffer をデコードして AudioBuffer にし、すぐ呼び出せるように貯めておく\r\n                // ref: https://ics.media/entry/200427/\r\n                const romsound_url = `/assets/romsounds/${index.toString().padStart(2, '0')}.wav`;\r\n                const romsound_response = await APIClient.get<ArrayBuffer>(romsound_url, {\r\n                    baseURL: '',  // BaseURL を明示的にクライアントのルートに設定\r\n                    responseType: 'arraybuffer',\r\n                });\r\n                if (romsound_response.type === 'success') {\r\n                    this.romsounds_buffers.push(await this.romsounds_context.decodeAudioData(romsound_response.data));\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * DPlayer と PlayerManager を初期化し、再生準備を行う\r\n     */\r\n    public async init(): Promise<void> {\r\n        const channels_store = useChannelsStore();\r\n        const player_store = usePlayerStore();\r\n        const settings_store = useSettingsStore();\r\n\r\n        console.log('\\u001b[31m[PlayerWrapper] Initializing...');\r\n\r\n        // 破棄済みかどうかのフラグを下ろす\r\n        this.destroyed = false;\r\n\r\n        // mpegts.js を window 直下に入れる\r\n        // こうしないと DPlayer が mpegts.js を認識できない\r\n        (window as any).mpegts = mpegts;\r\n\r\n        // DPlayer を初期化\r\n        this.player = new DPlayer({\r\n            // DPlayer を配置する要素\r\n            container: document.querySelector<HTMLDivElement>('.watch-player__dplayer')!,\r\n            // テーマカラー\r\n            theme: '#E64F97',\r\n            // 言語 (日本語固定)\r\n            lang: 'ja-jp',\r\n            // ライブモード (ビデオ視聴では無効)\r\n            live: this.playback_mode === 'Live' ? true : false,\r\n            // ライブモードで同期する際の最小バッファサイズ\r\n            liveSyncMinBufferSize: this.live_playback_buffer_seconds - 0.1,\r\n            // ループ再生 (ライブ視聴では無効)\r\n            loop: this.playback_mode === 'Live' ? false : true,\r\n            // 自動再生\r\n            autoplay: true,\r\n            // AirPlay 機能 (うまく動かないため無効化)\r\n            airplay: false,\r\n            // ショートカットキー（こちらで制御するため無効化）\r\n            hotkey: false,\r\n            // スクリーンショット (こちらで制御するため無効化)\r\n            screenshot: false,\r\n            // CORS を有効化\r\n            crossOrigin: 'anonymous',\r\n            // 音量の初期値\r\n            volume: 1.0,\r\n\r\n            // 動画の設定\r\n            video: (() => {\r\n\r\n                // 画質リスト\r\n                const qualities: DPlayerType.VideoQuality[] = [];\r\n\r\n                // 画質の種類\r\n                const quality_names = ['1080p-60fps', '1080p', '810p', '720p', '540p', '480p', '360p', '240p'];\r\n\r\n                // ブラウザが H.265 / HEVC の再生に対応していて、かつ通信節約モードが有効なとき\r\n                // API に渡す画質に -hevc のプレフィックスをつける\r\n                let hevc_prefix = '';\r\n                if (PlayerUtils.isHEVCVideoSupported() && settings_store.settings.tv_data_saver_mode === true) {\r\n                    hevc_prefix = '-hevc';\r\n                }\r\n\r\n                // ライブ視聴: チャンネル情報がセットされているはず\r\n                if (this.playback_mode === 'Live') {\r\n\r\n                    // ライブストリーミング API のベース URL\r\n                    const stream_api_base_url = `${Utils.api_base_url}/streams/live/${channels_store.channel.current.display_channel_id}`;\r\n\r\n                    // ラジオチャンネルの場合\r\n                    // API が受け付ける画質の値は通常のチャンネルと同じだが (手抜き…)、実際の画質は 48KHz/192kbps で固定される\r\n                    // ラジオチャンネルの場合は、1080p と渡しても 48kHz/192kbps 固定の音声だけの MPEG-TS が配信される\r\n                    if (channels_store.channel.current.is_radiochannel === true) {\r\n                        qualities.push({\r\n                            name: '48kHz/192kbps',\r\n                            type: 'mpegts',\r\n                            url: `${stream_api_base_url}/1080p/mpegts`,\r\n                        });\r\n\r\n                    // 通常のチャンネルの場合\r\n                    } else {\r\n\r\n                        // 画質リストを作成\r\n                        for (const quality_name of quality_names) {\r\n                            qualities.push({\r\n                                // 1080p-60fps のみ、見栄えの観点から表示上 \"1080p (60fps)\" と表示する\r\n                                name: quality_name === '1080p-60fps' ? '1080p (60fps)' : quality_name,\r\n                                type: 'mpegts',\r\n                                url: `${stream_api_base_url}/${quality_name}${hevc_prefix}/mpegts`,\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    // デフォルトの画質\r\n                    // ラジオチャンネルのみ常に 48KHz/192kbps に固定する\r\n                    let default_quality: string = settings_store.settings.tv_streaming_quality;\r\n                    if (channels_store.channel.current.is_radiochannel) {\r\n                        default_quality = '48kHz/192kbps';\r\n                    }\r\n\r\n                    return {\r\n                        quality: qualities,\r\n                        defaultQuality: default_quality,\r\n                    };\r\n\r\n                // ビデオ視聴: 録画番組情報がセットされているはず\r\n                } else {\r\n\r\n                    // 画質リストを作成\r\n                    for (const quality_name of quality_names) {\r\n                        qualities.push({\r\n                            // 1080p-60fps のみ、見栄えの観点から表示上 \"1080p (60fps)\" と表示する\r\n                            name: quality_name === '1080p-60fps' ? '1080p (60fps)' : quality_name,\r\n                            type: 'hls',\r\n                            // TODO: API URL は未実装なので適当な値を入れておく\r\n                            url: `${Utils.api_base_url}/streams/video/${player_store.recorded_program.id}/${quality_name}${hevc_prefix}/playlist`,\r\n                        });\r\n                    }\r\n\r\n                    // TODO: 未実装なので適当な値を返す\r\n                    // 録画ではラジオは考慮しない\r\n                    return {\r\n                        quality: qualities,\r\n                        defaultQuality: '1080p',  // TODO: 未実装なので適当に決めうち\r\n                    };\r\n                }\r\n            })(),\r\n\r\n            // コメントの設定\r\n            danmaku: {\r\n                // コメントするユーザー名: 便宜上 KonomiTV に固定 (実際には利用されない)\r\n                user: 'KonomiTV',\r\n                // コメントの流れる速度\r\n                speedRate: settings_store.settings.comment_speed_rate,\r\n                // コメントのフォントサイズ\r\n                fontSize: settings_store.settings.comment_font_size,\r\n                // コメント送信後にコメントフォームを閉じるかどうか\r\n                closeCommentFormAfterSend: settings_store.settings.close_comment_form_after_sending,\r\n            },\r\n\r\n            // コメント API バックエンドの設定\r\n            apiBackend: {\r\n                // コメント取得時\r\n                read: (options) => {\r\n                    // ライブ視聴: 空の配列を返す (こうするとコメント0件と認識される)\r\n                    if (this.playback_mode === 'Live') {\r\n                        // ライブ視聴では LiveCommentManager 側でリアルタイムにコメントを受信・描画するため、最終的なコメント数を確定できない\r\n                        // ここでは一旦コメント0件として認識させる\r\n                        options.success([]);\r\n                    // ビデオ視聴: 過去ログコメントを取得して返す\r\n                    } else {\r\n                        // TODO: 未実装\r\n                        options.success([]);\r\n                    }\r\n                },\r\n                // コメント送信時\r\n                send: async (options) => {\r\n                    // ライブ視聴: コメントを送信する\r\n                    if (this.playback_mode === 'Live') {\r\n                        // ライブ視聴であれば PlayerManager に登録されているはずの LiveCommentManager を探し、コメントを送信する\r\n                        for (const player_manager of this.player_managers) {\r\n                            if (player_manager instanceof LiveCommentManager) {\r\n                                player_manager.sendComment(options);  // options.success() は LiveCommentManager 側で呼ばれる\r\n                                return;\r\n                            }\r\n                        }\r\n                    // ビデオ視聴: 過去ログにはコメントできないのでエラーを返す\r\n                    } else {\r\n                        options.error('録画番組にはコメントできません。');\r\n                    }\r\n                },\r\n            },\r\n\r\n            // 字幕の設定\r\n            subtitle: {\r\n                type: 'aribb24',  // aribb24.js を有効化\r\n            },\r\n\r\n            // 再生プラグインの設定\r\n            pluginOptions: {\r\n                // mpegts.js\r\n                mpegts: {\r\n                    config: {\r\n                        // Web Worker を有効にする\r\n                        enableWorker: true,\r\n                        // Media Source Extensions API 向けの Web Worker を有効にする\r\n                        // メインスレッドから再生処理を分離することで、低スペック端末で DOM 描画の遅延が影響して映像再生が詰まる問題が解消される\r\n                        // MSE in Workers が使えるかは MediaSource.canConstructInDedicatedWorker が true かどうかで判定できる\r\n                        // MediaSource.canConstructInDedicatedWorker は TypeScript の仕様上型定義の追加が難しいため any で回避している\r\n                        // ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/canConstructInDedicatedWorker_static\r\n                        enableWorkerForMSE: window.MediaSource && (window.MediaSource as any).canConstructInDedicatedWorker === true,\r\n                        // 再生開始まで 2048KB のバッファを貯める (?)\r\n                        // あまり大きくしすぎてもどうも効果がないようだが、小さくしたり無効化すると特に Safari で不安定になる\r\n                        enableStashBuffer: true,\r\n                        stashInitialSize: Math.floor(2048 * 1024),\r\n                        // HTMLMediaElement の内部バッファによるライブストリームの遅延を追跡する\r\n                        // liveBufferLatencyChasing と異なり、いきなり再生時間をスキップするのではなく、\r\n                        // 再生速度を少しだけ上げることで再生を途切れさせることなく遅延を追跡する\r\n                        liveSync: settings_store.settings.tv_low_latency_mode,\r\n                        // 許容する HTMLMediaElement の内部バッファの最大値 (秒単位, 3秒)\r\n                        liveSyncMaxLatency: 3,\r\n                        // HTMLMediaElement の内部バッファ (遅延) が liveSyncMaxLatency を超えたとき、ターゲットとする遅延時間 (秒単位)\r\n                        liveSyncTargetLatency: this.live_playback_buffer_seconds,\r\n                        // ライブストリームの遅延の追跡に利用する再生速度 (x1.1)\r\n                        // 遅延が 3 秒を超えたとき、遅延が playback_buffer_sec を下回るまで再生速度が x1.1 に設定される\r\n                        liveSyncPlaybackRate: 1.1,\r\n                    }\r\n                },\r\n                // aribb24.js\r\n                aribb24: {\r\n                    // 文字スーパーを表示するかどうか\r\n                    disableSuperimposeRenderer: settings_store.settings.tv_show_superimpose === false,\r\n                    // 描画フォント\r\n                    normalFont: `\"${settings_store.settings.caption_font}\", \"Rounded M+ 1m for ARIB\", sans-serif`,\r\n                    // 縁取りする色\r\n                    forceStrokeColor: settings_store.settings.always_border_caption_text,\r\n                    // 背景色\r\n                    forceBackgroundColor: (() => {\r\n                        if (settings_store.settings.specify_caption_opacity === true) {\r\n                            const opacity = settings_store.settings.caption_opacity;\r\n                            return `rgba(0, 0, 0, ${opacity})`;\r\n                        } else {\r\n                            return undefined;\r\n                        }\r\n                    })(),\r\n                    // DRCS 文字を対応する Unicode 文字に置換\r\n                    drcsReplacement: true,\r\n                    // 高解像度の字幕 Canvas を取得できるように\r\n                    enableRawCanvas: true,\r\n                    // 縁取りに strokeText API を利用\r\n                    useStroke: true,\r\n                    // Unicode 領域の代わりに私用面の領域を利用 (Windows TV 系フォントのみ)\r\n                    usePUA: (() => {\r\n                        const font = settings_store.settings.caption_font;\r\n                        const context = document.createElement('canvas').getContext('2d')!;\r\n                        context.font = '10px \"Rounded M+ 1m for ARIB\"';\r\n                        context.fillText('Test', 0, 0);\r\n                        context.font = `10px \"${font}\"`;\r\n                        context.fillText('Test', 0, 0);\r\n                        if (font.startsWith('Windows TV')) {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    })(),\r\n                    // 文字スーパーの PRA (内蔵音再生コマンド) のコールバックを指定\r\n                    PRACallback: async (index: number) => {\r\n\r\n                        // 設定で文字スーパーが無効なら実行しない\r\n                        if (settings_store.settings.tv_show_superimpose === false) return;\r\n\r\n                        // index に応じた内蔵音を鳴らす\r\n                        // ref: https://ics.media/entry/200427/\r\n                        // ref: https://www.ipentec.com/document/javascript-web-audio-api-change-volume\r\n\r\n                        // 自動再生ポリシーに引っかかったなどで AudioContext が一時停止されている場合、一度 resume() する必要がある\r\n                        // resume() するまでに何らかのユーザーのジェスチャーが行われているはず…\r\n                        // なくても動くこともあるみたいだけど、念のため\r\n                        if (this.romsounds_context.state === 'suspended') {\r\n                            await this.romsounds_context.resume();\r\n                        }\r\n\r\n                        // index で指定された音声データを読み込み\r\n                        const buffer_source_node = this.romsounds_context.createBufferSource();\r\n                        buffer_source_node.buffer = this.romsounds_buffers[index];\r\n\r\n                        // GainNode につなげる\r\n                        const gain_node = this.romsounds_context.createGain();\r\n                        buffer_source_node.connect(gain_node);\r\n\r\n                        // 出力につなげる\r\n                        gain_node.connect(this.romsounds_context.destination);\r\n\r\n                        // 音量を元の wav の3倍にする (1倍だと結構小さめ)\r\n                        gain_node.gain.value = 3;\r\n\r\n                        // 再生開始\r\n                        buffer_source_node.start(0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // デバッグ用にプレイヤーインスタンスも window 直下に入れる\r\n        (window as any).player = this.player;\r\n\r\n        // DPlayer 側のコントロール UI 非表示タイマーを無効化（上書き）\r\n        // 無効化しておかないと、PlayerWrapper.handlePlayerControlUIVisibility() の処理と競合してしまう\r\n        // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/v1.30.2/src/ts/controller.ts#L397-L405 にある\r\n        this.player.controller.setAutoHide = (time: number) => {};\r\n\r\n        // DPlayer に動画再生系のイベントハンドラーを登録する\r\n        this.setupVideoPlaybackHandler();\r\n\r\n        // DPlayer のフルスクリーン関係のメソッドを無理やり上書きし、KonomiTV の UI と統合する\r\n        this.setupFullscreenHandler();\r\n\r\n        // DPlayer の設定パネルを無理やり拡張し、KonomiTV 独自の項目を追加する\r\n        this.setupSettingPanelHandler();\r\n\r\n        // KonomiTV 本体の UI を含むプレイヤー全体のコンテナ要素がリサイズされたときのイベントハンドラーを登録する\r\n        this.setupPlayerContainerResizeHandler();\r\n\r\n        // プレイヤーのコントロール UI を表示する (初回実行)\r\n        this.handlePlayerControlUIVisibility();\r\n\r\n        // UI コンポーネントからプレイヤーに通知メッセージの送信を要求されたときのイベントハンドラーを登録する\r\n        // このイベントは常にアプリケーション上で1つだけ登録されていなければならない\r\n        player_store.event_emitter.off('SendNotification');  // SendNotification イベントの全てのイベントハンドラーを削除\r\n        player_store.event_emitter.on('SendNotification', async (event) => {\r\n            assert(this.player !== null);\r\n            this.player.notice(event.message, event.duration, event.opacity, event.color);\r\n        });\r\n\r\n        // PlayerManager からプレイヤーロジックの再起動が必要になったことを通知されたときのイベントハンドラーを登録する\r\n        // このイベントは常にアプリケーション上で1つだけ登録されていなければならない\r\n        // さもなければ使い終わった破棄済みの PlayerWrapper が再起動イベントにより復活し、現在利用中の PlayerWrapper と競合してしまう\r\n        let is_player_restarting = false;  // 現在再起動中かどうか\r\n        player_store.event_emitter.off('PlayerRestartRequired');  // PlayerRestartRequired イベントの全てのイベントハンドラーを削除\r\n        player_store.event_emitter.on('PlayerRestartRequired', async (event) => {\r\n            console.warn('\\u001b[31m[PlayerWrapper] PlayerRestartRequired event received. Message: ', event.message);\r\n\r\n            // ライブ視聴: iOS 17.0 以下で mpegts.js がサポートされていない場合は再起動できない\r\n            if (this.playback_mode === 'Live' && mpegts.isSupported() !== true) {  // サポートしていない場合は undefined が返る\r\n                console.warn('\\u001b[31m[PlayerWrapper] PlayerRestartRequired event received, but mpegts.js is not supported. Ignored.');\r\n                // iOS 17.0 以下は mpegts.js がサポートされていないため、再生できない\r\n                this.player?.notice('iOS (Safari) 17.0 以下での視聴には対応していません。速やかに iOS を 17.1 以降に更新してください。', -1, undefined, '#FF6F6A');\r\n                return;\r\n            }\r\n\r\n            // 既に再起動中であれば何もしない (再起動が重複して行われるのを防ぐ)\r\n            if (is_player_restarting === true) {\r\n                console.warn('\\u001b[31m[PlayerWrapper] PlayerRestartRequired event received, but already restarting. Ignored.');\r\n                return;\r\n            }\r\n            is_player_restarting = true;\r\n\r\n            // PlayerWrapper を破棄\r\n            await this.destroy();\r\n\r\n            // 即座に再起動すると諸々問題があるので、少し待つ\r\n            await Utils.sleep(0.5);\r\n\r\n            // PlayerWrapper を再初期化\r\n            // この時点で PlayerRestartRequired のイベントハンドラーは再登録されているはず\r\n            await this.init();\r\n\r\n            // プレイヤー側にイベントの発火元から送られたメッセージ (プレイヤーロジックを再起動中である旨) を通知する\r\n            // 再初期化により、作り直した DPlayer が再び this.player にセットされているはず\r\n            // 通知を表示してから PlayerWrapper を破棄すると DPlayer の DOM 要素ごと消えてしまうので、DPlayer を作り直した後に通知を表示する\r\n            assert(this.player !== null);\r\n            this.player.notice(event.message, undefined, undefined, '#FF6F6A');\r\n            is_player_restarting = false;\r\n        });\r\n\r\n        // プレイヤー再起動ボタンを DPlayer の UI に追加する (再生が止まった際などに利用する想定)\r\n        // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\r\n        this.player.container.querySelector('.dplayer-icons.dplayer-icons-right')!.insertAdjacentHTML('afterbegin', `\r\n            <div class=\"dplayer-icon dplayer-player-restart-icon\" aria-label=\"プレイヤーを再起動\"\r\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\r\n                <span class=\"dplayer-icon-content\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 5V3.21c0-.45-.54-.67-.85-.35l-2.8 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.32.31.86.09.86-.36V7c3.31 0 6 2.69 6 6c0 2.72-1.83 5.02-4.31 5.75c-.42.12-.69.52-.69.95c0 .65.62 1.16 1.25.97A7.991 7.991 0 0 0 20 13c0-4.42-3.58-8-8-8zm-6 8c0-1.34.44-2.58 1.19-3.59c.3-.4.26-.95-.09-1.31c-.42-.42-1.14-.38-1.5.1a7.991 7.991 0 0 0 4.15 12.47c.63.19 1.25-.32 1.25-.97c0-.43-.27-.83-.69-.95C7.83 18.02 6 15.72 6 13z\"/></svg>\r\n                </span>\r\n            </div>\r\n        `);\r\n        // PlayerRestartRequired イベントとは異なり、通知メッセージなしで即座に PlayerWrapper を再起動する\r\n        this.player.container.querySelector('.dplayer-player-restart-icon')!.addEventListener('click', async () => {\r\n            await this.destroy();\r\n            await this.init();\r\n        });\r\n\r\n        // 各 PlayerManager を初期化・登録\r\n        // ライブ視聴とビデオ視聴で必要な PlayerManager が異なる\r\n        // 一応順序は意図的だがそこまで重要ではない\r\n        if (this.playback_mode === 'Live') {\r\n            // ライブ視聴時に設定する PlayerManager\r\n            this.player_managers = [\r\n                new LiveEventManager(this.player),\r\n                new LiveCommentManager(this.player),\r\n                new LiveDataBroadcastingManager(this.player),\r\n                new CaptureManager(this.player, this.playback_mode),\r\n                new MediaSessionManager(this.player, this.playback_mode),\r\n            ];\r\n        } else {\r\n            // ビデオ視聴時に設定する PlayerManager\r\n            this.player_managers = [\r\n                new CaptureManager(this.player, this.playback_mode),\r\n                new MediaSessionManager(this.player, this.playback_mode),\r\n            ];\r\n        }\r\n\r\n        // 登録されている PlayerManager をすべて初期化\r\n        // これにより各 PlayerManager での実際の処理が開始される\r\n        // 同期処理すると時間が掛かるので、並行して実行する\r\n        await Promise.all(this.player_managers.map((player_manager) => player_manager.init()));\r\n\r\n        console.log('\\u001b[31m[PlayerWrapper] Initialized.');\r\n    }\r\n\r\n\r\n    /**\r\n     * ライブ視聴: 現在の DPlayer の再生バッファを再生位置とバッファ秒数の差から取得する\r\n     * ビデオ視聴時と、取得に失敗した場合は 0 を返す\r\n     * @returns バッファ秒数\r\n     */\r\n    private getPlaybackBufferSeconds(): number {\r\n        if (this.player === null) return 0;\r\n        if (this.playback_mode === 'Live') {\r\n            try {\r\n                const buffered_range_count = this.player.video.buffered.length;\r\n                const buffer_remain = this.player.video.buffered.end(buffered_range_count - 1) - this.player.video.currentTime;\r\n                return Utils.mathFloor(buffer_remain, 3);\r\n            } catch (error) {\r\n                return 0;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * まだ再生が開始できていない場合 (HTMLVideoElement.readyState < HAVE_FUTURE_DATA) に再生状態の復旧を試みる\r\n     * 処理の完了を待つ必要はないので、基本 await せず非同期で実行すべき\r\n     * 基本 Safari だとなぜか再生開始がうまく行かないことが多いので（自動再生まわりが影響してる？）、その対策として用意した処理\r\n     */\r\n    private async recoverPlayback(): Promise<void> {\r\n        assert(this.player !== null);\r\n        const player_store = usePlayerStore();\r\n\r\n        // 1 秒待つ\r\n        await Utils.sleep(1);\r\n\r\n        // この時点で映像が停止していて、かつ readyState が HAVE_FUTURE_DATA な場合、復旧を試みる\r\n        // Safari ではタイミングによっては null になる場合があるらしいので ? を付ける\r\n        if (player_store.is_video_buffering === true && this.player?.video?.readyState < 3) {\r\n            console.warn('\\u001b[31m[PlayerWrapper] Video still buffering. (HTMLVideoElement.readyState < HAVE_FUTURE_DATA) trying to recover.');\r\n\r\n            // 一旦停止して、0.25 秒間を置く\r\n            this.player.video.pause();\r\n            await Utils.sleep(0.25);\r\n\r\n            // 再度再生を試みる\r\n            try {\r\n                await this.player.video.play();\r\n            } catch (error) {\r\n                assert(this.player !== null);\r\n                console.warn('\\u001b[31m[PlayerWrapper] HTMLVideoElement.play() rejected. paused.');\r\n                this.player.pause();\r\n                return;  // 再生開始がリジェクトされた場合はここで終了\r\n            }\r\n\r\n            // さらに 0.5 秒待った時点で映像が停止している場合、復旧を試みる\r\n            await Utils.sleep(0.5);\r\n            if (player_store.is_video_buffering === true && this.player?.video?.readyState < 3) {\r\n                console.warn('\\u001b[31m[PlayerWrapper] Video still buffering. (HTMLVideoElement.readyState < HAVE_FUTURE_DATA) trying to recover.');\r\n\r\n                // 一旦停止して、0.25 秒間を置く\r\n                this.player.video.pause();\r\n                await Utils.sleep(0.25);\r\n\r\n                // 再度再生を試みる\r\n                try {\r\n                    await this.player.video.play();\r\n                } catch (error) {\r\n                    assert(this.player !== null);\r\n                    console.warn('\\u001b[31m[PlayerWrapper] (retry) HTMLVideoElement.play() rejected. paused.');\r\n                    this.player.pause();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * DPlayer に動画再生系のイベントハンドラーを登録する\r\n     * 特にライブ視聴ではここで適切に再生状態の管理 (再生可能かどうか、エラーが発生していないかなど) を行う必要がある\r\n     */\r\n    private setupVideoPlaybackHandler(): void {\r\n        assert(this.player !== null);\r\n        const channels_store = useChannelsStore();\r\n        const player_store = usePlayerStore();\r\n\r\n        // ライブ視聴: 再生停止状態かつ現在の再生位置からバッファが 30 秒以上離れていないかを 60 秒おきに監視し、そうなっていたら強制的にシークする\r\n        // mpegts.js の仕様上、MSE 側に未再生のバッファが貯まり過ぎると新規に SourceBuffer が追加できなくなるため、強制的に接続が切断されてしまう\r\n        // 再生停止状態でも定期的にシークすることで、バッファが貯まりすぎないように調節する\r\n        if (this.playback_mode === 'Live') {\r\n            this.live_force_seek_interval_timer_id = window.setInterval(() => {\r\n                if (this.player === null) return;\r\n                if ((this.player.video.paused && this.player.video.buffered.length >= 1) &&\r\n                    (this.player.video.buffered.end(0) - this.player.video.currentTime > 30)) {\r\n                    this.player.sync();\r\n                }\r\n            }, 60 * 1000);\r\n        }\r\n\r\n        // 再生/停止されたときのイベント\r\n        // デバイスの通知バーからの制御など、ブラウザの画面以外から動画の再生/停止が行われる事もあるため必要\r\n        const on_play_or_pause = () => {\r\n            if (this.player === null) return;\r\n            player_store.is_video_paused = this.player.video.paused;\r\n            // 停止された場合、ロード中でなければ Progress Circular を非表示にする\r\n            if (this.player.video.paused === true && player_store.is_loading === false) {\r\n                player_store.is_video_buffering = false;\r\n            }\r\n            // まだ設定パネルが表示されていたら非表示にする\r\n            this.player.setting.hide();\r\n            // プレイヤーのコントロール UI を表示する\r\n            this.handlePlayerControlUIVisibility();\r\n        };\r\n        this.player.on('play', on_play_or_pause);\r\n        this.player.on('pause', on_play_or_pause);\r\n\r\n        // 再生が一時的に止まってバッファリングしているとき/再び再生されはじめたときのイベント\r\n        // バッファリングの Progress Circular の表示を制御する\r\n        this.player.on('waiting', () => {\r\n            // Progress Circular を表示する\r\n            player_store.is_video_buffering = true;\r\n        });\r\n        this.player.on('playing', () => {\r\n            // ロード中 (映像が表示されていない) でなければ Progress Circular を非表示にする\r\n            if (player_store.is_loading === false) {\r\n                player_store.is_video_buffering = false;\r\n            }\r\n            // 再生が開始できていない場合に再生状態の復旧を試みる\r\n            this.recoverPlayback();\r\n        });\r\n\r\n        // 今回 (DPlayer 初期化直後) と画質切り替え開始時の両方のタイミングで実行する必要がある処理\r\n        // mpegts.js などの DPlayer のプラグインは画質切り替え時に一旦破棄されるため、再度イベントハンドラーを登録する必要がある\r\n        const on_init_or_quality_change = async () => {\r\n            assert(this.player !== null);\r\n\r\n            // ローディング中の背景画像をランダムに変更\r\n            player_store.background_url = PlayerUtils.generatePlayerBackgroundURL();\r\n\r\n            // 実装上画質切り替え後にそのまま対応できない PlayerManager (LiveDataBroadcastingManager など) をここで再起動する\r\n            // 初回実行時はそもそもまだ PlayerManager が一つも初期化されていないので、何も起こらない\r\n            for (const player_manager of this.player_managers) {\r\n                if (player_manager.restart_required_when_quality_switched === true) {\r\n                    await player_manager.destroy();\r\n                    await player_manager.init();\r\n                }\r\n            }\r\n\r\n            // ライブ視聴時のみ\r\n            if (this.playback_mode === 'Live') {\r\n\r\n                // mpegts.js のエラーログハンドラーを登録\r\n                // 再生中に mpegts.js 内部でエラーが発生した際 (例: デバイスの通信が一時的に切断され、API からのストリーミングが途切れた際) に呼び出される\r\n                // このエラーハンドラーでエラーをキャッチして、PlayerWrapper の再起動を要求する\r\n                // PlayerWrapper 内部なので直接再起動してもいいのだが、PlayerWrapper を再起動させる処理は共通化しておきたい\r\n                this.player.plugins.mpegts?.on(mpegts.Events.ERROR, async (error_type: string, detail: string) => {\r\n\r\n                    // DPlayer がすでに破棄されている場合は何もしない\r\n                    if (this.player === null) {\r\n                        return;\r\n                    }\r\n\r\n                    // すぐ再起動すると問題があるケースがあるので、少し待機する\r\n                    await Utils.sleep(1);\r\n\r\n                    // もしこの時点でオフラインの場合、ネットワーク接続の変更による接続切断の可能性が高いので、オンラインになるまで待機する\r\n                    if (navigator.onLine === false) {\r\n                        this.player.notice('現在ネットワーク接続がありません。オンラインになるまで待機しています…', undefined, undefined, '#FF6F6A');\r\n                        console.warn('\\u001b[31m[PlayerWrapper] mpegts.js error event: Network error. Waiting for online...');\r\n                        await Utils.waitUntilOnline();\r\n                    }\r\n\r\n                    // PlayerWrapper の再起動を要求する\r\n                    console.error('\\u001b[31m[PlayerWrapper] mpegts.js error event:', error_type, detail);\r\n                    player_store.event_emitter.emit('PlayerRestartRequired', {\r\n                        message: `再生中にエラーが発生しました。(${error_type}: ${detail}) プレイヤーロジックを再起動しています…`,\r\n                    });\r\n                });\r\n\r\n                // HTMLVideoElement ネイティブの再生時エラーのイベントハンドラーを登録\r\n                // mpegts.js が予期せずクラッシュした場合など、意図せず発生してしまうことがある\r\n                // Offline 以外であれば PlayerWrapper の再起動を要求する\r\n                this.player.on('error', async (event: MediaError) => {\r\n\r\n                    // DPlayer がすでに破棄されているか、現在ライブストリームが Offline であれば何もしない\r\n                    if (this.player === null || player_store.live_stream_status === 'Offline') {\r\n                        return;\r\n                    }\r\n\r\n                    // すぐ再起動すると問題があるケースがあるので、少し待機する\r\n                    await Utils.sleep(1);\r\n\r\n                    // MediaError オブジェクトは場合によっては存在しないことがあるらしい…\r\n                    // 存在しない場合は unknown error として扱う\r\n                    if (this.player.video.error) {\r\n                        console.error('\\u001b[31m[PlayerWrapper] HTMLVideoElement error event:', this.player.video.error);\r\n                        player_store.event_emitter.emit('PlayerRestartRequired', {\r\n                            message: `再生中にエラーが発生しました。(Native: ${this.player.video.error.code}: ${this.player.video.error.message}) プレイヤーロジックを再起動しています…`,\r\n                        });\r\n                    } else {\r\n                        player_store.event_emitter.emit('PlayerRestartRequired', {\r\n                            message: '再生中にエラーが発生しました。(Native: unknown error) プレイヤーロジックを再起動しています…',\r\n                        });\r\n                    }\r\n                });\r\n\r\n                // 必ず最初はローディング状態とする\r\n                player_store.is_loading = true;\r\n\r\n                // 一旦音量をミュートする\r\n                this.player.video.muted = true;\r\n\r\n                // 再生準備ができた段階で再生バッファを調整し、再生準備ができた段階でローディング中の背景画像を非表示にするイベントハンドラーを登録\r\n                let on_canplay_called = false;\r\n                const on_canplay = async () => {\r\n\r\n                    // 重複実行を回避する\r\n                    if (this.player === null) return;\r\n                    if (on_canplay_called === true) return;\r\n                    this.player.video.oncanplaythrough = null;\r\n                    on_canplay_called = true;\r\n\r\n                    // 再生バッファ調整のため、一旦停止させる\r\n                    // this.player.video.pause() を使うとプレイヤーの UI アイコンが停止してしまうので、代わりに playbackRate を使う\r\n                    console.log('\\u001b[31m[PlayerWrapper] buffering...');\r\n                    this.player.video.playbackRate = 0;\r\n\r\n                    // 再生バッファが live_playback_buffer_seconds を超えるまで 0.1 秒おきに再生バッファをチェックする\r\n                    // 再生バッファが live_playback_buffer_seconds を切ると再生が途切れやすくなるので (特に動きの激しい映像)、\r\n                    // 再生開始までの時間を若干犠牲にして、再生バッファの調整と同期に時間を割く\r\n                    // live_playback_buffer_seconds の値は mpegts.js の liveSyncTargetLatency 設定に渡す値と共通\r\n                    let current_playback_buffer_sec = this.getPlaybackBufferSeconds();\r\n                    while (current_playback_buffer_sec < this.live_playback_buffer_seconds) {\r\n                        await Utils.sleep(0.1);\r\n                        current_playback_buffer_sec = this.getPlaybackBufferSeconds();\r\n                    }\r\n\r\n                    // 再生バッファ調整のため一旦停止していた再生を再び開始\r\n                    this.player.video.playbackRate = 1;\r\n                    console.log('\\u001b[31m[PlayerWrapper] buffering completed.');\r\n\r\n                    // ローディング状態を解除し、映像を表示する\r\n                    player_store.is_loading = false;\r\n\r\n                    // バッファリング中の Progress Circular を非表示にする\r\n                    player_store.is_video_buffering = false;\r\n\r\n                    // この時点で再生が開始できていない場合、再生状態の復旧を試みる\r\n                    this.recoverPlayback();\r\n\r\n                    if (channels_store.channel.current.is_radiochannel === true) {\r\n                        // ラジオチャンネルでは引き続き映像の代わりとしてローディング中の背景画像を表示し続ける\r\n                        player_store.is_background_display = true;\r\n                    } else {\r\n                        // ローディング中の背景画像をフェードアウト\r\n                        player_store.is_background_display = false;\r\n                    }\r\n\r\n                    // 再生開始時に音量を徐々に上げる\r\n                    // いきなり再生されるよりも体験が良い\r\n                    // ミュートを解除した上で即座に音量を 0 に設定し、そこから徐々に上げていく\r\n                    this.player.video.muted = false;\r\n                    this.player.video.volume = 0;\r\n                    const current_volume = this.player.user.get('volume');\r\n                    while ((this.player.video.volume + 0.05) < current_volume) {\r\n                        // 小数第2位以下を切り捨てて、浮動小数の誤差で 1 (100%) を微妙に超えてしまいエラーになるのを避ける\r\n                        this.player.video.volume = Utils.mathFloor(this.player.video.volume + 0.05, 2);\r\n                        await Utils.sleep(0.02);\r\n                    }\r\n                    this.player.video.volume = current_volume;\r\n                };\r\n                this.player.video.oncanplaythrough = on_canplay;\r\n\r\n                // 万が一 canplaythrough が発火しなかった場合のための処理\r\n                // 非同期で 0.05 秒おきに直接 readyState === HAVE_ENOUGH_DATA かどうかを確認する\r\n                // この処理は先に canplaythrough が発火した場合は実行されない\r\n                (async () => {\r\n                    while (this.player !== null && this.player.video.readyState < 4) {\r\n                        await Utils.sleep(0.05);\r\n                    }\r\n                    // さらに 0.1 秒待ってから実行\r\n                    await Utils.sleep(0.1);\r\n                    if (on_canplay_called === false) {\r\n                        console.warn('\\u001b[31m[PlayerWrapper] canplaythrough event not fired. trying to recover.');\r\n                        on_canplay();\r\n                    }\r\n                })();\r\n\r\n                // もしライブストリームのステータスが ONAir にも関わらず 15 秒以上バッファリング中で canplaythrough が発火しない場合、\r\n                // ロードに失敗したとみなし PlayerWrapper の再起動を要求する\r\n                await Utils.sleep(15);\r\n                if (player_store.live_stream_status === 'ONAir' && player_store.is_video_buffering === true && on_canplay_called === false) {\r\n                    player_store.event_emitter.emit('PlayerRestartRequired', {\r\n                        message: '再生開始までに時間が掛かっています。プレイヤーロジックを再起動しています…',\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        // 初回実行\r\n        on_init_or_quality_change();\r\n\r\n        // 画質切り替え開始時のイベント\r\n        this.player.on('quality_start', on_init_or_quality_change);\r\n\r\n        // 動画の統計情報の表示/非表示を切り替える隠しコマンドのイベントハンドラーを登録\r\n        // iOS / iPadOS Safari では DPlayer 側の contextmenu が長押ししても発火しないため、代替の表示手段として用意\r\n        // 番組情報タブ内の NEXT >> を 500ms 以内に3回連続でタップすると統計情報の表示/非表示が切り替わる\r\n        let tap_count = 0;\r\n        let last_tap = 0;\r\n        document.querySelector<HTMLDivElement>('.program-info__next')!.addEventListener('touchstart', () => {\r\n            if (this.player === null) return;\r\n            const current_time = new Date().getTime();\r\n            const time_difference = current_time - last_tap;\r\n            if (time_difference < 500 && time_difference > 0) {\r\n                tap_count++;\r\n                if (tap_count === 3) {\r\n                    this.player.infoPanel.toggle();\r\n                    tap_count = 0;\r\n                }\r\n            }\r\n            last_tap = current_time;\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * DPlayer のフルスクリーン関係のメソッドを無理やり上書きし、KonomiTV の UI と統合する\r\n     * 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/master/src/ts/fullscreen.ts にある\r\n     */\r\n    private setupFullscreenHandler(): void {\r\n        assert(this.player !== null);\r\n        const player_store = usePlayerStore();\r\n\r\n        // フルスクリーンにするコンテナ要素 (ページ全体)\r\n        const fullscreen_container = document.querySelector('.v-application')!;\r\n\r\n        // フルスクリーンかどうか\r\n        this.player.fullScreen.isFullScreen = (type?: DPlayerType.FullscreenType) => {\r\n            return !!(document.fullscreenElement || document.webkitFullscreenElement);\r\n        };\r\n\r\n        // フルスクリーンをリクエスト\r\n        this.player.fullScreen.request = (type?: DPlayerType.FullscreenType) => {\r\n            assert(this.player !== null);\r\n            // すでにフルスクリーンだったらキャンセルする\r\n            if (this.player.fullScreen.isFullScreen()) {\r\n                this.player.fullScreen.cancel();\r\n                return;\r\n            }\r\n            // フルスクリーンをリクエスト\r\n            // Safari は webkit のベンダープレフィックスが必要\r\n            fullscreen_container.requestFullscreen = fullscreen_container.requestFullscreen || fullscreen_container.webkitRequestFullscreen;\r\n            if (fullscreen_container.requestFullscreen) {\r\n                fullscreen_container.requestFullscreen();\r\n            } else {\r\n                // フルスクリーンがサポートされていない場合はエラーを表示\r\n                this.player.notice('iPhone Safari は動画のフルスクリーン表示に対応していません。', undefined, undefined, '#FF6F6A');\r\n                return;\r\n            }\r\n            // 画面の向きを横に固定 (Screen Orientation API がサポートされている場合)\r\n            if (screen.orientation) {\r\n                screen.orientation.lock('landscape').catch(() => {});\r\n            }\r\n        };\r\n\r\n        // フルスクリーンをキャンセル\r\n        this.player.fullScreen.cancel = (type?: DPlayerType.FullscreenType) => {\r\n            // フルスクリーンを終了\r\n            // Safari は webkit のベンダープレフィックスが必要\r\n            document.exitFullscreen = document.exitFullscreen || document.webkitExitFullscreen;\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            }\r\n            // 画面の向きの固定を解除\r\n            if (screen.orientation) {\r\n                screen.orientation.unlock();\r\n            }\r\n        };\r\n\r\n        // フルスクリーン状態が変化した時のイベントハンドラーを登録\r\n        // 複数のイベントを重複登録しないよう、あえて onfullscreenchange を使う\r\n        const fullscreen_handler = () => {\r\n            assert(this.player !== null);\r\n            player_store.is_fullscreen = this.player.fullScreen.isFullScreen() === true;\r\n        };\r\n        if (fullscreen_container.onfullscreenchange !== undefined) {\r\n            fullscreen_container.onfullscreenchange = fullscreen_handler;\r\n        } else if (fullscreen_container.onwebkitfullscreenchange !== undefined) {\r\n            fullscreen_container.onwebkitfullscreenchange = fullscreen_handler;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * DPlayer の設定パネルを無理やり拡張し、KonomiTV 独自の項目を追加する\r\n     */\r\n    private setupSettingPanelHandler(): void {\r\n        assert(this.player !== null);\r\n        const player_store = usePlayerStore();\r\n\r\n        // 設定パネルにショートカット一覧を表示するボタンを動的に追加する\r\n        // スマホなどのタッチデバイスでは基本キーボードが使えないため、タッチデバイスの場合はボタンを表示しない\r\n        if (Utils.isTouchDevice() === false) {\r\n            this.player.template.settingOriginPanel.insertAdjacentHTML('beforeend', `\r\n            <div class=\"dplayer-setting-item dplayer-setting-keyboard-shortcut\">\r\n                <span class=\"dplayer-label\">キーボードショートカット</span>\r\n                <div class=\"dplayer-toggle\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\">\r\n                        <path d=\"M22 16l-10.105-10.6-1.895 1.987 8.211 8.613-8.211 8.612 1.895 1.988 8.211-8.613z\"></path>\r\n                    </svg>\r\n                </div>\r\n            </div>`);\r\n\r\n            // ショートカット一覧モーダルを表示するボタンがクリックされたときのイベントハンドラーを登録\r\n            this.player.template.settingOriginPanel.querySelector('.dplayer-setting-keyboard-shortcut')!.addEventListener('click', () => {\r\n                assert(this.player !== null);\r\n                // 設定パネルを閉じる\r\n                this.player.setting.hide();\r\n                // ショートカットキー一覧モーダルを表示する\r\n                player_store.shortcut_key_modal = true;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * KonomiTV 本体の UI を含むプレイヤー全体のコンテナ要素がリサイズされたときのイベントハンドラーを登録する\r\n     */\r\n    private setupPlayerContainerResizeHandler(): void {\r\n\r\n        // 監視対象のプレイヤー全体のコンテナ要素\r\n        const player_container_element = document.querySelector('.watch-player')!;\r\n\r\n        // プレイヤー全体のコンテナ要素がリサイズされた際に発火するイベント\r\n        const resize_handler = () => {\r\n\r\n            // コメント描画領域の要素\r\n            if (this.player === null) return;\r\n            const comment_area_element = this.player.danmaku!.container;\r\n\r\n            // コメント描画領域の幅から算出した、映像の要素の幅/高さ (px)\r\n            // 実際の映像の要素の幅は BML ブラウザの ShadowDOM 内に入ると正確な算出ができないため、代わりにコメント描画領域の幅を使って算出する\r\n            const video_element_width = comment_area_element.clientWidth;\r\n            const video_element_height = comment_area_element.clientWidth * (9 / 16);\r\n\r\n            // プレイヤー全体と映像の高さの差（レターボックス）から、コメント描画領域の高さを狭める必要があるかを判定する\r\n            // 2で割っているのは単体の差を測るため\r\n            if (player_container_element === null || player_container_element.clientHeight === null) return;\r\n            const letter_box_height = (player_container_element.clientHeight - video_element_height) / 2;\r\n\r\n            // コメント描画領域の高さがしきい値より小さい場合、コメント描画領域のアスペクト比を狭める\r\n            // しきい値はデバイスの画面サイズや向きによって異なる\r\n            // スマホ縦画面ではコメント描画領域を狭める必要がある上部のヘッダーがないため、しきい値を 0 にする\r\n            const threshold = Utils.isSmartphoneVertical() ? 0 : Utils.isSmartphoneHorizontal() ? 50 : 66;\r\n            if (letter_box_height < threshold) {\r\n\r\n                // コメント描画領域に必要な上下マージン\r\n                const comment_area_vertical_margin = (threshold - letter_box_height) * 2;\r\n\r\n                // 狭めるコメント描画領域の幅\r\n                // 映像の要素の幅をそのまま利用する\r\n                const comment_area_width = video_element_width;\r\n\r\n                // 狭めるコメント描画領域の高さ\r\n                const comment_area_height = video_element_height - comment_area_vertical_margin;\r\n\r\n                // 狭めるコメント描画領域のアスペクト比を求める\r\n                // https://tech.arc-one.jp/asepct-ratio/\r\n                const gcd = (x: number, y: number) => {  // 最大公約数を求める関数\r\n                    if (y === 0) return x;\r\n                    return gcd(y, x % y);\r\n                };\r\n                // 幅と高さの最大公約数を求める\r\n                const gcd_result = gcd(comment_area_width, comment_area_height);\r\n                // 幅と高さをそれぞれ最大公約数で割ってアスペクト比を算出\r\n                const comment_area_height_aspect = `${comment_area_width / gcd_result} / ${comment_area_height / gcd_result}`;\r\n\r\n                // 一時的に transition を無効化する\r\n                // アスペクト比の設定は連続して行われるが、その際に transition が適用されるとワンテンポ遅れたアニメーションになってしまう\r\n                comment_area_element.style.transition = 'none';\r\n\r\n                // コメント描画領域に算出したアスペクト比を設定する\r\n                comment_area_element.style.setProperty('--comment-area-aspect-ratio', comment_area_height_aspect);\r\n\r\n                // コメント描画領域に必要な上下マージンを設定する\r\n                comment_area_element.style.setProperty('--comment-area-vertical-margin', `${comment_area_vertical_margin}px`);\r\n\r\n                // 0.2秒後に再び transition を有効化する\r\n                // 0.2秒より前にもう一度リサイズイベントが来た場合はタイマーがクリアされるため実行されない\r\n                window.setTimeout(() => comment_area_element.style.transition = '', 0.2 * 1000);\r\n\r\n            } else {\r\n\r\n                // コメント描画領域に設定したアスペクト比・上下マージンを削除する\r\n                comment_area_element.style.removeProperty('--comment-area-aspect-ratio');\r\n                comment_area_element.style.removeProperty('--comment-area-vertical-margin');\r\n            }\r\n        };\r\n\r\n        // 初回実行\r\n        resize_handler();\r\n\r\n        // 要素の監視を開始\r\n        this.player_container_resize_observer = new ResizeObserver(resize_handler);\r\n        this.player_container_resize_observer.observe(player_container_element);\r\n    }\r\n\r\n\r\n    /**\r\n     * マウスが動いたりタップされた時に実行するタイマー関数\r\n     * 一定の条件に基づいてプレイヤーのコントロール UI の表示状態を切り替える\r\n     * 3秒間何も操作がなければプレイヤーのコントロール UI を非表示にする\r\n     * 本来は View 側に実装すべきだが、プレイヤー側のロジックとも密接に関連しているため PlayerWrapper に実装した\r\n     * @param event マウスやタッチイベント (手動実行する際は null を渡すか省略する)\r\n     * @param is_player_region_event プレイヤー画面の中で発火したイベントなら true に設定する\r\n     */\r\n    public handlePlayerControlUIVisibility(event: Event | null = null, is_player_region_event: boolean = false): void {\r\n\r\n        // タッチデバイスで mousemove 、あるいはタッチデバイス以外で touchmove か click が発火した時は実行じない\r\n        if (Utils.isTouchDevice() === true  && event !== null && (event.type === 'mousemove')) return;\r\n        if (Utils.isTouchDevice() === false && event !== null && (event.type === 'touchmove' || event.type === 'click')) return;\r\n\r\n        // 以前セットされたタイマーを止める\r\n        window.clearTimeout(this.player_control_ui_hide_timer_id);\r\n\r\n        const player_store = usePlayerStore();\r\n\r\n        // 実行された際にプレイヤーのコントロール UI を非表示にするタイマー関数 (setTimeout に渡すコールバック関数)\r\n        const player_control_ui_hide_timer = () => {\r\n\r\n            // 万が一実行されたタイミングですでに DPlayer が破棄されていたら何もしない\r\n            if (this.player === null) return;\r\n\r\n            // コメント入力フォームが表示されているときは実行しない\r\n            // タイマーを掛け直してから抜ける\r\n            if (this.player.template.controller.classList.contains('dplayer-controller-comment')) {\r\n                this.player_control_ui_hide_timer_id = window.setTimeout(player_control_ui_hide_timer, 3 * 1000);  // 3秒後に再実行\r\n                return;\r\n            }\r\n\r\n            // コントロールを非表示にする\r\n            player_store.is_control_display = false;\r\n\r\n            // プレイヤーのコントロールと設定パネルを非表示にする\r\n            this.player.controller.hide();\r\n            this.player.setting.hide();\r\n        };\r\n\r\n        // 万が一実行されたタイミングですでに DPlayer が破棄されていたら何もしない\r\n        if (this.player === null) return;\r\n\r\n        // タッチデバイスかつプレイヤー画面の中がタップされたとき\r\n        if (Utils.isTouchDevice() === true && is_player_region_event === true) {\r\n\r\n            // DPlayer 側のコントロール UI の表示状態に合わせる\r\n            if (this.player.controller.isShow()) {\r\n\r\n                // コントロールを表示する\r\n                player_store.is_control_display = true;\r\n\r\n                // プレイヤーのコントロールを表示する\r\n                this.player.controller.show();\r\n\r\n                // 3秒間何も操作がなければコントロールを非表示にする\r\n                // 3秒間の間一度でもタッチされればタイマーが解除されてやり直しになる\r\n                this.player_control_ui_hide_timer_id = window.setTimeout(player_control_ui_hide_timer, 3 * 1000);\r\n\r\n            } else {\r\n\r\n                // コントロール UI を非表示にする\r\n                player_store.is_control_display = false;\r\n\r\n                // DPlayer 側のコントロール UI と設定パネルを非表示にする\r\n                this.player.controller.hide();\r\n                this.player.setting.hide();\r\n            }\r\n\r\n        // それ以外の画面がクリックされたとき\r\n        } else {\r\n\r\n            // コントロール UI を表示する\r\n            player_store.is_control_display = true;\r\n\r\n            // DPlayer 側のコントロール UI を表示する\r\n            this.player.controller.show();\r\n\r\n            // 3秒間何も操作がなければコントロールを非表示にする\r\n            // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\r\n            this.player_control_ui_hide_timer_id = window.setTimeout(player_control_ui_hide_timer, 3 * 1000);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * DPlayer と PlayerManager を破棄し、再生を終了する\r\n     * 常に init() で作成したものが destroy() ですべてクリーンアップされるように実装すべき\r\n     * PlayerWrapper の再起動を行う場合、基本外部から直接 await destroy() と await init() は呼び出さず、代わりに\r\n     * player_store.event_emitter.emit('PlayerRestartRequired', 'プレイヤーロジックを再起動しています…') のようにイベントを発火させるべき\r\n     */\r\n    public async destroy(): Promise<void> {\r\n        const player_store = usePlayerStore();\r\n\r\n        // すでに破棄されているのに再度実行してはならない\r\n        if (this.destroyed === true) {\r\n            return;\r\n        }\r\n\r\n        // すでに破棄中なら何もしない\r\n        if (this.destroying === true) {\r\n            return;\r\n        }\r\n        this.destroying = true;\r\n\r\n        console.log('\\u001b[31m[PlayerWrapper] Destroying...');\r\n\r\n        // 登録されている PlayerManager をすべて破棄\r\n        // CSS アニメーションの関係上、ローディング状態にする前に破棄する必要がある (特に LiveDataBroadcastingManager)\r\n        // 同期処理すると時間が掛かるので、並行して実行する\r\n        await Promise.all(this.player_managers.map(async (player_manager) => player_manager.destroy()));\r\n        this.player_managers = [];\r\n\r\n        // ローディング中の背景画像を隠す\r\n        player_store.is_background_display = false;\r\n\r\n        // 再びローディング状態にする\r\n        player_store.is_loading = true;\r\n\r\n        // ローディング状態への移行に伴い、映像がフェードアウトするアニメーション (0.2秒) 分待ってから実行\r\n        // この 0.2 秒の間に音量をフェードアウトさせる\r\n        // なお、ザッピングでチャンネルを連続で切り替えている場合は実行しない (実行しても意味がないため)\r\n        if (this.player !== null) {\r\n            const current_volume = this.player.user.get('volume');\r\n            // 20回 (0.01秒おき) に分けて音量を下げる\r\n            for (let i = 0; i < 20; i++) {\r\n                await Utils.sleep(0.01);\r\n                if (this.player && this.player.video) {  // この行がないとタイミングによってはエラーになる\r\n                    this.player.video.volume = current_volume * (1 - (i + 1) / 20);\r\n                }\r\n            }\r\n        }\r\n\r\n        // タイマーを破棄\r\n        window.clearInterval(this.live_force_seek_interval_timer_id);\r\n        window.clearTimeout(this.player_control_ui_hide_timer_id);\r\n\r\n        // プレイヤー全体のコンテナ要素の監視を停止\r\n        if (this.player_container_resize_observer !== null) {\r\n            this.player_container_resize_observer.disconnect();\r\n            this.player_container_resize_observer = null;\r\n        }\r\n\r\n        // DPlayer 本体を破棄\r\n        // なぜか例外が出ることがあるので try-catch で囲む\r\n        if (this.player !== null) {\r\n            // プレイヤーの破棄を実行する前に、DPlayer 側に登録された HTMLVideoElement の error イベントハンドラーを全て削除\r\n            // Safari のみ、削除しておかないと「動画の読み込みに失敗しました」というエラーが発生する\r\n            if (this.player.events.events['error']) {\r\n                this.player.events.events['error'] = [];\r\n            }\r\n            // 通常 this.player.destroy() が実行された後 mpegts.js も自動的に破棄されるのだが、Safari のみ\r\n            // なぜか video.src = '' を実行した後に mpegts.js を破棄するとエラーというか挙動不審になるので、\r\n            // あえて mpegts.js を明示的に先に破棄しておいて Safari の地雷を回避する\r\n            if (this.player.plugins.mpegts) {\r\n                try {\r\n                    this.player.plugins.mpegts.unload();\r\n                    this.player.plugins.mpegts.detachMediaElement();\r\n                    this.player.plugins.mpegts.destroy();\r\n                } catch (e) {\r\n                    // 何もしない\r\n                }\r\n            }\r\n            // 引数に true を指定して、破棄後も DPlayer 側の HTML 要素を保持する\r\n            // これにより、チャンネルを切り替えるなどして再度初期化されるまでの僅かな間もプレイヤーのコントロール UI が表示される (動作はしない)\r\n            // ここで HTML 要素を削除してしまうと、プレイヤーのコントロール UI が一瞬削除されることでちらつきが発生して見栄えが悪い\r\n            // HTML 要素を保持する分、破棄中に描画されていたコメントも残ってしまうので、破棄前にコメントを全て削除する\r\n            this.player.danmaku!.clear();\r\n            try {\r\n                this.player.destroy(true);\r\n            } catch (e) {\r\n                // 何もしない\r\n            }\r\n            this.player = null;\r\n        }\r\n\r\n        // 破棄済みかどうかのフラグを立てる\r\n        this.destroying = false;\r\n        this.destroyed = true;\r\n\r\n        console.log('\\u001b[31m[PlayerWrapper] Destroyed.');\r\n    }\r\n}\r\n\r\nexport default PlayerWrapper;\r\n","<template>\r\n    <div class=\"route-container\">\r\n        <main class=\"watch-container\" :class=\"{\r\n                'watch-container--control-display': playerStore.is_control_display,\r\n                'watch-container--panel-display': Utils.isSmartphoneVertical() || Utils.isTabletVertical() ? true : is_panel_display,\r\n                'watch-container--fullscreen': playerStore.is_fullscreen,\r\n            }\">\r\n            <nav class=\"watch-navigation\"\r\n                 @mousemove=\"($event) => player_wrapper?.handlePlayerControlUIVisibility($event)\"\r\n                 @touchmove=\"($event) => player_wrapper?.handlePlayerControlUIVisibility($event)\"\r\n                 @click=\"($event) => player_wrapper?.handlePlayerControlUIVisibility($event)\">\r\n                <router-link v-ripple class=\"watch-navigation__icon\" to=\"/tv/\">\r\n                    <img class=\"watch-navigation__icon-image\" src=\"/assets/images/icon.svg\" width=\"23px\">\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'テレビをみる'\" to=\"/tv/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:tv-20-regular\" width=\"26px\" />\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'ビデオをみる'\"  to=\"/videos/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:movies-and-tv-20-regular\" width=\"26px\" />\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'番組表'\" to=\"/timetable/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:calendar-ltr-20-regular\" width=\"26px\" />\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'録画予約'\" to=\"/reserves/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:timer-16-regular\" width=\"26px\" style=\"padding: 0.5px;\"/>\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'マイリスト'\" to=\"/mylist/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"ic:round-playlist-play\" width=\"26px\" />\r\n                </router-link>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'キャプチャ'\" to=\"/captures/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:image-multiple-24-regular\" width=\"26px\" />\r\n                </router-link>\r\n                <v-spacer></v-spacer>\r\n                <router-link v-ripple class=\"watch-navigation__link\" active-class=\"watch-navigation__link--active\"\r\n                             v-tooltip.right=\"'設定'\" to=\"/settings/\">\r\n                    <Icon class=\"watch-navigation__link-icon\" icon=\"fluent:settings-20-regular\" width=\"26px\" />\r\n                </router-link>\r\n            </nav>\r\n            <div class=\"watch-content\"\r\n                 @mousemove=\"($event) => player_wrapper?.handlePlayerControlUIVisibility($event, true)\"\r\n                 @touchmove=\"($event) => player_wrapper?.handlePlayerControlUIVisibility($event, true)\"\r\n                 @click=\"($event) => player_wrapper?.handlePlayerControlUIVisibility($event, true)\">\r\n                <header class=\"watch-header\">\r\n                    <router-link class=\"watch-header__back-icon\" v-ripple to=\"/tv/\">\r\n                        <Icon icon=\"fluent:arrow-left-12-filled\" width=\"25px\" />\r\n                    </router-link>\r\n                    <img class=\"watch-header__broadcaster\" :src=\"`${Utils.api_base_url}/channels/${(channelsStore.display_channel_id)}/logo`\">\r\n                    <span class=\"watch-header__program-title\"\r\n                        v-html=\"ProgramUtils.decorateProgramInfo(channelsStore.channel.current.program_present, 'title')\">\r\n                    </span>\r\n                    <span class=\"watch-header__program-time\">\r\n                        {{ProgramUtils.getProgramTime(channelsStore.channel.current.program_present, true)}}\r\n                    </span>\r\n                    <v-spacer></v-spacer>\r\n                    <span class=\"watch-header__now\">{{time}}</span>\r\n                </header>\r\n                <div class=\"watch-player\" :class=\"{\r\n                    'watch-player--loading': playerStore.is_loading,\r\n                    'watch-player--virtual-keyboard-display': playerStore.is_virtual_keyboard_display && Utils.hasActiveElementClass('dplayer-comment-input'),\r\n                }\">\r\n                    <div class=\"watch-player__background-wrapper\">\r\n                        <div class=\"watch-player__background\" :class=\"{'watch-player__background--display': playerStore.is_background_display}\"\r\n                            :style=\"{backgroundImage: `url(${playerStore.background_url})`}\">\r\n                            <img class=\"watch-player__background-logo\" src=\"/assets/images/logo.svg\">\r\n                        </div>\r\n                    </div>\r\n                    <v-progress-circular indeterminate size=\"60\" width=\"6\" class=\"watch-player__buffering\"\r\n                        :class=\"{'watch-player__buffering--display': playerStore.is_video_buffering && (playerStore.is_loading || playerStore.is_video_paused)}\">\r\n                    </v-progress-circular>\r\n                    <div class=\"watch-player__dplayer\"></div>\r\n                    <div class=\"watch-player__button\"\r\n                         @mousemove=\"($event) => player_wrapper?.handlePlayerControlUIVisibility($event)\"\r\n                         @touchmove=\"($event) => player_wrapper?.handlePlayerControlUIVisibility($event)\"\r\n                         @click=\"($event) => player_wrapper?.handlePlayerControlUIVisibility($event)\">\r\n                        <div v-ripple class=\"switch-button switch-button-up\" v-tooltip.top=\"'前のチャンネル'\"\r\n                            @click=\"is_zapping = true; $router.push({path: `/tv/watch2/${channelsStore.channel.previous.display_channel_id}`})\">\r\n                            <Icon class=\"switch-button-icon\" icon=\"fluent:ios-arrow-left-24-filled\" width=\"32px\" rotate=\"1\" />\r\n                        </div>\r\n                        <div v-ripple class=\"switch-button switch-button-panel switch-button-panel--open\"\r\n                            @click=\"is_panel_display = !is_panel_display\">\r\n                            <Icon class=\"switch-button-icon\" icon=\"fluent:navigation-16-filled\" width=\"32px\" />\r\n                        </div>\r\n                        <div v-ripple class=\"switch-button switch-button-down\" v-tooltip.bottom=\"'次のチャンネル'\"\r\n                             @click=\"is_zapping = true; $router.push({path: `/tv/watch2/${channelsStore.channel.next.display_channel_id}`})\">\r\n                            <Icon class=\"switch-button-icon\" icon=\"fluent:ios-arrow-right-24-filled\" width=\"33px\" rotate=\"1\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"watch-panel\"\r\n                 @mousemove=\"($event) => player_wrapper?.handlePlayerControlUIVisibility($event)\">\r\n                <div class=\"watch-panel__header\">\r\n                    <div v-ripple class=\"panel-close-button\" @click=\"is_panel_display = false\">\r\n                        <Icon class=\"panel-close-button__icon\" icon=\"akar-icons:chevron-right\" width=\"25px\" />\r\n                        <span class=\"panel-close-button__text\">閉じる</span>\r\n                    </div>\r\n                    <v-spacer></v-spacer>\r\n                    <div class=\"panel-broadcaster\">\r\n                        <img class=\"panel-broadcaster__icon\" :src=\"`${Utils.api_base_url}/channels/${(channelsStore.display_channel_id)}/logo`\">\r\n                        <div class=\"panel-broadcaster__number\">{{channelsStore.channel.current.channel_number}}</div>\r\n                        <div class=\"panel-broadcaster__name\">{{channelsStore.channel.current.name}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"watch-panel__content-container\">\r\n                    <Program class=\"watch-panel__content\"\r\n                        :class=\"{'watch-panel__content--active': tv_panel_active_tab === 'Program'}\" />\r\n                    <Channel class=\"watch-panel__content\"\r\n                        :class=\"{'watch-panel__content--active': tv_panel_active_tab === 'Channel'}\" />\r\n                    <Comment class=\"watch-panel__content\" :playback_mode=\"'Live'\"\r\n                        :class=\"{'watch-panel__content--active': tv_panel_active_tab === 'Comment'}\" />\r\n                    <Twitter class=\"watch-panel__content\" :playback_mode=\"'Live'\"\r\n                        :class=\"{'watch-panel__content--active': tv_panel_active_tab === 'Twitter'}\"\r\n                        @panel_folding_requested=\"is_panel_display = false\" />\r\n                    <button v-ripple class=\"watch-panel__content-remocon-button elevation-8\"\r\n                        :class=\"{'watch-panel__content-remocon-button--active': tv_panel_active_tab === 'Program' || tv_panel_active_tab === 'Channel'}\"\r\n                        @click=\"is_remocon_display = !is_remocon_display\">\r\n                        <Icon class=\"panel-close-button__icon\" icon=\"material-symbols:remote-gen\" width=\"25px\" />\r\n                    </button>\r\n                    <Remocon class=\"watch-panel__remocon\"\r\n                        :showing=\"(tv_panel_active_tab === 'Program' || tv_panel_active_tab === 'Channel') && is_remocon_display === true\"\r\n                        @close=\"is_remocon_display = false\" />\r\n                </div>\r\n                <div class=\"watch-panel__navigation\">\r\n                    <div v-ripple class=\"panel-navigation-button\"\r\n                         :class=\"{'panel-navigation-button--active': tv_panel_active_tab === 'Program'}\"\r\n                         @click=\"tv_panel_active_tab = 'Program'\">\r\n                        <Icon class=\"panel-navigation-button__icon\" icon=\"fa-solid:info-circle\" width=\"33px\" />\r\n                        <span class=\"panel-navigation-button__text\">番組情報</span>\r\n                    </div>\r\n                    <div v-ripple class=\"panel-navigation-button\"\r\n                         :class=\"{'panel-navigation-button--active': tv_panel_active_tab === 'Channel'}\"\r\n                         @click=\"tv_panel_active_tab = 'Channel'\">\r\n                        <Icon class=\"panel-navigation-button__icon\" icon=\"fa-solid:broadcast-tower\" width=\"34px\" />\r\n                        <span class=\"panel-navigation-button__text\">チャンネル</span>\r\n                    </div>\r\n                    <div v-ripple class=\"panel-navigation-button\"\r\n                         :class=\"{'panel-navigation-button--active': tv_panel_active_tab === 'Comment'}\"\r\n                         @click=\"tv_panel_active_tab = 'Comment'\">\r\n                        <Icon class=\"panel-navigation-button__icon\" icon=\"bi:chat-left-text-fill\" width=\"29px\" />\r\n                        <span class=\"panel-navigation-button__text\">コメント</span>\r\n                    </div>\r\n                    <div v-ripple class=\"panel-navigation-button\"\r\n                         :class=\"{'panel-navigation-button--active': tv_panel_active_tab === 'Twitter'}\"\r\n                         @click=\"tv_panel_active_tab = 'Twitter'\">\r\n                        <Icon class=\"panel-navigation-button__icon\" icon=\"fa-brands:twitter\" width=\"34px\" />\r\n                        <span class=\"panel-navigation-button__text\">Twitter</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n        <v-dialog max-width=\"1050\" transition=\"slide-y-transition\" v-model=\"playerStore.shortcut_key_modal\">\r\n            <v-card>\r\n                <v-card-title class=\"px-5 pt-4 pb-3 d-flex align-center font-weight-bold\">\r\n                    <Icon icon=\"fluent:keyboard-20-filled\" height=\"28px\" />\r\n                    <span class=\"ml-3\">キーボードショートカット</span>\r\n                    <v-spacer></v-spacer>\r\n                    <div v-ripple class=\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\" @click=\"playerStore.shortcut_key_modal = false\">\r\n                        <Icon icon=\"fluent:dismiss-12-filled\" width=\"23px\" height=\"23px\" />\r\n                    </div>\r\n                </v-card-title>\r\n                <div class=\"px-5 pb-4\">\r\n                    <v-row>\r\n                        <v-col cols=\"6\" v-for=\"(shortcut_key_column, shortcut_key_column_name) in shortcut_key_list\" :key=\"shortcut_key_column_name\">\r\n                            <div class=\"mt-3\" v-for=\"shortcut_keys in shortcut_key_column\" :key=\"shortcut_keys.name\">\r\n                                <div class=\"text-subtitle-1 d-flex align-center font-weight-bold\">\r\n                                    <Icon :icon=\"shortcut_keys.icon\" :height=\"shortcut_keys.icon_height\" />\r\n                                    <span class=\"ml-2\">{{shortcut_keys.name}}</span>\r\n                                </div>\r\n                                <div class=\"mt-3\" v-for=\"shortcut in shortcut_keys.shortcuts\" :key=\"shortcut.name\">\r\n                                    <div class=\"text-subtitle-2 mt-2 d-flex align-center font-weight-medium\">\r\n                                        <span class=\"mr-2\" v-html=\"shortcut.name\"></span>\r\n                                        <div class=\"ml-auto d-flex align-center flex-shrink-0\">\r\n                                            <div class=\"ml-auto d-flex align-center\" v-for=\"(key, index) in shortcut.keys\" :key=\"key.name\">\r\n                                                <span class=\"shortcut-key\">\r\n                                                    <Icon v-show=\"key.icon === true\" :icon=\"key_name\" height=\"18px\"\r\n                                                        v-for=\"key_name in key.name.split(';')\" :key=\"key_name\" />\r\n                                                    <span v-if=\"key.icon === false\" v-html=\"key.name\"></span>\r\n                                                </span>\r\n                                                <span class=\"shortcut-key-plus\" v-if=\"index < (shortcut.keys.length - 1)\">+</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </v-col>\r\n                    </v-row>\r\n                </div>\r\n            </v-card>\r\n        </v-dialog>\r\n        <BottomNavigation />\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\n\r\nimport { mapStores } from 'pinia';\r\nimport Vue from 'vue';\r\n\r\nimport BottomNavigation from '@/components/BottomNavigation.vue';\r\nimport Channel from '@/components/Panel/Channel.vue';\r\nimport Comment from '@/components/Panel/Comment2.vue';\r\nimport Program from '@/components/Panel/Program.vue';\r\nimport Remocon from '@/components/Panel/Remocon.vue';\r\nimport Twitter from '@/components/Panel/Twitter.vue';\r\nimport PlayerWrapper from '@/services/player/PlayerWrapper';\r\nimport useChannelsStore from '@/stores/ChannelsStore';\r\nimport usePlayerStore from '@/stores/PlayerStore';\r\nimport useSettingsStore from '@/stores/SettingsStore';\r\nimport Utils, { dayjs, ProgramUtils } from '@/utils';\r\n\r\nexport default Vue.extend({\r\n    name: 'TV-Watch',\r\n    components: {\r\n        BottomNavigation,\r\n        Channel,\r\n        Comment,\r\n        Program,\r\n        Remocon,\r\n        Twitter,\r\n    },\r\n    data() {\r\n        return {\r\n\r\n            // ユーティリティをテンプレートで使えるように\r\n            Utils: Utils,\r\n            ProgramUtils: ProgramUtils,\r\n\r\n            // 現在時刻\r\n            time: dayjs().format('YYYY/MM/DD HH:mm:ss'),\r\n\r\n            // 表示されるパネルのタブ\r\n            tv_panel_active_tab: useSettingsStore().settings.tv_panel_active_tab,\r\n\r\n            // パネルを表示するか\r\n            // panel_display_state が 'AlwaysDisplay' なら常に表示し、'AlwaysFold' なら常に折りたたむ\r\n            // 'RestorePreviousState' なら showed_panel_last_time の値を使い､前回の状態を復元する\r\n            is_panel_display: (() => {\r\n                const settings_store = useSettingsStore();\r\n                switch (settings_store.settings.panel_display_state) {\r\n                    case 'AlwaysDisplay':\r\n                        return true;\r\n                    case 'AlwaysFold':\r\n                        return false;\r\n                    case 'RestorePreviousState':\r\n                        return settings_store.settings.showed_panel_last_time;\r\n                }\r\n            })() as boolean,\r\n\r\n            // リモコンを表示するか\r\n            is_remocon_display: false,\r\n\r\n            // インターバル ID\r\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\r\n            // setInterval(), setTimeout() の返り値を登録する\r\n            interval_ids: [] as number[],\r\n\r\n            // ***** チャンネル *****\r\n\r\n            // ザッピング（「前/次のチャンネル」ボタン or 上下キーショートカット）によるチャンネル移動かどうか\r\n            is_zapping: false,\r\n\r\n            // ***** プレイヤー *****\r\n\r\n            // PlayerWrapper のインスタンス\r\n            player_wrapper: null as PlayerWrapper | null,\r\n\r\n            // ***** キーボードショートカット *****\r\n\r\n            // キーボードショートカットの一覧に表示するショートカットキーのリスト\r\n            shortcut_key_list: {\r\n                left_column: [\r\n                    {\r\n                        name: '全般',\r\n                        icon: 'fluent:home-20-filled',\r\n                        icon_height: '22px',\r\n                        shortcuts: [\r\n                            { name: '数字キー/テンキーに対応するリモコン番号 (1~12) の地デジチャンネルに切り替える', keys: [{name: '1~9, 0, -(=), ^(~)', icon: false}] },\r\n                            { name: '数字キー/テンキーに対応するリモコン番号 (1~12) の BS チャンネルに切り替える', keys: [{name: 'Shift', icon: false}, {name: '1~9, 0, -(=), ^(~)', icon: false}] },\r\n                            { name: '前のチャンネルに切り替える', keys: [{name: 'fluent:arrow-up-12-filled', icon: true}] },\r\n                            { name: '次のチャンネルに切り替える', keys: [{name: 'fluent:arrow-down-12-filled', icon: true}] },\r\n                            { name: 'キーボードショートカットの一覧を表示する', keys: [{name: '／(？)', icon: false}] },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'プレイヤー',\r\n                        icon: 'fluent:play-20-filled',\r\n                        icon_height: '20px',\r\n                        shortcuts: [\r\n                            { name: '再生 / 一時停止の切り替え', keys: [{name: 'Space', icon: false}] },\r\n                            { name: '再生 / 一時停止の切り替え (キャプチャタブ表示時)', keys: [{name: 'Shift', icon: false}, {name: 'Space', icon: false}] },\r\n                            { name: 'プレイヤーの音量を上げる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-up-12-filled', icon: true}] },\r\n                            { name: 'プレイヤーの音量を下げる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-down-12-filled', icon: true}] },\r\n                            { name: '停止して0.5秒早戻し', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-left-12-filled', icon: true}] },\r\n                            { name: '停止して0.5秒早送り', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-right-12-filled', icon: true}] },\r\n                            { name: 'フルスクリーンの切り替え', keys: [{name: 'F', icon: false}] },\r\n                            { name: 'ライブストリームの同期', keys: [{name: 'W', icon: false}] },\r\n                            { name: 'Picture-in-Picture の表示切り替え', keys: [{name: 'E', icon: false}] },\r\n                            { name: '字幕の表示切り替え', keys: [{name: 'S', icon: false}] },\r\n                            { name: 'コメントの表示切り替え', keys: [{name: 'D', icon: false}] },\r\n                            { name: '映像をキャプチャする', keys: [{name: 'C', icon: false}] },\r\n                            { name: '映像をコメントを付けてキャプチャする', keys: [{name: 'V', icon: false}] },\r\n                            { name: 'コメント入力フォームにフォーカスする', keys: [{name: 'M', icon: false}] },\r\n                            { name: 'コメント入力フォームを閉じる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'M', icon: false}] },\r\n                        ]\r\n                    },\r\n                ],\r\n                right_column: [\r\n                    {\r\n                        name: 'パネル',\r\n                        icon: 'fluent:panel-right-20-filled',\r\n                        icon_height: '24px',\r\n                        shortcuts: [\r\n                            { name: 'パネルの表示切り替え', keys: [{name: 'P', icon: false}] },\r\n                            { name: '番組情報タブを表示する', keys: [{name: 'K', icon: false}] },\r\n                            { name: 'チャンネルタブを表示する', keys: [{name: 'L', icon: false}] },\r\n                            { name: 'コメントタブを表示する', keys: [{name: '；(＋)', icon: false}] },\r\n                            { name: 'Twitter タブを表示する', keys: [{name: '：(＊)', icon: false}] },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Twitter',\r\n                        icon: 'fa-brands:twitter',\r\n                        icon_height: '22px',\r\n                        shortcuts: [\r\n                            { name: 'ツイート検索タブを表示する', keys: [{name: '［ (「)', icon: false}] },\r\n                            { name: 'タイムラインタブを表示する', keys: [{name: '］ (」)', icon: false}] },\r\n                            { name: 'キャプチャタブを表示する', keys: [{name: '＼(￥)', icon: false}] },\r\n                            { name: 'ツイート入力フォームにフォーカスを当てる/フォーカスを外す', keys: [{name: 'Tab', icon: false}] },\r\n                            { name: 'キャプチャにフォーカスする', keys: [{name: 'キャプチャタブを表示', icon: false}, {name: 'fluent:arrow-up-12-filled;fluent:arrow-down-12-filled;fluent:arrow-left-12-filled;fluent:arrow-right-12-filled', icon: true}] },\r\n                            { name: 'キャプチャを拡大表示する/<br>キャプチャの拡大表示を閉じる', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Enter', icon: false}] },\r\n                            { name: 'キャプチャを選択する/<br>キャプチャの選択を解除する', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Space', icon: false}] },\r\n                            { name: 'クリップボード内の画像を<br>キャプチャとして取り込む', keys: [{name: 'ツイート入力<br>フォームにフォーカス', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'V', icon: false}] },\r\n                            { name: 'ツイートを送信する', keys: [{name: 'Twitter タブを表示', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'Enter', icon: false}] },\r\n                        ]\r\n                    },\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    computed: {\r\n        // ChannelsStore / usePlayerStore / SettingsStore にアクセスできるようにする\r\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\r\n        ...mapStores(useChannelsStore, usePlayerStore, useSettingsStore),\r\n    },\r\n    // 開始時に実行\r\n    async created() {\r\n\r\n        // Virtual Keyboard API に対応している場合は、仮想キーボード周りの操作を自力で行うことをブラウザに伝える\r\n        // この視聴画面のみ\r\n        if ('virtualKeyboard' in navigator) {\r\n            navigator.virtualKeyboard.overlaysContent = true;\r\n            // 仮想キーボードが表示されたり閉じられたときのイベント\r\n            navigator.virtualKeyboard.ongeometrychange = (event) => {\r\n                if (event.target.boundingRect.width === 0 && event.target.boundingRect.height === 0) {\r\n                    this.playerStore.is_virtual_keyboard_display = false;\r\n                } else {\r\n                    this.playerStore.is_virtual_keyboard_display = true;\r\n                }\r\n            };\r\n        }\r\n\r\n        // チャンネル選局のキーボードショートカットを Alt or Option + 数字キー/テンキーに変更する設定が有効なら、\r\n        // キーボードショートカット一覧に反映する\r\n        if (this.settingsStore.settings.tv_channel_selection_requires_alt_key === true) {\r\n            this.shortcut_key_list.left_column[0].shortcuts[0].keys.unshift({name: Utils.AltOrOption(), icon: false});\r\n            this.shortcut_key_list.left_column[0].shortcuts[1].keys.unshift({name: Utils.AltOrOption(), icon: false});\r\n        }\r\n\r\n        // チャンネル ID をセット\r\n        this.channelsStore.display_channel_id = this.$route.params.display_channel_id;\r\n\r\n        // 再生セッションを初期化\r\n        this.init();\r\n    },\r\n    // 終了前に実行\r\n    beforeDestroy() {\r\n\r\n        // destroy() を実行\r\n        // 別のページへ遷移するため、DPlayer のインスタンスを確実に破棄する\r\n        // さもなければ、ブラウザがリロードされるまでバックグラウンドで永遠に再生され続けてしまう\r\n        // 不正な ID のため 404 ページに遷移されるときは実行しない\r\n        if (this.channelsStore.channel.current.display_channel_id !== 'gr999') {\r\n            this.destroy();\r\n        }\r\n\r\n        // このページから離れるので、チャンネル ID を gr000 (ダミー値) に戻す\r\n        this.channelsStore.display_channel_id = 'gr000';\r\n\r\n        // 仮想キーボード周りの操作をブラウザに戻す\r\n        if ('virtualKeyboard' in navigator) {\r\n            navigator.virtualKeyboard.overlaysContent = false;\r\n        }\r\n    },\r\n    // チャンネル切り替え時に実行\r\n    // コンポーネント（インスタンス）は再利用される\r\n    // ref: https://v3.router.vuejs.org/ja/guide/advanced/navigation-guards.html#%E3%83%AB%E3%83%BC%E3%83%88%E5%8D%98%E4%BD%8D%E3%82%AB%E3%82%99%E3%83%BC%E3%83%88%E3%82%99\r\n    beforeRouteUpdate(to, from, next) {\r\n\r\n        // 前の再生セッションを破棄して終了する\r\n        // このとき this.interval_ids に登録された setTimeout がキャンセルされるため、\r\n        // 後述の 0.5 秒の間にザッピングにより他のチャンネルに切り替えた場合は this.init() は実行されない\r\n        const destroy_promise = this.destroy();\r\n\r\n        // チャンネル ID を次のチャンネルのものに切り替える\r\n        this.channelsStore.display_channel_id = to.params.display_channel_id;\r\n\r\n        (async () => {\r\n\r\n            // ザッピング（「前/次のチャンネル」ボタン or 上下キーショートカット）によるチャンネル移動時のみ、\r\n            // 0.5秒だけ待ってから新しい再生セッションを初期化する\r\n            // 連続してチャンネルを切り替えた際に毎回再生処理を開始しないように猶予を設ける\r\n            if (this.is_zapping === true) {\r\n                this.is_zapping = false;\r\n                this.interval_ids.push(window.setTimeout(() => {\r\n                    destroy_promise.then(() => this.init());  // destroy() の実行完了を待ってから初期化する\r\n                }, 0.5 * 1000));\r\n\r\n            // 通常のチャンネル移動時は、すぐに再生セッションを初期化する\r\n            } else {\r\n                destroy_promise.then(() => this.init());  // destroy() の実行完了を待ってから初期化する\r\n            }\r\n        })();\r\n\r\n        // 次のルートに置き換え\r\n        next();\r\n    },\r\n    watch: {\r\n        // 前回視聴画面を開いた際にパネルが表示されていたかどうかを保存\r\n        is_panel_display() {\r\n            this.settingsStore.settings.showed_panel_last_time = this.is_panel_display;\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        // 再生セッションを初期化する\r\n        async init() {\r\n\r\n            // 現在時刻を1秒おきに更新\r\n            this.interval_ids.push(window.setInterval(() => this.time = dayjs().format('YYYY/MM/DD HH:mm:ss'), 1 * 1000));\r\n\r\n            // 00秒までの残り秒数を取得\r\n            // 現在 16:01:34 なら 26 (秒) になる\r\n            const residue_second = 60 - new Date().getSeconds();\r\n\r\n            // 00秒になるまで待ってから実行するタイマー\r\n            // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと番組情報の反映が遅れてしまう\r\n            this.interval_ids.push(window.setTimeout(() => {\r\n\r\n                // この時点で00秒なので、チャンネル情報を更新\r\n                this.channelsStore.update(true);\r\n\r\n                // 以降、30秒おきにチャンネル情報を更新\r\n                this.interval_ids.push(window.setInterval(() => {\r\n                    this.channelsStore.update(true);\r\n                }, 30 * 1000));\r\n\r\n            }, residue_second * 1000));\r\n\r\n            // チャンネル情報を更新 (初回)\r\n            await this.channelsStore.update();\r\n\r\n            // チャンネル ID が未定義なら実行しない（フェイルセーフ）\r\n            if (this.$route.params.display_channel_id === undefined) {\r\n                return;\r\n            }\r\n\r\n            // もし現時点でチャンネル ID が gr999 だった場合、チャンネル情報に存在しない不正な ID なので、404 ページにリダイレクト\r\n            if (this.channelsStore.channel.current.display_channel_id === 'gr999') {\r\n                this.$router.push({path: '/not-found/'});\r\n                return;\r\n            }\r\n\r\n            // PlayerWrapper を初期化\r\n            this.player_wrapper = new PlayerWrapper('Live');\r\n            await this.player_wrapper.init();\r\n        },\r\n\r\n        // 再生セッションを破棄する\r\n        // チャンネルを切り替える際に実行される\r\n        async destroy() {\r\n\r\n            // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\r\n            // clearInterval() と clearTimeout() は中身共通なので問題ない\r\n            for (const interval_id of this.interval_ids) {\r\n                window.clearInterval(interval_id);\r\n            }\r\n\r\n            // interval_ids をクリア\r\n            this.interval_ids = [];\r\n\r\n            // PlayerWrapper を破棄\r\n            if (this.player_wrapper !== null) {\r\n                await this.player_wrapper.destroy();\r\n                this.player_wrapper = null;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n// DPlayer のスタイルの上書き\r\n.watch-player__dplayer {\r\n    svg circle, svg path {\r\n        fill: var(--v-text-base) !important;\r\n    }\r\n    .dplayer-video-wrap {\r\n        background: transparent !important;\r\n        .dplayer-video-wrap-aspect {\r\n            transition: opacity 0.2s cubic-bezier(0.4, 0.38, 0.49, 0.94);\r\n            opacity: 1;\r\n        }\r\n        .dplayer-danmaku {\r\n            max-width: 100%;\r\n            max-height: calc(100% - var(--comment-area-vertical-margin, 0px));\r\n            aspect-ratio: var(--comment-area-aspect-ratio, 16 / 9);\r\n            transition: max-height 0.5s cubic-bezier(0.42, 0.19, 0.53, 0.87), aspect-ratio 0.5s cubic-bezier(0.42, 0.19, 0.53, 0.87);\r\n            will-change: aspect-ratio;\r\n            overflow: hidden;\r\n        }\r\n        .dplayer-bml-browser {\r\n            display: block;\r\n            position: absolute;\r\n            width: var(--bml-browser-width, 960px);\r\n            height: var(--bml-browser-height, 540px);\r\n            color: rgb(0, 0, 0);\r\n            overflow: hidden;\r\n            transform-origin: center;\r\n            transform: scale(var(--bml-browser-scale-factor-width, 1), var(--bml-browser-scale-factor-height, 1));\r\n            transition: opacity 0.2s cubic-bezier(0.4, 0.38, 0.49, 0.94);\r\n            opacity: 1;\r\n            aspect-ratio: 16 / 9;\r\n        }\r\n        .dplayer-danloading {\r\n            display: none !important;\r\n        }\r\n        .dplayer-loading-icon {\r\n            // ローディング表示は自前でやるため不要\r\n            display: none !important;\r\n        }\r\n    }\r\n    .dplayer-controller-mask {\r\n        height: 82px !important;\r\n        background: linear-gradient(to bottom, transparent, #000000cf) !important;\r\n        opacity: 0 !important;\r\n        visibility: hidden;\r\n        transition: opacity 0.3s ease, visibility 0.3s ease !important;\r\n        @include tablet-vertical {\r\n            height: 66px !important;\r\n        }\r\n        @include smartphone-horizontal {\r\n            height: 66px !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            height: 66px !important;\r\n        }\r\n    }\r\n\r\n    .dplayer-controller {\r\n        padding-left: calc(68px + 18px) !important;\r\n        padding-bottom: 6px !important;\r\n        transition: opacity 0.3s ease, visibility 0.3s ease;\r\n        opacity: 0 !important;\r\n        visibility: hidden;\r\n        @include tablet-vertical {\r\n            padding-left: calc(0px + 18px) !important;\r\n        }\r\n        @include smartphone-horizontal {\r\n            padding-left: calc(0px + 18px) !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            padding-left: calc(0px + 18px) !important;\r\n        }\r\n\r\n        .dplayer-time, .dplayer-live-badge {\r\n            color: var(--v-text-base) !important;\r\n        }\r\n        .dplayer-volume-bar {\r\n            background: var(--v-text-base) !important;\r\n        }\r\n        .dplayer-icons {\r\n            bottom: auto !important;\r\n            &.dplayer-icons-right {\r\n                right: 22px !important;\r\n                @include tablet-vertical {\r\n                    right: 11px !important;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    right: 11px !important;\r\n                }\r\n                @include smartphone-vertical {\r\n                    right: 11px !important;\r\n                }\r\n            }\r\n            // ブラウザフルスクリーンボタンを削除（実質あまり意味がないため）\r\n            .dplayer-icon.dplayer-full-in-icon {\r\n                display: none !important;\r\n            }\r\n            .dplayer-icon {\r\n                @include tablet-vertical {\r\n                    &.dplayer-pip-icon:after {\r\n                        left: 25%;\r\n                    }\r\n                    &.dplayer-full-icon:after {\r\n                        left: -20%;\r\n                    }\r\n                }\r\n                @include smartphone-horizontal {\r\n                    &.dplayer-pip-icon:after {\r\n                        left: 25%;\r\n                    }\r\n                    &.dplayer-full-icon:after {\r\n                        left: -20%;\r\n                    }\r\n                }\r\n                @include smartphone-vertical {\r\n                    &.dplayer-pip-icon:after {\r\n                        left: 25%;\r\n                    }\r\n                    &.dplayer-full-icon:after {\r\n                        left: -20%;\r\n                    }\r\n                }\r\n                &.dplayer-capture-icon, &.dplayer-comment-capture-icon {\r\n                    transition: background-color 0.08s ease;\r\n                    border-radius: 6px;\r\n                    &.dplayer-capturing {\r\n                        background: var(--v-secondary-lighten1);\r\n                        .dplayer-icon-content {\r\n                            opacity: 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        .dplayer-comment-box {\r\n            transition: opacity 0.3s ease, visibility 0.3s ease !important;\r\n            .dplayer-comment-setting-icon {\r\n                z-index: 5;\r\n            }\r\n            .dplayer-comment-input {\r\n                transition: box-shadow 0.09s ease;\r\n                appearance: none;\r\n                -webkit-appearance: none;\r\n                &:focus {\r\n                    box-shadow: rgba(79, 130, 230, 60%) 0 0 0 3.5px;\r\n                }\r\n                // iOS Safari でフォーカス時にズームされる問題への対処\r\n                @supports (-webkit-touch-callout: none) {\r\n                    @include smartphone-horizontal {\r\n                        width: calc(100% * 1.142857) !important;\r\n                        height: calc(100% * 1.142857) !important;\r\n                        font-size: 16px !important;\r\n                        transform: scale(0.875);\r\n                        transform-origin: 0 0;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        width: calc(100% * 1.142857) !important;\r\n                        height: calc(100% * 1.142857) !important;\r\n                        font-size: 16px !important;\r\n                        transform: scale(0.875);\r\n                        transform-origin: 0 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .dplayer-notice {\r\n        padding: 16px 22px !important;\r\n        margin-right: 30px;\r\n        border-radius: 4px !important;\r\n        font-size: 15px !important;\r\n        line-height: 1.6;\r\n        @include tablet-vertical {\r\n            top: auto;\r\n            left: 16px !important;\r\n            padding: 12px 16px !important;\r\n            margin-right: 16px;\r\n            font-size: 13.5px !important;\r\n        }\r\n        @include smartphone-horizontal {\r\n            padding: 12px 16px !important;\r\n            margin-right: 16px;\r\n            font-size: 13.5px !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            top: auto;\r\n            left: 16px !important;\r\n            padding: 12px 16px !important;\r\n            margin-right: 16px;\r\n            font-size: 13.5px !important;\r\n        }\r\n    }\r\n    .dplayer-info-panel {\r\n        transition: top 0.3s, left 0.3s;\r\n    }\r\n    .dplayer-setting-box {\r\n        z-index: 10 !important;\r\n        @include tablet-vertical {\r\n            height: calc(100% - 60px) !important;\r\n        }\r\n        @include smartphone-vertical {\r\n            height: calc(100% - 60px) !important;\r\n        }\r\n        .dplayer-setting-audio-panel {\r\n            // 副音声がない番組で副音声を選択できないように\r\n            .dplayer-setting-audio-item.dplayer-setting-audio-item--disabled {\r\n                pointer-events: none;  // クリックイベントを無効化\r\n                .dplayer-label {\r\n                    color: #AAAAAA;  // グレーアウト\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .dplayer-comment-setting-box {\r\n        .dplayer-comment-setting-title {\r\n            color: var(--v-text-base);\r\n        }\r\n        .dplayer-comment-setting-type, .dplayer-comment-setting-size {\r\n            span {\r\n                border: 1px solid (--v-text-base);\r\n            }\r\n            input:checked + span {\r\n                background: var(--v-text-base);\r\n            }\r\n        }\r\n    }\r\n\r\n    // モバイルのみ適用されるスタイル\r\n    &.dplayer-mobile {\r\n        .dplayer-controller {\r\n            padding-left: calc(68px + 30px) !important;\r\n            @include tablet-vertical {\r\n                padding-left: calc(0px + 18px) !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                padding-left: calc(0px + 18px) !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                padding-left: calc(0px + 18px) !important;\r\n            }\r\n        }\r\n        &.dplayer-hide-controller .dplayer-controller {\r\n            transform: none !important;\r\n        }\r\n    }\r\n}\r\n\r\n// ロード中は動画と BML ブラウザを非表示にする\r\n.watch-player--loading {\r\n    .dplayer-video-wrap-aspect, .dplayer-bml-browser {\r\n        opacity: 0 !important;\r\n    }\r\n}\r\n\r\n// Safari のみ、アイコンに hover しても opacity が変わらないようにする\r\n// hover すると 1px ずれてしまい見苦しくなる Safari の描画バグを回避するための苦肉の策\r\n// ref: https://qiita.com/Butterthon/items/10e6b58d883236aa3838\r\n_::-webkit-full-page-media, _:future, :root .dplayer-icon:hover .dplayer-icon-content {\r\n    opacity: 0.8 !important;\r\n}\r\n\r\n// コントロール表示時\r\n.watch-container.watch-container--control-display {\r\n    .watch-player__dplayer {\r\n        .dplayer-controller-mask, .dplayer-controller {\r\n            opacity: 1 !important;\r\n            visibility: visible !important;\r\n            .dplayer-comment-box {\r\n                left: calc(68px + 20px);\r\n                @include tablet-vertical {\r\n                    left: calc(0px + 16px);\r\n                }\r\n                @include smartphone-horizontal {\r\n                    left: calc(0px + 16px);\r\n                }\r\n                @include smartphone-vertical {\r\n                    left: calc(0px + 16px);\r\n                }\r\n            }\r\n        }\r\n        .dplayer-notice {\r\n            left: calc(68px + 30px);\r\n            bottom: 62px;\r\n            @include tablet-vertical {\r\n                left: calc(0px + 16px);\r\n                bottom: 62px !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-vertical {\r\n                left: calc(0px + 16px);\r\n                bottom: 62px !important;\r\n            }\r\n        }\r\n        .dplayer-info-panel {\r\n            top: 82px;\r\n            left: calc(68px + 30px);\r\n            @include tablet-horizontal {\r\n                left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-horizontal {\r\n                left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-vertical {\r\n                left: calc(0px + 16px);\r\n            }\r\n        }\r\n        .dplayer-comment-setting-box {\r\n            left: calc(68px + 20px);\r\n            @include tablet-vertical {\r\n                left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-horizontal {\r\n                left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-vertical {\r\n                left: calc(0px + 16px);\r\n            }\r\n        }\r\n        .dplayer-mobile .dplayer-mobile-icon-wrap {\r\n            opacity: 0.7 !important;\r\n            visibility: visible !important;\r\n        }\r\n    }\r\n}\r\n// コントロール非表示時\r\n.watch-container:not(.watch-container--control-display) {\r\n    .watch-player__dplayer {\r\n        .dplayer-danmaku {\r\n            max-height: 100% !important;\r\n            aspect-ratio: 16 / 9 !important;\r\n        }\r\n        .dplayer-notice {\r\n            bottom: 20px !important;\r\n        }\r\n    }\r\n}\r\n// フルスクリーン時\r\n.watch-container.watch-container--fullscreen {\r\n    .watch-player__dplayer {\r\n        .dplayer-controller {\r\n            padding-left: 20px !important;\r\n        }\r\n        &.dplayer-mobile .dplayer-controller {\r\n            padding-left: 30px !important;\r\n            @include tablet-vertical {\r\n                padding-left: 16px !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                padding-left: 16px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                padding-left: 16px !important;\r\n            }\r\n        }\r\n        .dplayer-comment-box, .dplayer-comment-setting-box {\r\n            left: 20px !important;\r\n            @include tablet-vertical {\r\n                left: 16px !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                left: 16px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                left: 16px !important;\r\n            }\r\n        }\r\n    }\r\n    .watch-header__back-icon {\r\n        display: none !important;\r\n    }\r\n}\r\n// フルスクリーン+コントロール表示時\r\n.watch-container.watch-container--fullscreen.watch-container--control-display {\r\n    .watch-player__dplayer {\r\n        .dplayer-notice, .dplayer-info-panel {\r\n            left: 30px !important;\r\n            @include tablet-vertical {\r\n                left: 16px !important;\r\n            }\r\n            @include smartphone-horizontal {\r\n                left: 16px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                left: 16px !important;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// 仮想キーボード表示時\r\n.watch-player.watch-player--virtual-keyboard-display {\r\n    .watch-player__dplayer {\r\n        .dplayer-controller-mask {\r\n            position: absolute;\r\n            bottom: env(keyboard-inset-height, 0px) !important;\r\n            @include tablet-vertical {\r\n                bottom: 0px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                bottom: 0px !important;\r\n            }\r\n        }\r\n        .dplayer-icons.dplayer-comment-box {\r\n            position: absolute;\r\n            bottom: calc(env(keyboard-inset-height, 0px) + 4px) !important;\r\n            @include tablet-vertical {\r\n                bottom: 6px !important;\r\n            }\r\n            @include smartphone-vertical {\r\n                bottom: 6px !important;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n\r\n// ショートカットキーの表示スタイル\r\n.shortcut-key {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-shrink: 0;\r\n    min-width: 32px;\r\n    min-height: 28px;\r\n    padding: 3px 8px;\r\n    border-radius: 5px;\r\n    background-color: var(--v-background-lighten2);\r\n    font-size: 14.5px;\r\n    text-align: center;\r\n}\r\n.shortcut-key-plus {\r\n    display: inline-block;\r\n    margin: 0px 5px;\r\n    flex-shrink: 0;\r\n}\r\n\r\n.route-container {\r\n    height: 100vh !important;\r\n    height: calc(100dvh - env(safe-area-inset-bottom)) !important;\r\n    background: var(--v-black-base) !important;\r\n    overflow: hidden;\r\n    @include smartphone-horizontal {\r\n        padding-left: env(safe-area-inset-left);\r\n        padding-right: env(safe-area-inset-right);\r\n    }\r\n}\r\n.watch-container {\r\n    display: flex;\r\n    width: calc(100% + 352px);  // パネルの幅分はみ出す\r\n    height: 100%;\r\n    transition: width 0.4s cubic-bezier(0.26, 0.68, 0.55, 0.99);\r\n    @include tablet-vertical {\r\n        flex-direction: column;\r\n        width: 100%;\r\n    }\r\n    @include smartphone-horizontal {\r\n        width: calc(100% + 310px); // パネルの幅分はみ出す\r\n    }\r\n    @include smartphone-vertical {\r\n        flex-direction: column;\r\n        width: 100%;\r\n        padding-bottom: 56px;\r\n    }\r\n\r\n    // コントロール表示時\r\n    &.watch-container--control-display {\r\n        .watch-content {\r\n            cursor: auto !important;\r\n        }\r\n        .watch-navigation, .watch-header, .watch-player__button {\r\n            opacity: 1 !important;\r\n            visibility: visible !important;\r\n        }\r\n    }\r\n\r\n    // パネル表示時\r\n    &.watch-container--panel-display {\r\n        width: 100%;  // 画面幅に収めるように\r\n\r\n        // パネルアイコンをハイライト\r\n        .switch-button-panel .switch-button-icon {\r\n            color: var(--v-primary-base);\r\n        }\r\n\r\n        // タッチデバイスのみ、content-visibility: visible で明示的にパネルを描画する\r\n        .watch-panel {\r\n            @media (hover: none) {\r\n                content-visibility: auto;\r\n            }\r\n        }\r\n    }\r\n    @include tablet-vertical {\r\n        width: 100%;\r\n        .watch-panel {\r\n            @media (hover: none) {\r\n                content-visibility: auto;\r\n            }\r\n        }\r\n    }\r\n    @include smartphone-vertical {\r\n        width: 100%;\r\n        .watch-panel {\r\n            @media (hover: none) {\r\n                content-visibility: auto;\r\n            }\r\n        }\r\n    }\r\n\r\n    // フルスクリーン時\r\n    &.watch-container--fullscreen {\r\n\r\n        // ナビゲーションを非表示\r\n        .watch-navigation {\r\n            display: none;\r\n        }\r\n        // ナビゲーションの分の余白を削除\r\n        .watch-content {\r\n            .watch-header {\r\n                padding-left: 30px;\r\n                @include tablet-vertical {\r\n                    padding-left: 16px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    padding-left: 16px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    padding-left: 16px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .watch-navigation {\r\n        display: flex;\r\n        flex-direction: column;\r\n        position: fixed;\r\n        width: 68px;\r\n        top: 0px;\r\n        left: 0px;\r\n        // スマホ・タブレットのブラウザでアドレスバーが完全に引っ込むまでビューポートの高さが更新されず、\r\n        // その間下に何も背景がない部分ができてしまうのを防ぐ\r\n        bottom: -100px;\r\n        padding: 18px 8px 122px;\r\n        background: #2F221F80;\r\n        transition: opacity 0.3s, visibility 0.3s;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        z-index: 10;\r\n        @include tablet-vertical {\r\n            display: none;\r\n        }\r\n        @include smartphone-horizontal {\r\n            display: none;\r\n        }\r\n        @include smartphone-vertical {\r\n            display: none;\r\n        }\r\n\r\n        .watch-navigation__icon {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 52px;\r\n            margin-bottom: 17px;\r\n            border-radius: 11px;\r\n            font-size: 16px;\r\n            color: var(--v-text-base);\r\n            transition: background-color 0.15s;\r\n            text-decoration: none;\r\n            user-select: none;\r\n            @include smartphone-horizontal {\r\n                height: 32px;\r\n                border-radius: 10px;\r\n            }\r\n        }\r\n\r\n        @include smartphone-horizontal {\r\n            // スペースを確保するため、スペーサーを非表示に\r\n            div.spacer {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        .watch-navigation__link {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 52px;\r\n            border-radius: 11px;\r\n            font-size: 16px;\r\n            color: var(--v-text-base);\r\n            transition: background-color 0.15s;\r\n            text-decoration: none;\r\n            user-select: none;\r\n            @include smartphone-horizontal {\r\n                height: 44px;\r\n                border-radius: 10px;\r\n                // スペースを確保するため、設定・バージョン情報のアイコンを非表示に\r\n                &:nth-last-child(1), &:nth-last-child(2) {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            &:hover {\r\n                background: #433532A0;\r\n            }\r\n\r\n            @include smartphone-horizontal {\r\n                &-icon {\r\n                    width: 26px;\r\n                    height: 26px;\r\n                }\r\n            }\r\n\r\n            &--active {\r\n                color: var(--v-primary-base);\r\n                background: #433532A0;\r\n            }\r\n            + .watch-navigation__link {\r\n                margin-top: 4px;\r\n                @include smartphone-horizontal {\r\n                    margin-top: auto;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .watch-content {\r\n        display: flex;\r\n        position: relative;\r\n        width: 100%;\r\n        cursor: none;\r\n\r\n        .watch-header {\r\n            display: flex;\r\n            align-items: center;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 82px;\r\n            padding-left: calc(68px + 30px);\r\n            padding-right: 30px;\r\n            background: linear-gradient(to bottom, #000000cf, transparent);\r\n            transition: opacity 0.3s, visibility 0.3s;\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            z-index: 5;\r\n\r\n            @include tablet-vertical {\r\n                height: 66px;\r\n                padding-left: 16px;\r\n                padding-right: 16px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                padding-left: calc(68px + 16px);\r\n                padding-right: 16px;\r\n            }\r\n            @include smartphone-horizontal {\r\n                height: 66px;\r\n                padding-left: calc(0px + 16px);\r\n            }\r\n            @include smartphone-vertical {\r\n                display: none;\r\n                height: 50px;\r\n                padding-left: 16px;\r\n                padding-right: 16px;\r\n            }\r\n\r\n            .watch-header__back-icon {\r\n                display: none;\r\n                @include tablet-vertical {\r\n                    display: flex;\r\n                    position: relative !important;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    flex-shrink: 0;\r\n                    width: 40px;\r\n                    height: 40px;\r\n                    left: -6px;\r\n                    padding: 6px;\r\n                    margin-right: 2px;\r\n                    border-radius: 50%;\r\n                    color: var(--v-text-base);\r\n                }\r\n                @include smartphone-horizontal {\r\n                    display: flex;\r\n                    position: relative !important;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    flex-shrink: 0;\r\n                    width: 36px;\r\n                    height: 36px;\r\n                    left: -6px;\r\n                    padding: 6px;\r\n                    margin-right: 2px;\r\n                    border-radius: 50%;\r\n                    color: var(--v-text-base);\r\n                }\r\n                @include smartphone-vertical {\r\n                    display: flex;\r\n                    position: relative !important;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    flex-shrink: 0;\r\n                    width: 36px;\r\n                    height: 36px;\r\n                    left: -6px;\r\n                    padding: 6px;\r\n                    margin-right: 2px;\r\n                    border-radius: 50%;\r\n                    color: var(--v-text-base);\r\n                }\r\n            }\r\n\r\n            .watch-header__broadcaster {\r\n                display: inline-block;\r\n                flex-shrink: 0;\r\n                width: 64px;\r\n                height: 36px;\r\n                border-radius: 5px;\r\n                background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n                object-fit: cover;\r\n                user-select: none;\r\n\r\n                @include tablet-vertical {\r\n                    width: 48px;\r\n                    height: 28px;\r\n                    border-radius: 4px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    width: 48px;\r\n                    height: 28px;\r\n                    border-radius: 4px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            .watch-header__program-title {\r\n                margin-left: 18px;\r\n                font-size: 18px;\r\n                font-weight: bold;\r\n                font-feature-settings: \"palt\" 1;  // 文字詰め\r\n                letter-spacing: 0.05em;  // 字間を少し空ける\r\n                overflow: hidden;\r\n                white-space: nowrap;\r\n                text-overflow: ellipsis;\r\n\r\n                @include tablet-vertical {\r\n                    margin-left: 12px;\r\n                    font-size: 16px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    margin-left: 12px;\r\n                    font-size: 16px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    margin-left: 0px;\r\n                    font-size: 16px;\r\n                }\r\n            }\r\n\r\n            .watch-header__program-time {\r\n                flex-shrink: 0;\r\n                margin-left: 16px;\r\n                font-size: 15px;\r\n                font-weight: 500;\r\n\r\n                @include smartphone-horizontal {\r\n                    margin-left: 8px;\r\n                    font-size: 14px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    margin-left: 8px;\r\n                    font-size: 14px;\r\n                }\r\n            }\r\n\r\n            .watch-header__now {\r\n                flex-shrink: 0;\r\n                margin-left: 16px;\r\n                font-size: 13px;\r\n                font-weight: 500;\r\n\r\n                @include smartphone-horizontal {\r\n                    display: none;\r\n                }\r\n                @include smartphone-vertical {\r\n                    display: none;\r\n                }\r\n            }\r\n        }\r\n\r\n        .watch-player {\r\n            display: flex;\r\n            position: relative;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-size: contain;\r\n            background-position: center;\r\n            @include tablet-vertical {\r\n                aspect-ratio: 16 / 9;\r\n            }\r\n            @include smartphone-vertical {\r\n                aspect-ratio: 16 / 9;\r\n            }\r\n\r\n            .watch-player__background-wrapper {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 100%;\r\n\r\n                .watch-player__background {\r\n                    position: relative;\r\n                    top: 50%;\r\n                    left: 50%;\r\n                    max-height: 100%;\r\n                    aspect-ratio: 16 / 9;\r\n                    transform: translate(-50%, -50%);\r\n                    background-blend-mode: overlay;\r\n                    background-color: rgba(14, 14, 18, 0.35);\r\n                    background-size: cover;\r\n                    background-image: none;\r\n                    opacity: 0;\r\n                    visibility: hidden;\r\n                    transition: opacity 0.4s cubic-bezier(0.4, 0.38, 0.49, 0.94), visibility 0.4s cubic-bezier(0.4, 0.38, 0.49, 0.94);\r\n                    will-change: opacity;\r\n\r\n                    &--display {\r\n                        opacity: 1;\r\n                        visibility: visible;\r\n                    }\r\n\r\n                    .watch-player__background-logo {\r\n                        display: inline-block;\r\n                        position: absolute;\r\n                        height: 34px;\r\n                        right: 56px;\r\n                        bottom: 44px;\r\n                        filter: drop-shadow(0px 0px 5px var(--v-black-base));\r\n\r\n                        @include tablet-vertical {\r\n                            height: 30px;\r\n                            right: 34px;\r\n                            bottom: 30px;\r\n                        }\r\n                        @include smartphone-horizontal {\r\n                            height: 25px;\r\n                            right: 30px;\r\n                            bottom: 24px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            height: 22px;\r\n                            right: 30px;\r\n                            bottom: 24px;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            .watch-player__buffering {\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n                color: var(--v-background-lighten3);\r\n                filter: drop-shadow(0px 0px 3px rgba(0, 0, 0, 0.3));\r\n                opacity: 0;\r\n                visibility: hidden;\r\n                transition: opacity 0.2s cubic-bezier(0.4, 0.38, 0.49, 0.94), visibility 0.2s cubic-bezier(0.4, 0.38, 0.49, 0.94);\r\n                will-change: opacity;\r\n                z-index: 3;\r\n                pointer-events: none;  // クリックイベントを無効化 (重要)\r\n\r\n                &--display {\r\n                    opacity: 1;\r\n                    visibility: visible;\r\n                }\r\n            }\r\n\r\n            .watch-player__dplayer {\r\n                width: 100%;\r\n            }\r\n\r\n            .watch-player__button {\r\n                display: flex;\r\n                justify-content: space-around;\r\n                flex-direction: column;\r\n                position: absolute;\r\n                top: 50%;\r\n                right: 28px;\r\n                height: 190px;\r\n                transform: translateY(-50%);\r\n                opacity: 0;\r\n                visibility: hidden;\r\n                transition: opacity 0.3s, visibility 0.3s;\r\n                @include tablet-vertical {\r\n                    right: 15px;\r\n                    height: 128px;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    right: 15px;\r\n                    height: 155px;\r\n                }\r\n                @include smartphone-vertical {\r\n                    right: 15px;\r\n                    height: 100px;\r\n                }\r\n\r\n                .switch-button {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    width: 48px;\r\n                    height: 48px;\r\n                    color: var(--v-text-base);\r\n                    background: #2F221FC0;\r\n                    border-radius: 7px;\r\n                    transition: background-color 0.15s;\r\n                    user-select: none;\r\n                    cursor: pointer;\r\n                    @include smartphone-horizontal {\r\n                        width: 38px;\r\n                        height: 38px;\r\n                        border-radius: 5px;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        width: 38px;\r\n                        height: 38px;\r\n                        border-radius: 5px;\r\n                    }\r\n\r\n                    &:hover {\r\n                        background: #2F221FF0;\r\n                    }\r\n                    // タッチデバイスで hover を無効にする\r\n                    @media (hover: none) {\r\n                        &:hover {\r\n                            background: #2F221FC0;\r\n                        }\r\n                    }\r\n\r\n                    svg {\r\n                        @include smartphone-horizontal {\r\n                            height: 27px;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            height: 27px;\r\n                        }\r\n                    }\r\n\r\n                    .switch-button-icon {\r\n                        position: relative;\r\n                    }\r\n\r\n                    &-up > .switch-button-icon {\r\n                        top: 6px;\r\n                    }\r\n                    &-panel {\r\n                        @include tablet-vertical {\r\n                            display: none;\r\n                        }\r\n                        @include smartphone-vertical {\r\n                            display: none;\r\n                        }\r\n                    }\r\n                    &-panel > .switch-button-icon {\r\n                        top: 1.5px;\r\n                        transition: color 0.4s cubic-bezier(0.26, 0.68, 0.55, 0.99);\r\n                    }\r\n                    &-down > .switch-button-icon {\r\n                        bottom: 4px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .watch-panel {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex-shrink: 0;\r\n        width: 352px;\r\n        height: 100%;\r\n        background: var(--v-background-base);\r\n        @include tablet-vertical {\r\n            width: 100%;\r\n            height: auto;\r\n            flex-grow: 1;\r\n        }\r\n        @include smartphone-horizontal {\r\n            width: 310px;\r\n        }\r\n        @include smartphone-vertical {\r\n            width: 100%;\r\n            height: auto;\r\n            flex-grow: 1;\r\n        }\r\n\r\n        // タッチデバイスのみ、content-visibility: hidden でパネルを折り畳んでいるときの描画パフォーマンスを上げる\r\n        @media (hover: none) {\r\n            content-visibility: hidden;\r\n        }\r\n\r\n        .watch-panel__header {\r\n            display: flex;\r\n            align-items: center;\r\n            flex-shrink: 0;\r\n            width: 100%;\r\n            height: 70px;\r\n            padding-left: 16px;\r\n            padding-right: 16px;\r\n            @include tablet-vertical {\r\n                display: none;\r\n            }\r\n            @include smartphone-horizontal {\r\n                display: none;\r\n            }\r\n            @include smartphone-vertical {\r\n                display: none;\r\n            }\r\n\r\n            .panel-close-button {\r\n                display: flex;\r\n                position: relative;\r\n                align-items: center;\r\n                flex-shrink: 0;\r\n                left: -4px;\r\n                height: 35px;\r\n                padding: 0 4px;\r\n                border-radius: 5px;\r\n                font-size: 16px;\r\n                user-select: none;\r\n                cursor: pointer;\r\n\r\n                &__icon {\r\n                    position: relative;\r\n                    left: -4px;\r\n                }\r\n                &__text {\r\n                    font-weight: bold;\r\n                }\r\n            }\r\n\r\n            .panel-broadcaster {\r\n                display: flex;\r\n                align-items: center;\r\n                min-width: 0;\r\n                margin-left: 16px;\r\n\r\n                &__icon {\r\n                    display: inline-block;\r\n                    flex-shrink: 0;\r\n                    width: 43px;\r\n                    height: 24px;\r\n                    border-radius: 3px;\r\n                    background: linear-gradient(150deg, var(--v-gray-base), var(--v-background-lighten2));\r\n                    object-fit: cover;\r\n                    user-select: none;\r\n                }\r\n\r\n                &__number {\r\n                    flex-shrink: 0;\r\n                    margin-left: 8px;\r\n                    font-size: 16px;\r\n                }\r\n\r\n                &__name {\r\n                    margin-left: 5px;\r\n                    font-size: 16px;\r\n                    overflow: hidden;\r\n                    white-space: nowrap;\r\n                    text-overflow: ellipsis;\r\n                    @include smartphone-horizontal {\r\n                        font-size: 14px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .watch-panel__content-container {\r\n            position: relative;\r\n            height: 100%;\r\n\r\n            .watch-panel__content {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background: var(--v-background-base);\r\n                transition: opacity 0.2s, visibility 0.2s;\r\n                opacity: 0;\r\n                visibility: hidden;\r\n\r\n                // スマホ・タブレット (タッチデバイス) ではアニメーションが重めなので、アニメーションを無効化\r\n                // アクティブなタブ以外は明示的に描画しない\r\n                @media (hover: none) {\r\n                    transition: none;\r\n                    content-visibility: hidden;\r\n                }\r\n                &--active {\r\n                    opacity: 1;\r\n                    visibility: visible;\r\n                    content-visibility: auto;\r\n                }\r\n            }\r\n\r\n            .watch-panel__content-remocon-button {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                position: absolute;\r\n                right: 16px;\r\n                bottom: 16px;\r\n                width: 48px;\r\n                height: 48px;\r\n                border-radius: 50%;\r\n                background: var(--v-background-lighten1);\r\n                outline: none;\r\n                transition: opacity 0.2s, visibility 0.2s;\r\n                opacity: 0;\r\n                visibility: hidden;\r\n\r\n                @media (hover: none) {\r\n                    transition: none;\r\n                }\r\n                &--active {\r\n                    opacity: 1;\r\n                    visibility: visible;\r\n                }\r\n            }\r\n        }\r\n\r\n        .watch-panel__navigation {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-evenly;\r\n            flex-shrink: 0;\r\n            height: 77px;\r\n            background: var(--v-background-lighten1);\r\n            @include tablet-vertical {\r\n                height: 48px;\r\n                background: var(--v-background-base);\r\n            }\r\n            @include smartphone-horizontal {\r\n                height: 34px;\r\n            }\r\n            @include smartphone-vertical {\r\n                height: 44px;\r\n                background: var(--v-background-base);\r\n            }\r\n\r\n            .panel-navigation-button {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                flex-direction: column;\r\n                width: 77px;\r\n                height: 56px;\r\n                padding: 6px 0px;\r\n                border-radius: 5px;\r\n                color: var(--v-text-base);\r\n                box-sizing: content-box;\r\n                transition: color 0.3s;\r\n                user-select: none;\r\n                cursor: pointer;\r\n                @include tablet-vertical {\r\n                    width: 100px;\r\n                    height: 40px;\r\n                    padding: 5px 0px;\r\n                    box-sizing: border-box;\r\n                }\r\n                @include smartphone-horizontal {\r\n                    height: 34px;\r\n                    padding: 5px 0px;\r\n                    box-sizing: border-box;\r\n                }\r\n                @include smartphone-vertical {\r\n                    height: 34px;\r\n                    padding: 5px 0px;\r\n                    box-sizing: border-box;\r\n                }\r\n\r\n                &--active {\r\n                    color: var(--v-primary-base);\r\n                    .panel-navigation-button__icon {\r\n                        color: var(--v-primary-base);\r\n                    }\r\n                    @include tablet-vertical {\r\n                        background: #5b2d3c;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        background: #5b2d3c;\r\n                    }\r\n                }\r\n\r\n                &__icon {\r\n                    height: 34px;\r\n                    @include tablet-vertical {\r\n                        color: var(--v-text-base);\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        color: var(--v-text-base);\r\n                    }\r\n                }\r\n                &__text {\r\n                    margin-top: 5px;\r\n                    font-size: 13px;\r\n                    @include tablet-vertical {\r\n                        display: none;\r\n                    }\r\n                    @include smartphone-horizontal {\r\n                        display: none;\r\n                    }\r\n                    @include smartphone-vertical {\r\n                        display: none;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch2.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch2.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./Watch2.vue?vue&type=template&id=b9136a12&scoped=true\"\nimport script from \"./Watch2.vue?vue&type=script&lang=ts\"\nexport * from \"./Watch2.vue?vue&type=script&lang=ts\"\nimport style0 from \"./Watch2.vue?vue&type=style&index=0&id=b9136a12&prod&lang=scss\"\nimport style1 from \"./Watch2.vue?vue&type=style&index=1&id=b9136a12&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b9136a12\",\n  null\n  \n)\n\nexport default component.exports","\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\n\r\nimport Utils from '@/utils';\r\nimport Login from '@/views/Login.vue';\r\nimport NotFound from '@/views/NotFound.vue';\r\nimport Register from '@/views/Register.vue';\r\nimport SettingsAccount from '@/views/Settings/Account.vue';\r\nimport SettingsCaption from '@/views/Settings/Caption.vue';\r\nimport SettingsCapture from '@/views/Settings/Capture.vue';\r\nimport SettingsDataBroadcasting from '@/views/Settings/DataBroadcasting.vue';\r\nimport SettingsGeneral from '@/views/Settings/General.vue';\r\nimport SettingsIndex from '@/views/Settings/Index.vue';\r\nimport SettingsJikkyo from '@/views/Settings/Jikkyo.vue';\r\nimport SettingsServer from '@/views/Settings/Server.vue';\r\nimport SettingsTwitter from '@/views/Settings/Twitter.vue';\r\nimport TVHome from '@/views/TV/Home.vue';\r\nimport TVWatch from '@/views/TV/Watch.vue';\r\nimport TVWatch2 from '@/views/TV/Watch2.vue';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst router = new VueRouter({\r\n\r\n    // History API モード\r\n    mode: 'history',\r\n\r\n    // ルーティングのベース URL\r\n    base: process.env.BASE_URL,\r\n\r\n    // ルーティング設定\r\n    routes: [\r\n        {\r\n            path: '/',\r\n            redirect: '/tv/',\r\n        },\r\n        {\r\n            path: '/tv/',\r\n            name: 'TV Home',\r\n            component: TVHome,\r\n        },\r\n        {\r\n            path: '/tv/watch/:display_channel_id',\r\n            name: 'TV Watch',\r\n            component: TVWatch,\r\n        },\r\n        {\r\n            path: '/tv/watch2/:display_channel_id',\r\n            name: 'TV Watch2',\r\n            component: TVWatch2,\r\n        },\r\n        {\r\n            path: '/settings/',\r\n            name: 'Settings Index',\r\n            component: SettingsIndex,\r\n            beforeEnter: (to, from, next) => {\r\n\r\n                // スマホ縦画面・スマホ横画面・タブレット縦画面では設定一覧画面を表示する（画面サイズの関係）\r\n                if (Utils.isSmartphoneVertical() || Utils.isSmartphoneHorizontal() || Utils.isTabletVertical()) {\r\n                    next();  // 通常通り遷移\r\n                    return;\r\n                }\r\n\r\n                // それ以外の画面サイズでは全般設定にリダイレクト\r\n                next({path: '/settings/general/'});\r\n            }\r\n        },\r\n        {\r\n            path: '/settings/general',\r\n            name: 'Settings General',\r\n            component: SettingsGeneral,\r\n        },\r\n        {\r\n            path: '/settings/caption',\r\n            name: 'Settings Caption',\r\n            component: SettingsCaption,\r\n        },\r\n        {\r\n            path: '/settings/data-broadcasting',\r\n            name: 'Settings Data Broadcasting',\r\n            component: SettingsDataBroadcasting,\r\n        },\r\n        {\r\n            path: '/settings/capture',\r\n            name: 'Settings Capture',\r\n            component: SettingsCapture,\r\n        },\r\n        {\r\n            path: '/settings/account',\r\n            name: 'Settings Account',\r\n            component: SettingsAccount,\r\n        },\r\n        {\r\n            path: '/settings/jikkyo',\r\n            name: 'Settings Jikkyo',\r\n            component: SettingsJikkyo,\r\n        },\r\n        {\r\n            path: '/settings/twitter',\r\n            name: 'Settings Twitter',\r\n            component: SettingsTwitter,\r\n        },\r\n        {\r\n            path: '/settings/server',\r\n            name: 'Settings Server',\r\n            component: SettingsServer,\r\n        },\r\n        {\r\n            path: '/login/',\r\n            name: 'Login',\r\n            component: Login,\r\n        },\r\n        {\r\n            path: '/register/',\r\n            name: 'Register',\r\n            component: Register,\r\n        },\r\n        {\r\n            path: '*',\r\n            name: 'NotFound',\r\n            component: NotFound,\r\n        },\r\n    ],\r\n\r\n    // ページ遷移時のスクロールの挙動の設定\r\n    // ref: https://v3.router.vuejs.org/ja/guide/advanced/scroll-behavior.html\r\n    scrollBehavior (to, from, savedPosition) {\r\n        if (savedPosition) {\r\n            // 戻る/進むボタンが押されたときは保存されたスクロール位置を使う\r\n            return savedPosition;\r\n        } else {\r\n            // それ以外は常に先頭にスクロールする\r\n            return {x: 0, y: 0};\r\n        }\r\n    }\r\n});\r\n\r\nexport default router;\r\n","/* eslint-disable no-console */\r\n\r\nimport { register } from 'register-service-worker';\r\n\r\nimport Message from '@/message';\r\nimport Utils from '@/utils';\r\n\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n    register(`${process.env.BASE_URL}service-worker.js`, {\r\n        ready() {\r\n            console.log(\r\n                'App is being served from cache by a service worker.\\n' +\r\n                'For more details, visit https://goo.gl/AFskqB'\r\n            );\r\n        },\r\n        registered() {\r\n            console.log('Service worker has been registered.');\r\n        },\r\n        cached() {\r\n            console.log('Content has been cached for offline use.');\r\n        },\r\n        updatefound() {\r\n            console.log('New content is downloading.');\r\n        },\r\n        updated(registration: ServiceWorkerRegistration) {\r\n            console.log('New content is available; please refresh.');\r\n            Message.show({\r\n                message: 'クライアントが新しいバージョンに更新されました。5秒後にリロードします。',\r\n                timeout: 10000,  // リロードするまで表示し続ける\r\n            });\r\n            // PWA (Service Worker) を更新する\r\n            if (registration.waiting === null) {\r\n                return;\r\n            }\r\n            registration.waiting.postMessage({type: 'SKIP_WAITING'});\r\n            registration.waiting.addEventListener('statechange', async (event) => {\r\n                if ((event.target as ServiceWorker).state === 'activated') {\r\n                    await Utils.sleep(4);  // activated になるまで少し時間がかかるので、1秒減らして4秒待つ\r\n                    location.reload(true);\r\n                }\r\n            });\r\n        },\r\n        offline() {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        },\r\n        error(error) {\r\n            console.error('Error during service worker registration:', error);\r\n        }\r\n    });\r\n}\r\n","\r\nimport { Icon } from '@iconify/vue2';\r\nimport { createPinia, PiniaVuePlugin } from 'pinia';\r\nimport { polyfill as SeamlessScrollPolyfill } from 'seamless-scroll-polyfill';\r\nimport VTooltip from 'v-tooltip';\r\nimport Vue from 'vue';\r\nimport VueVirtualScroller from 'vue-virtual-scroller';\r\nimport 'vue-virtual-scroller/dist/vue-virtual-scroller.css';\r\nimport VuetifyMessageSnackbar from 'vuetify-message-snackbar';\r\nimport 'v-tooltip/dist/v-tooltip.css';\r\nimport '@mdi/font/css/materialdesignicons.css';\r\n\r\nimport App from '@/App.vue';\r\nimport VTabItem from '@/components/Vuetify/VTabItem';\r\nimport VTabs from '@/components/Vuetify/VTabs';\r\nimport VTabsItems from '@/components/Vuetify/VTabsItems';\r\nimport vuetify from '@/plugins/vuetify';\r\nimport router from '@/router';\r\nimport useSettingsStore, { setLocalStorageSettings } from '@/stores/SettingsStore';\r\nimport '@/service-worker';\r\nimport Utils from '@/utils';\r\n\r\n\r\n// スムーズスクロール周りの API の polyfill を適用\r\n// Element.scrollInfoView() のオプション指定を使うために必要\r\nSeamlessScrollPolyfill();\r\n\r\n// Production Tip を非表示にする\r\nVue.config.productionTip = false;\r\n\r\n// 常に Vue.js devtools を有効にする\r\nVue.config.devtools = true;\r\n\r\n// Pinia を使う\r\n// ref: https://pinia.vuejs.org/cookbook/options-api.html\r\nVue.use(PiniaVuePlugin);\r\nconst pinia = createPinia();\r\n\r\n// vue-virtual-scroller を使う\r\nVue.use(VueVirtualScroller);\r\n\r\n// vuetify-message-snackbar を使う\r\n// マイナーな OSS（しかも中国語…）だけど、Snackbar を関数で呼びたかったのでちょうどよかった\r\n// ref: https://github.com/thinkupp/vuetify-message-snackbar\r\nVue.use(VuetifyMessageSnackbar, {\r\n    // 画面上に配置しない\r\n    top: false,\r\n    // 画面下に配置する\r\n    bottom: true,\r\n    // デフォルトの背景色\r\n    color: '#433532',\r\n    // ダークテーマを適用する\r\n    dark: true,\r\n    // 影 (Elevation) の設定\r\n    elevation: 8,\r\n    // 2.5秒でタイムアウト\r\n    timeout: 2500,\r\n    // 要素が非表示になった後に DOM から要素を削除する\r\n    autoRemove: true,\r\n    // 閉じるボタンのテキスト\r\n    closeButtonContent: '閉じる',\r\n    // Vuetify のインスタンス\r\n    vuetifyInstance: vuetify,\r\n});\r\n\r\n// VTooltip を使う\r\n// タッチデバイスでは無効化する\r\n// ref: https://v-tooltip.netlify.app/guide/config.html#default-values\r\nconst trigger = Utils.isTouchDevice() ? [] : ['hover', 'focus', 'touch'];\r\nVTooltip.options.themes.tooltip.showTriggers = trigger;\r\nVTooltip.options.themes.tooltip.hideTriggers = trigger;\r\nVTooltip.options.themes.tooltip.delay.show = 0;\r\nVTooltip.options.offset = [0, 7];\r\nVue.use(VTooltip);\r\n\r\n// Iconify（アイコン）のグローバルコンポーネント\r\nVue.component('Icon', Icon);\r\n\r\n// VTabItem / VTabs / VTabsItems の挙動を改善するグローバルコンポーネント\r\nVue.component('v-tab-item-fix', VTabItem);\r\nVue.component('v-tabs-fix', VTabs);\r\nVue.component('v-tabs-items-fix', VTabsItems);\r\n\r\n// Vue を初期化\r\n(window as any).KonomiTVVueInstance = new Vue({\r\n    pinia,\r\n    router,\r\n    vuetify,\r\n    render: h => h(App),\r\n}).$mount('#app');\r\n\r\n// 設定データをサーバーにアップロード中かどうか\r\nlet is_uploading_settings = false;\r\n\r\n// 設定データの変更を監視する\r\nconst settings_store = useSettingsStore();\r\nsettings_store.$subscribe(async () => {\r\n\r\n    // 設定データをアップロード中の場合は何もしない\r\n    if (is_uploading_settings === true) {\r\n        return;\r\n    }\r\n\r\n    // 設定データを LocalStorage に保存\r\n    console.log('Client Settings Changed:', settings_store.settings);\r\n    setLocalStorageSettings(settings_store.settings);\r\n\r\n    // 設定データをサーバーに同期する (ログイン時かつ同期が有効な場合のみ)\r\n    await settings_store.syncClientSettingsToServer();\r\n\r\n}, {detached: true});\r\n\r\n// ログイン時かつ設定の同期が有効な場合、ページ遷移に関わらず、常に3秒おきにサーバーから設定を取得する\r\n// 初回のページレンダリングに間に合わないのは想定内（同期の完了を待つこともできるが、それだと表示速度が遅くなるのでしょうがない）\r\nwindow.setInterval(async () => {\r\n    if (Utils.getAccessToken() !== null && settings_store.settings.sync_settings === true) {\r\n\r\n        // 設定データをサーバーにアップロード\r\n        is_uploading_settings = true;\r\n        await settings_store.syncClientSettingsFromServer();\r\n        is_uploading_settings = false;\r\n\r\n        // 設定データを LocalStorage に保存\r\n        setLocalStorageSettings(settings_store.settings);\r\n    }\r\n}, 3 * 1000);  // 3秒おき\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"assets/js/\" + chunkId + \".\" + {\"91\":\"02cbb927\",\"692\":\"3d21ef33\"}[chunkId] + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkKonomiTV\"] = self[\"webpackChunkKonomiTV\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(8888); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_c","_self","attrs","staticRenderFns","script","component","render","VTabItem","extend","h","props","name","this","computedTransition","on","beforeEnter","onBeforeTransition","afterEnter","onAfterTransition","enterCancelled","onTransitionCancelled","beforeLeave","afterLeave","leaveCancelled","enter","onEnter","genWindowItem","VTabsBar","data","items","methods","register","item","activeItem","internalIndex","push","sort","a","b","index_a","$slots","default","findIndex","element","$vnode","key","index_b","$on","onClick","mandatory","selectedValues","length","updateMandatory","updateItem","indexOf","undefined","updateInternalValue","unregister","constructor","super","options","call","VTabs","genBar","slider","style","height","convertToUnit","activeClass","centerActive","dark","light","optional","mobileBreakpoint","nextIcon","prevIcon","showArrows","value","internalValue","callSlider","change","val","ref","setTextColor","computedColor","setBackgroundColor","backgroundColor","$createElement","genSlider","VTabsItems","updateReverse","oldVal","itemsLength","lastIndex","continuous","Vue","use","Vuetify","VSnackbar","VBtn","VIcon","theme","themes","primary","secondary","twitter","base","lighten1","lighten2","gray","black","background","lighten3","text","darken1","darken2","darken3","customProperties","Utils","getAccessToken","localStorage","getItem","saveAccessToken","access_token","setItem","deleteAccessToken","removeItem","AltOrOption","test","navigator","userAgent","CtrlOrCmd","downloadBlobData","blob","filename","blob_url","URL","createObjectURL","link","document","createElement","download","href","click","revokeObjectURL","escapeHTML","content","html_escape_table","replace","match","getWindowFeatures","popupSizeWidth","popupSizeHeight","window","screen","posTop","posLeft","width","hasActiveElementClass","class_name","activeElement","classList","contains","isFirefox","isSafari","isMobileDevice","isSmartphoneHorizontal","matchMedia","matches","isSmartphoneVertical","isTabletHorizontal","isTabletVertical","isTouchDevice","mathFloor","Math","floor","sleep","seconds","Promise","resolve","setTimeout","time","Date","now","typeof","Object","prototype","toString","slice","toLowerCase","URLtoLink","pattern","waitUntilOnline","addEventListener","_defineProperty","process","self","location","protocol","host","ChannelUtils","getChannelType","display_channel_id","result","groups","channel_type","toUpperCase","e","getChannelForceType","jikkyo_force","success","message","KonomiTVVueInstance","$message","info","warning","error","show","Users","createUser","user_create_request","response","APIClient","post","type","detail","Message","showGenericError","createUserAccessToken","username","password","URLSearchParams","fetchUser","get","fetchUserIcon","responseType","updateUser","user_update_request","put","updateUserIcon","icon","form_data","FormData","append","headers","deleteUser","delete","useUserStore","defineStore","state","is_logged_in","user","user_icon_url","getters","user_niconico_icon_url","niconico_user_id","user_id_slice","actions","console","log","login","silent","logout","settings_store","useSettingsStore","settings","sync_settings","force","request","baseURL","api_base_url","url","startsWith","version","timeout","axios","catch","AxiosError","status","NaN","config","method","error_response","template","user_store","Number","isNaN","Settings","fetchClientSettings","updateClientSettings","sync_settings_keys","default_settings","pinned_channel_ids","showed_panel_last_time","selected_twitter_account_id","saved_twitter_hashtags","tv_streaming_quality","tv_data_saver_mode","tv_low_latency_mode","panel_display_state","tv_panel_active_tab","tv_channel_selection_requires_alt_key","caption_font","always_border_caption_text","specify_caption_opacity","caption_opacity","tv_show_superimpose","tv_show_data_broadcasting","capture_copy_to_clipboard","capture_save_mode","capture_caption_mode","comment_speed_rate","comment_font_size","close_comment_form_after_sending","muted_comment_keywords","muted_niconico_user_ids","mute_vulgar_comments","mute_abusive_discriminatory_prejudiced_comments","mute_big_size_comments","mute_fixed_comments","mute_colored_comments","mute_consecutive_same_characters_comments","fold_panel_after_sending_tweet","reset_hashtag_when_program_switches","auto_add_watching_channel_hashtag","twitter_active_tab","tweet_hashtag_position","tweet_capture_watermark_position","getLocalStorageSettings","JSON","parse","setLocalStorageSettings","stringify","getNormalizedSettings","new_settings","default_settings_key","keys","importClientSettings","file","settings_json","syncClientSettingsToServer","resetClientSettings","default_settings_modified","getSyncableClientSettings","sync_settings_key","syncClientSettingsFromServer","settings_server","settings_server_key","settings_server_value","entries","CommentUtils","getCommentColor","color","color_table","getCommentPosition","position","getCommentSize","size","parseCommentCommand","comment_mail","commands","split","command","parsed_color","parsed_position","parsed_size","isMutedComment","comment","user_id","includes","special_command_comments_pattern","mute_vulgar_comments_pattern","mute_abusive_discriminatory_prejudiced_comments_pattern","mute_consecutive_same_characters_comments_pattern","muted_comment_keyword","endsWith","RegExp","annoying_statistical_comments_pattern","addMutedKeywords","addMutedNiconicoUserIDs","Buffer","from","PlayerUtils","generatePlayerBackgroundURL","background_count","random","padStart","isHEVCVideoSupported","canPlayType","extractAPIQualityFromDPlayer","player","quality","regex","ProgramUtils","decorateProgramInfo","program","mark","pattern1","pattern2","dayjs","pause_time_start","hour","minute","second","pause_time_end","pause_time_start_23","pause_time_end_23","isSameOrAfter","isSameOrBefore","getProgramProgress","progress","diff","start_time","duration","Infinity","getProgramTime","is_short","end_time","format","round","formatString","string","format_string_translation_map","replaceAll","buildFormatStringTranslationMap","zenkaku_table","hankaku_table","merged_table","i","symbol_zenkaku_table","symbol_hankaku_table","enclosed_characters_table","getISO639LanguageCodeName","iso639_language_code","dayjsOriginal","isBetween","utc","timezone","ja","setDefault","date","tz","staticClass","$event","model","callback","expression","_vm","password_showing","directives","rawName","_setup","_v","staticStyle","class","Version","fetchServerVersion","useVersionStore","server_version_info","last_updated_at","client_version","server_version","latest_version","is_client_develop_version","is_server_develop_version","is_update_available","is_version_mismatch","version_info","components","BottomNavigation","computed","mapStores","created","versionStore","Header","Navigation","is_form_dense","userStore","$router","path","_setupProxy","_m","password_validation","username_validation","$refs","validate","is_admin","overrideServerSettingsFromClient","sync_settings_dialog","preventDefault","settings_username","settings_icon","$$v","settings_password_showing","settings_password","scopedSlots","account_delete_confirm_dialog","SettingsBase","is_loading","settings_username_validation","settings_password_validation","watch","settingsStore","sync_settings_json","server_sync_settings","server_sync_settings_json","overrideClientSettingsFromServer","updateAccountInfo","update_type","updateAccountIcon","deleteAccount","$set","resetNVRAMSettings","NVRAM_LOCAL_STORAGE_PREFIX","data_broadcasting_zip_code","data_broadcasting_zip_code_validation","data_broadcasting_prefecture","data_broadcasting_prefectures","zip_code_raw","atob","prefecture_raw","prefecture","charCodeAt","new_value","btoa","prefecture_number","parseInt","String","fromCharCode","region_code_number","region_code_raw","import_settings_file","QUALITY_H264","QUALITY_H265","immediate","handler","exportSettings","settings_json_blob","Blob","importSettings","go","resetSettings","comment_mute_settings_modal","muted_comment_keyword_match_type","prop","event","showing","Boolean","required","interval_timer_id","$emit","Niconico","fetchAuthorizationURL","authorization_url","logoutAccount","CommentMuteSettings","hash","params","authorization_status","authorization_detail","onOAuthCallbackReceived","history","replaceState","loginNiconicoAccount","popup_window","open","onMessage","closed","close","removeEventListener","logoutNiconicoAccount","twitter_account","loginTwitterAccountWithPasswordForm","twitter_password_auth_dialog","twitter_screen_name","twitter_password_showing","twitter_password","Twitter","authWithPassword","twitter_password_auth_request","screen_name","sendTweet","captures","tweet_capture","is_error","is_success","is_twitter_password_auth_sending","loginTwitterAccountWithPassword","twitter_form","current_twitter_account","twitter_accounts","updated_at","reset","logoutTwitterAccount","Array","channels_type","channels","id","removePinnedChannel","stopPropagation","domProps","_s","IProgramDefault","channel_id","network_id","service_id","event_id","title","description","is_free","genres","video_type","video_codec","video_resolution","primary_audio_type","primary_audio_language","primary_audio_sampling_rate","secondary_audio_type","secondary_audio_language","secondary_audio_sampling_rate","ILiveChannelDefault","transport_stream_id","remocon_id","channel_number","is_subchannel","is_radiochannel","is_watchable","is_display","viewer_count","program_present","program_following","Channels","fetchAll","fetch","fetchJikkyoSession","useChannelsStore","channels_list","GR","BS","CS","CATV","SKY","STARDIGIO","is_channels_list_initial_updated","current_program_present","current_program_following","is_showing_live","channel","previous","current","next","current_channel_index","IProgramError","ILiveChannelError","previous_channel_index","index","next_channel_index","channels_list_with_pinned","Map","set","has","channels_list_with_pinned_for_watch","getChannel","find","getChannelByRemoconID","updateChannel","update","async","tab","interval_ids","residue_second","getSeconds","channelsStore","setInterval","beforeDestroy","interval_id","clearInterval","addPinnedChannel","splice","isPinnedChannel","controlDisplayTimer","modifiers","backgroundImage","is_panel_display","shortcut_key_modal","shortcut_key_column_name","shortcut_key_column","shortcut_keys","_l","key_name","shortcut","is_comment_list_dropdown_display","fn","active","initialize_failed_message","is_manual_scroll","LiveCommentManager","AbortController","on_initial_comments_received","on_comment_received","initSession","watch_session_result","initWatchSession","initCommentSession","is_disconnect_message_received","watch_session_info","notice","watch_session","WebSocket","audience_token","send","signal","abort_controller","code","reconnect","keep_seat_interval_id","readyState","OPEN","keepIntervalSec","disconnect_reason","reason","vpos_base_timestamp","vposBaseTime","valueOf","threadId","message_server_url","messageServer","uri","thread_id","your_post_key","yourPostKey","comment_session_info","initial_comments_buffer","initial_comments_received","comment_session","ping","thread","threadkey","res_from","resultcode","chat","yourpost","mail","comment_data","no","my_post","buffered_end","video","buffered","end","comment_delay_time","currentTime","paused","danmaku","draw","sendComment","position_table","vpos","abort","warn","destroy","is_auto_scrolling","comment_list","comment_list_element","comment_list_dropdown_top","comment_list_dropdown_comment","live_comment_manager","visibilitychange_listener","resize_observer","mounted","$el","querySelector","is_user_scrolling","onmousedown","x","clientX","getBoundingClientRect","left","clientWidth","onmouseup","on_user_scrolling","is_dragging","ontouchstart","ontouchend","ontouchmove","onwheel","onscroll","scrollTop","offsetHeight","scrollHeight","disconnect","showCommentListDropdown","comment_list_wrapper_rect","comment_list_wrapper","comment_list_dropdown_height","comment_button_rect","currentTarget","top","hideCommentListDropdown","filter","copyTextToClipboard","clipboard","writeText","addMutedNiconicoUserIds","scrollCommentList","smooth","scrollTo","behavior","initReserveObserver","resize_observer_element","on_resize","comment_area_element","video_element_width","video_element_height","clientHeight","letter_box_height","threshold","comment_area_vertical_margin","comment_area_width","comment_area_height","gcd","y","gcd_result","comment_area_height_aspect","transition","setProperty","removeProperty","ResizeObserver","observe","comment_list_buffer","max_comment_count","initial_comments","visibilityState","max","comment_list_and_buffer_length","niconico_user_premium","genre","genre_index","major","middle","detail_text","detail_heading","zoom_capture_modal","capture","clickCapture","target","tweet_hashtag","is_tweet_hashtag_form_focused","updateTweetLetterCount","tweet_text","is_tweet_text_form_focused","is_logged_in_twitter","tweet_letter_count","editing","hashtag","updateSelectedTwitterAccount","IRecordedVideoDefault","file_path","file_hash","file_size","recording_start_time","recording_end_time","container_format","video_codec_profile","video_scan_type","video_frame_rate","video_resolution_width","video_resolution_height","primary_audio_codec","primary_audio_channel","secondary_audio_codec","secondary_audio_channel","cm_sections","IRecordedProgramDefault","recorded_video","recording_start_margin","recording_end_margin","is_partially_recorded","series_id","series_broadcast_period_id","series_title","episode_number","subtitle","usePlayerStore","event_emitter","mitt","recorded_program","is_control_display","is_fullscreen","is_virtual_keyboard_display","is_video_buffering","is_video_paused","is_background_display","background_url","live_stream_status","live_comment_init_failed_message","draggable","playback_mode","selected_twitter_account","is_twitter_account_list_display","map","is_hashtag_list_display","zoom_capture","captures_element","tweet_captures","is_tweet_sending","some","twitter_account_index","formatHashtag","playerStore","addCaptureList","image_url","off","new_channel_name","old_channel_name","old_channel_hashtag","getChannelHashtag","deep","new_program","old_program","pasteClipboardData","clipboardData","clipboard_item","getAsFile","clickHashtagListButton","clickHashtag","clickAccountButton","fullscreenElement","exitFullscreen","selected","shift","focused","$nextTick","drawProgramTitleOnCapture","image_bitmap","createImageBitmap","canvas","OffscreenCanvas","context","getContext","alpha","desynchronized","willReadFrequently","drawImage","font","fillStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","textBaseline","fillText","convertToBlob","reject","toBlob","channel_name","from_hashtag_list","tweet_hashtag_array","trim","channel_hashtag","join","new_tweet_captures","then","emit","blur","Captures","uploadCapture","web_font_noto_sans_base64","web_font_open_sans_base64","CaptureManager","player_container","container","captured_callback","insertAdjacentHTML","comment_capture_button","capture_button","web_font_noto_sans_url","web_font_open_sans_url","base64_font_prefix","web_font_noto_sans","web_font_open_sans","captureAndSave","with_comments","total_time","channels_store","videoWidth","videoHeight","addHighlight","filename_base","filename_caption","aribb24_caption","plugins","aribb24Caption","aribb24_superimpose","aribb24Superimpose","caption_canvas","getRawCanvas","superimpose_canvas","is_caption_showing","isShowing","isPresent","is_superimpose_showing","caption_text","getTextContent","exif_options","is_caption_composited","is_comment_composited","export_and_save","exportToBlob","setEXIFDataToCapture","capture_normal","capture_caption","promises","canvas_context","comments_image","createCommentsImage","drawComments","filename_real","all","bitmap_canvas","transferFromImageBitmap","removeHighlight","copyBlobToClipboard","convertBlobToPng","add","remove","commentsHTMLtoSVGImage","comments_html","xmlns","svg","createElementNS","setAttribute","foreignObject","appendChild","body","createTextNode","temp","innerHTML","childNodes","image","Image","serialized_svg","XMLSerializer","serializeToString","src","encodeURIComponent","onload","onerror","decode","outerHTML","querySelectorAll","offsetWidth","draw_scale_ratio","draw_height","HTMLCanvasElement","Error","captured_playback_position","json","captured_at","datetime","exif","piexif","TagValues","ImageIFD","XResolution","YResolution","ResolutionUnit","YCbCrPositioning","DateTime","Software","XPComment","ExifIFD","ExifVersion","ComponentsConfiguration","FlashpixVersion","ColorSpace","DateTimeOriginal","DateTimeDigitized","exif_string","dump","blob_string","reader","FileReader","readAsBinaryString","blob_string_new","insert","buffer","Uint8Array","worker","Worker","LivePSIArchivedDataDecoderProxy","Comlink","_bml_browser","WeakMap","LiveDataBroadcastingManager","_classPrivateFieldInitSpec","writable","media_element","videoWrapAspect","remocon_element","remocon_data_broadcasting_element","init","is_data_broadcasting_enabled","initRemoconButtons","container_element","videoWrap","insertAdjacentElement","toggleRemoconButtonsEnabled","toggleRemoconButtonsLoading","this_","_classPrivateFieldSet","BMLBrowser","mediaElement","containerElement","storagePrefix","nvramPrefix","broadcasterDatabasePrefix","videoPlaneModeEnabled","fonts","roundGothic","ROUND_GOTHIC","squareGothic","SQUARE_GOTHIC","indicator","setUrl","loading","setNetworkingGetStatus","connecting","setNetworkingPostStatus","setReceivingStatus","receiving","setEventName","greg","getReg","Greg","sessionStorage","_","setReg","epg","tune","values","router","ip","getConnectionType","isIPConnected","showErrorMessage","bml_browser_width","bml_browser_height","_classPrivateFieldGet","resolution","calculateBMLBrowserScaleFactor","moveVideoElementToBMLBrowser","moveVideoElementToDPlayer","display","is_bml_browser_using_numeric_key","usedKeyList","entry","contentRect","api_quality","live_psi_archived_data_decoder","run","is_bml_available","bxmlInfo","emitMessage","present_or_following","remocon_button_event_abort_controller","buttons","button","arib_key_code","dataset","aribKeyCode","remoconId","processKeyDown","AribKeyCode","Digit0","processKeyUp","switch_channel_type","switch_channel","enabled","container_width","container_height","scale_factor_width","scale_factor_height","scale_factor","min","magnification","is_bml_browser_destroying","getVideoElement","firstElementChild","HTMLParagraphElement","child","children","visibility","HTMLVideoElement","transform","transformOrigin","is_video_element_moved_to_bml_browser","insertBefore","nextElementSibling","source","PLAYBACK_BUFFER_SEC_LOW_LATENCY","PLAYBACK_BUFFER_SEC","Channel","Comment","Program","Remocon","is_remocon_display","is_ime_composing","is_comment_send_just_did","control_interval_id","is_zapping","is_zapping_continuously","player_can_be_destroyed","is_mpegts_supported","mpegts","is_offline","romsounds_context","romsounds_buffers","eventsource","fullscreen_handler","capture_manager","data_broadcasting_manager","shortcut_key_handler","shortcut_key_pressed_at","shortcut_key_list","left_column","icon_height","shortcuts","right_column","unshift","$route","virtualKeyboard","overlaysContent","ongeometrychange","boundingRect","AudioContext","audio_data","decodeAudioData","beforeRouteUpdate","to","destroy_promise","new_channel","old_channel","twitter_component","initPlayer","initEventHandler","initCaptureManager","initShortcutKeyHandler","audioItem","liveLLHLSForKonomiTV","audioValue","textContent","tran","switchPrimaryAudio","artwork","sizes","mediaSession","metadata","MediaMetadata","artist","setPositionState","playbackRate","setActionHandler","play","pause","is_player_event","is_touch_device","clearTimeout","controller","hide","setting","isShow","playback_buffer_sec","DPlayer","lang","live","liveSyncMinBufferSize","loop","airplay","autoplay","hotkey","screenshot","crossOrigin","volume","defaultQuality","qualities","hevc_prefix","speedRate","fontSize","closeCommentFormAfterSend","apiBackend","read","pluginOptions","enableWorker","enableWorkerForMSE","MediaSource","canConstructInDedicatedWorker","enableStashBuffer","liveSync","liveSyncMaxLatency","liveSyncTargetLatency","liveSyncPlaybackRate","aribb24","disableSuperimposeRenderer","normalFont","forceStrokeColor","forceBackgroundColor","opacity","drcsReplacement","enableRawCanvas","useStroke","usePUA","PRACallback","resume","buffer_source_node","createBufferSource","gain_node","createGain","connect","destination","gain","start","setAutoHide","commentInput","settingOriginPanel","fullscreen_container","fullScreen","isFullScreen","onfullscreenchange","webkitFullscreenElement","cancel","requestFullscreen","webkitRequestFullscreen","orientation","lock","webkitExitFullscreen","unlock","on_play_or_pause","sync","ERROR","error_type","reload","force_play","pause_icon","playButton","mobilePlayButton","recover","on_canplay","oncanplay","oncanplaythrough","get_playback_buffer_sec","current_playback_buffer_sec","current_volume","eventsource_url","EventSource","event_raw","client_count","load","pictureInPictureElement","exitPictureInPicture","requestPictureInPicture","switchVideo","clear","tweet_form_element","tag","tagName","editable","getAttribute","is_repeat","repeat","focus","scrollLeft","ctrlKey","metaKey","shiftKey","altKey","switch_remocon_id","focused_capture_index","focused_capture","focused_capture_element","parentElement","scrollIntoView","block","inline","toggle","pictureInPictureEnabled","pipButton","showDanmaku","showDanmakuToggle","checked","is_destroy_player","player_wrapper","handlePlayerControlUIVisibility","is_initial_comments","comments","requestAnimationFrame","CaptureCompositorProxy","current_capture_button","current_comment_capture_button","loadFonts","comment_capture_button_instead","assert","createCaptureCommentData","capture_comment_data","_opacity","selector","comment_element","computed_style","getComputedStyle","font_size","parseFloat","createCaptureExifData","player_store","capture_exif_data","is_comment_composite","create_image_bitmap_results","image_bitmaps","capture_image_bitmap","caption_image_bitmap","superimpose_image_bitmap","capture_compositor_start_time","capture_compositor","mode","caption","superimpose","composite","filename_normal","comments_buffer","emit_comments","throttle","debug","playback_position","LiveEventManager","hideNotice","MediaSessionManager","destroyed","live_artwork","video_artwork","updateMediaSessionPositionState","bind","details","seek_offset","seekOffset","seek","seekTime","PlayerWrapper","live_playback_buffer_seconds","LIVE_PLAYBACK_BUFFER_SECONDS_LOW_LATENCY","LIVE_PLAYBACK_BUFFER_SECONDS","romsound_url","romsound_response","quality_names","stream_api_base_url","quality_name","default_quality","player_manager","player_managers","stashInitialSize","setupVideoPlaybackHandler","setupFullscreenHandler","setupSettingPanelHandler","setupPlayerContainerResizeHandler","is_player_restarting","getPlaybackBufferSeconds","buffered_range_count","buffer_remain","recoverPlayback","live_force_seek_interval_timer_id","on_init_or_quality_change","restart_required_when_quality_switched","onLine","muted","on_canplay_called","tap_count","last_tap","current_time","getTime","time_difference","infoPanel","onwebkitfullscreenchange","player_container_element","resize_handler","player_container_resize_observer","is_player_region_event","player_control_ui_hide_timer_id","player_control_ui_hide_timer","destroying","events","unload","detachMediaElement","VueRouter","routes","redirect","TVHome","TVWatch","TVWatch2","SettingsIndex","SettingsGeneral","SettingsCaption","SettingsDataBroadcasting","SettingsCapture","SettingsAccount","SettingsJikkyo","SettingsTwitter","SettingsServer","Login","Register","NotFound","scrollBehavior","savedPosition","ready","registered","cached","updatefound","updated","registration","waiting","postMessage","offline","SeamlessScrollPolyfill","productionTip","devtools","PiniaVuePlugin","pinia","createPinia","VueVirtualScroller","VuetifyMessageSnackbar","bottom","elevation","autoRemove","closeButtonContent","vuetifyInstance","vuetify","trigger","VTooltip","tooltip","showTriggers","hideTriggers","delay","offset","Icon","App","$mount","is_uploading_settings","$subscribe","detached","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","chunkIds","priority","notFulfilled","fulfilled","j","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","u","chunkId","g","globalThis","Function","obj","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","baseURI","installedChunks","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","forEach","__webpack_exports__"],"sourceRoot":""}